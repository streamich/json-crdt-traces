Model
├─ RootNode 0.0
│  └─ StrNode ..0000.1 { "\\documentclass[10pt,journal,comp" … }
│     └─ StrChunk ..0000.50419!75 len:104852 { "textsc{Doc} rule in Figure~\\ref{" … }
│        ← StrChunk ..0000.110217!4 len:48792 { "milk" }
│          ← StrChunk ..0000.217036!2 len:23824 { "''" }
│            ← StrChunk ..0000.148901!13 len:18279 { "that messages" }
│              ← StrChunk ..0000.125979!1 len:7588 { " " }
│                ← StrChunk ..0000.259735!46 len:3725 { " (a conflict-free replicated dat" … }
│                  ← StrChunk ..0000.124945!4 len:2167 [4]
│                    ← StrChunk ..0000.26472!2 len:771 [2]
│                      ← StrChunk ..0000.27273!1 len:391 [1]
│                        ← StrChunk ..0000.50!12 len:204 { "\n\\usepackage" }
│                          ← StrChunk ..0000.42!7 len:82 [7]
│                            ← StrChunk ..0000.124697!16 len:45 { ",journal,compsoc" }
│                              ← StrChunk ..0000.18!18 len:19 [18]
│                                ← StrChunk ..0000.3!15 len:15 { "\\documentclass[" }
│                                → StrChunk ..0000.36!4 len:4 { "10pt" }
│                              → StrChunk ..0000.124720!8 len:10 { "IEEEtran" }
│                                ← StrChunk ..0000.40!2 len:2 { "]{" }
│                            → StrChunk ..0000.227851!1 len:37 [1]
│                              ← StrChunk ..0000.228167!36 len:37 { "\n\\PassOptionsToPackage{hyphens}{" … }
│                                ← StrChunk ..0000.49!1 len:1 { "}" }
│                              → StrChunk ..0000.227852!35 len:0 [35]
│                                ← StrChunk ..0000.227939!1 len:0 [1]
│                          → StrChunk ..0000.80!1 len:110 { "\n" }
│                            ← StrChunk ..0000.1657!10 len:87 { "nvironment" }
│                              ← StrChunk ..0000.1622!31 len:47 { "\n\\usepackage{amsmath} % align e" }
│                                ← StrChunk ..0000.64!16 len:16 { "[utf8]{inputenc}" }
│                              → StrChunk ..0000.1653!2 len:30 [2]
│                                ← StrChunk ..0000.36661!30 len:30 { "\n\\usepackage{amssymb} % mathbb" }
│                            → StrChunk ..0000.26459!1 len:22 [1]
│                              ← StrChunk ..0000.81!51 len:0 [51]
│                                ← StrChunk ..0000.124775!1 len:0 [1]
│                              → StrChunk ..0000.27263!10 len:22 { "bussproofs" }
│                                ← StrChunk ..0000.26460!12 len:12 { "\\usepackage{" }
│                        → StrChunk ..0000.228097!1 len:187 { "\n" }
│                          ← StrChunk ..0000.26486!4 len:71 { "} % " }
│                            ← StrChunk ..0000.27230!1 len:0 [1]
│                              ← StrChunk ..0000.27232!1 len:0 [1]
│                                ← StrChunk ..0000.27221!9 len:0 [9]
│                              → StrChunk ..0000.26476!10 len:0 [10]
│                                ← StrChunk ..0000.26547!8 len:0 [8]
│                            → StrChunk ..0000.84726!23 len:67 { "\n\\usepackage{rotating} " }
│                              ← StrChunk ..0000.26490!15 len:28 { "inference rules" }
│                                ← StrChunk ..0000.26505!13 len:13 { "notation for " }
│                              → StrChunk ..0000.228123!22 len:16 [22]
│                                ← StrChunk ..0000.84751!16 len:16 { "% sidewaysfigure" }
│                          → StrChunk ..0000.227913!12 len:115 [12]
│                            ← StrChunk ..0000.228098!25 len:115 [25]
│                              ← StrChunk ..0000.228229!1 len:22 { "\n" }
│                                ← StrChunk ..0000.228230!21 len:21 { "\\usepackage{hyperref}" }
│                              → StrChunk ..0000.227978!93 len:93 { "\\usepackage[hyphenbreaks]{breaku" … }
│                                ← StrChunk ..0000.227977!1 len:0 [1]
│                            → StrChunk ..0000.103795!18 len:0 [18]
│                              ← StrChunk ..0000.227925!5 len:0 [5]
│                                ← StrChunk ..0000.227930!9 len:0 [9]
│                              → StrChunk ..0000.84749!1 len:0 [1]
│                                ← StrChunk ..0000.84767!1 len:0 [1]
│                      → StrChunk ..0000.15344!10 len:380 { "time-stamp" }
│                        ← StrChunk ..0000.155809!43 len:322 { "\n% Theorem environments\n\\usepack" … }
│                          ← StrChunk ..0000.222!2 len:31 { "]{" }
│                            ← StrChunk ..0000.197!14 len:23 { "\n\\usepackage[n" }
│                              ← StrChunk ..0000.124829!1 len:0 [1]
│                                ← StrChunk ..0000.132!44 len:0 [44]
│                                → StrChunk ..0000.176!21 len:0 [21]
│                              → StrChunk ..0000.211!11 len:9 [11]
│                                ← StrChunk ..0000.124749!9 len:9 { "ocompress" }
│                            → StrChunk ..0000.231!1 len:6 [1]
│                              ← StrChunk ..0000.224!5 len:4 [5]
│                                ← StrChunk ..0000.124734!4 len:4 { "cite" }
│                              → StrChunk ..0000.104149!1 len:2 { "\n" }
│                                ← StrChunk ..0000.232!1 len:1 { "}" }
│                          → StrChunk ..0000.104150!54 len:248 { "\n% Diagrams\n\\usepackage{tikz}\n\\u" … }
│                            ← StrChunk ..0000.155854!64 len:141 { "\\newtheorem{theorem}{Theorem}\n\\n" … }
│                              ← StrChunk ..0000.155852!1 len:37 { "\n" }
│                                ← StrChunk ..0000.155927!36 len:36 { "\n\\newtheorem{definition}{Definit" … }
│                              → StrChunk ..0000.155853!1 len:40 { "\n" }
│                                ← StrChunk ..0000.160210!39 len:39 { "\n\\newtheorem*{convergence-thm}{T" … }
│                            → StrChunk ..0000.256!25 len:53 { "ta-cen-ter da-ta-cen-ters" }
│                              ← StrChunk ..0000.253!1 len:17 { "-" }
│                                ← StrChunk ..0000.233!16 len:16 { "\n\\hyphenation{da" }
│                              → StrChunk ..0000.124831!10 len:11 { "net-works " }
│                                ← StrChunk ..0000.15343!1 len:1 { " " }
│                        → StrChunk ..0000.26757!1 len:48 [1]
│                          ← StrChunk ..0000.26734!23 len:2 [23]
│                            ← StrChunk ..0000.1796!1 len:2 [1]
│                              ← StrChunk ..0000.283!14 len:2 [14]
│                                ← StrChunk ..0000.281!2 len:2 { "}\n" }
│                              → StrChunk ..0000.26661!37 len:0 [37]
│                                ← StrChunk ..0000.26656!1 len:0 [1]
│                            → StrChunk ..0000.26619!1 len:0 [1]
│                              ← StrChunk ..0000.26657!2 len:0 [2]
│                                ← StrChunk ..0000.26698!18 len:0 [18]
│                              → StrChunk ..0000.26620!20 len:0 [20]
│                                ← StrChunk ..0000.27112!1 len:0 [1]
│                          → StrChunk ..0000.62603!10 len:46 [10]
│                            ← StrChunk ..0000.62592!1 len:25 { "\n" }
│                              ← StrChunk ..0000.27053!1 len:0 [1]
│                                ← StrChunk ..0000.26640!15 len:0 [15]
│                              → StrChunk ..0000.209326!15 len:24 { "includeappendix" }
│                                ← StrChunk ..0000.62594!9 len:9 { "\\newif\\if" }
│                            → StrChunk ..0000.62615!10 len:21 [10]
│                              ← StrChunk ..0000.209351!15 len:17 { "includeappendix" }
│                                ← StrChunk ..0000.62613!2 len:2 { "\n\\" }
│                              → StrChunk ..0000.155922!5 len:4 [5]
│                                ← StrChunk ..0000.162624!4 len:4 { "true" }
│                    → StrChunk ..0000.124870!7 len:1396 [7]
│                      ← StrChunk ..0000.27052!1 len:521 { "}" }
│                        ← StrChunk ..0000.1797!3 len:140 { "\n% " }
│                          ← StrChunk ..0000.27077!4 len:44 [4]
│                            ← StrChunk ..0000.62593!1 len:25 { "\n" }
│                              ← StrChunk ..0000.84774!4 len:0 [4]
│                                ← StrChunk ..0000.84782!5 len:0 [5]
│                                → StrChunk ..0000.62625!5 len:0 [5]
│                              → StrChunk ..0000.27106!1 len:24 { ";" }
│                                ← StrChunk ..0000.27054!23 len:23 { "\n\\newcommand{\\evalto}{\\" }
│                            → StrChunk ..0000.27097!4 len:19 [4]
│                              ← StrChunk ..0000.27111!1 len:17 { ";" }
│                                ← StrChunk ..0000.27081!16 len:16 { "\\Longrightarrow\\" }
│                              → StrChunk ..0000.26655!1 len:2 { "\n" }
│                                ← StrChunk ..0000.27101!1 len:1 { "}" }
│                          → StrChunk ..0000.1827!1 len:93 [1]
│                            ← StrChunk ..0000.1834!16 len:23 { "older character " }
│                              ← StrChunk ..0000.1829!1 len:6 { "h" }
│                                ← StrChunk ..0000.1822!5 len:5 { "Place" }
│                              → StrChunk ..0000.1830!2 len:1 [2]
│                                ← StrChunk ..0000.1851!1 len:1 { "l" }
│                            → StrChunk ..0000.1852!36 len:70 { ", but works in math mode\n\\newcom" … }
│                              ← StrChunk ..0000.1801!21 len:21 { "ike \\textvisiblespace" }
│                                ← StrChunk ..0000.1800!1 len:0 [1]
│                              → StrChunk ..0000.1888!12 len:13 { "\\placeholder" }
│                                ← StrChunk ..0000.27051!1 len:1 { "{" }
│                        → StrChunk ..0000.1931!3 len:380 [3]
│                          ← StrChunk ..0000.1937!70 len:254 { "n.07em\n    \\vrule height.3ex\n   " … }
│                            ← StrChunk ..0000.2089!1 len:31 [1]
│                              ← StrChunk ..0000.2095!1 len:17 { "7" }
│                                ← StrChunk ..0000.1900!16 len:16 { "{%\n  \\makebox[0." }
│                              → StrChunk ..0000.1917!14 len:14 { "em]{%\n    \\ker" }
│                                ← StrChunk ..0000.1916!1 len:0 [1]
│                            → StrChunk ..0000.103736!59 len:153 { "\n% Span multiple columns within " … }
│                              ← StrChunk ..0000.62630!1 len:18 { "\n" }
│                                ← StrChunk ..0000.2009!17 len:17 { "\\kern.07em\n  }%\n}" }
│                              → StrChunk ..0000.2007!1 len:76 [1]
│                                ← StrChunk ..0000.62631!76 len:76 { "\n\\newcommand{\\multialign}[2]{%\n " … }
│                          → StrChunk ..0000.387!14 len:126 [14]
│                            ← StrChunk ..0000.55893!38 len:74 { "Conflict-Free Replicated JSON Da" … }
│                              ← StrChunk ..0000.55883!2 len:36 { "A " }
│                                ← StrChunk ..0000.297!34 len:34 { "\n\n\\begin{document}\n\\sloppy\n\\titl" … }
│                              → StrChunk ..0000.331!46 len:0 [46]
│                                ← StrChunk ..0000.55885!4 len:0 [4]
│                            → StrChunk ..0000.124856!8 len:52 [8]
│                              ← StrChunk ..0000.180983!16 len:26 { "Martin Kleppmann" }
│                                ← StrChunk ..0000.401!10 len:10 { "}\n\\author{" }
│                              → StrChunk ..0000.181006!20 len:26 { "lastair R. Beresford" }
│                                ← StrChunk ..0000.124864!6 len:6 { " and A" }
│                      → StrChunk ..0000.181277!1 len:875 { "}" }
│                        ← StrChunk ..0000.181171!3 len:182 [3]
│                          ← StrChunk ..0000.181055!20 len:109 [20]
│                            ← StrChunk ..0000.181278!2 len:53 { "R." }
│                              ← StrChunk ..0000.124903!7 len:28 { "thanks{" }
│                                ← StrChunk ..0000.124877!2 len:2 { "\n\\" }
│                                → StrChunk ..0000.181205!19 len:19 { "M. Kleppmann and A." }
│                              → StrChunk ..0000.181224!2 len:23 [2]
│                                ← StrChunk ..0000.181228!23 len:23 { " Beresford are with the" }
│                            → StrChunk ..0000.181099!1 len:56 { "," }
│                              ← StrChunk ..0000.181148!20 len:44 { " Computer Laboratory" }
│                                ← StrChunk ..0000.181075!24 len:24 { " University of Cambridge" }
│                              → StrChunk ..0000.181177!8 len:11 { "mbridge," }
│                                ← StrChunk ..0000.181168!3 len:3 { " Ca" }
│                          → StrChunk ..0000.181105!1 len:73 [1]
│                            ← StrChunk ..0000.181116!1 len:70 [1]
│                              ← StrChunk ..0000.181107!9 len:14 { "protect\\\\" }
│                                ← StrChunk ..0000.181100!5 len:5 { " UK.\\" }
│                              → StrChunk ..0000.181252!25 len:56 { ", \\url{arb33@cl.cam.ac.uk" }
│                                ← StrChunk ..0000.181117!31 len:31 { "Email: \\url{mk428@cl.cam.ac.uk}" }
│                            → StrChunk ..0000.181280!1 len:3 { "." }
│                              ← StrChunk ..0000.124939!1 len:1 { "}" }
│                                ← StrChunk ..0000.124910!29 len:0 [29]
│                              → StrChunk ..0000.411!1 len:1 { "}" }
│                                ← StrChunk ..0000.124879!12 len:0 [12]
│                        → StrChunk ..0000.142917!10 len:692 [10]
│                          ← StrChunk ..0000.143677!1 len:347 [1]
│                            ← StrChunk ..0000.143678!9 len:85 { "abstract " }
│                              ← StrChunk ..0000.143664!3 len:51 { "\n% " }
│                                ← StrChunk ..0000.124471!48 len:48 { "\n\n\\IEEEtitleabstractindextext{%\n" … }
│                              → StrChunk ..0000.143688!15 len:25 { ": 100-200 words" }
│                                ← StrChunk ..0000.143667!10 len:10 { "word limit" }
│                            → StrChunk ..0000.142716!120 len:262 { "This data structure is modified " … }
│                              ← StrChunk ..0000.142629!85 len:86 { "Many applications model their da" … }
│                                ← StrChunk ..0000.124519!1 len:1 { "\n" }
│                              → StrChunk ..0000.142894!15 len:56 [15]
│                                ← StrChunk ..0000.142838!56 len:56 { "performed sequentially on a sing" … }
│                          → StrChunk ..0000.180470!44 len:345 { ", it is unclear what the semanti" … }
│                            ← StrChunk ..0000.142959!20 len:72 [20]
│                              ← StrChunk ..0000.142937!22 len:26 { "the data is replicated" }
│                                ← StrChunk ..0000.142927!4 len:4 { " if " }
│                              → StrChunk ..0000.143032!45 len:46 { "and modified concurrently on mul" … }
│                                ← StrChunk ..0000.142979!1 len:1 { " " }
│                            → StrChunk ..0000.143277!5 len:229 { "such " }
│                              ← StrChunk ..0000.143098!174 len:175 { " In this paper we present an alg" … }
│                                ← StrChunk ..0000.143077!1 len:1 { "." }
│                              → StrChunk ..0000.143282!44 len:49 { "all replicas converge towards th" … }
│                                ← StrChunk ..0000.143272!5 len:5 { "that " }
│                  → StrChunk ..0000.125291!36 len:1512 { ", and to synchronize its state w" … }
│                    ← StrChunk ..0000.143383!3 len:801 [3]
│                      ← StrChunk ..0000.143609!8 len:384 { " and in " }
│                        ← StrChunk ..0000.225899!2 len:331 [2]
│                          ← StrChunk ..0000.226007!14 len:305 { "deployment on " }
│                            ← StrChunk ..0000.143450!107 len:245 { "The algorithm performs all mergi" … }
│                              ← StrChunk ..0000.143386!61 len:114 { ", which can be modified by inser" … }
│                                ← StrChunk ..0000.143326!51 len:51 { ". It supports arbitrarily nested" … }
│                                → StrChunk ..0000.143381!2 len:2 { ". " }
│                              → StrChunk ..0000.225903!15 len:24 { "t suitable for " }
│                                ← StrChunk ..0000.225890!9 len:9 { " making i" }
│                            → StrChunk ..0000.225971!30 len:46 { "with poor network connectivity" }
│                              ← StrChunk ..0000.225918!15 len:15 { "mobile devices " }
│                                ← StrChunk ..0000.226001!3 len:0 [3]
│                              → StrChunk ..0000.225933!19 len:1 [19]
│                                ← StrChunk ..0000.226048!1 len:1 { "," }
│                          → StrChunk ..0000.178388!10 len:26 [10]
│                            ← StrChunk ..0000.178386!1 len:26 { "," }
│                              ← StrChunk ..0000.143584!25 len:25 { " in peer-to-peer networks" }
│                                ← StrChunk ..0000.143557!27 len:0 [27]
│                              → StrChunk ..0000.178467!3 len:0 [3]
│                                ← StrChunk ..0000.178387!1 len:0 [1]
│                            → StrChunk ..0000.178416!37 len:0 [37]
│                              ← StrChunk ..0000.178398!16 len:0 [16]
│                                ← StrChunk ..0000.178460!7 len:0 [7]
│                              → StrChunk ..0000.178380!3 len:0 [3]
│                                ← StrChunk ..0000.178414!1 len:0 [1]
│                        → StrChunk ..0000.178807!1 len:45 [1]
│                          ← StrChunk ..0000.178777!2 len:45 [2]
│                            ← StrChunk ..0000.178663!5 len:45 [5]
│                              ← StrChunk ..0000.178637!20 len:45 [20]
│                                ← StrChunk ..0000.143619!45 len:45 { "messaging systems with end-to-en" … }
│                              → StrChunk ..0000.178760!5 len:0 [5]
│                                ← StrChunk ..0000.178704!48 len:0 [48]
│                            → StrChunk ..0000.178872!17 len:0 [17]
│                              ← StrChunk ..0000.178809!53 len:0 [53]
│                                ← StrChunk ..0000.178783!24 len:0 [24]
│                              → StrChunk ..0000.178862!4 len:0 [4]
│                                ← StrChunk ..0000.178870!1 len:0 [1]
│                          → StrChunk ..0000.178539!1 len:0 [1]
│                            ← StrChunk ..0000.178752!4 len:0 [4]
│                              ← StrChunk ..0000.178765!6 len:0 [6]
│                                ← StrChunk ..0000.178779!2 len:0 [2]
│                              → StrChunk ..0000.178657!3 len:0 [3]
│                                ← StrChunk ..0000.178668!18 len:0 [18]
│                            → StrChunk ..0000.178540!8 len:0 [8]
│                              ← StrChunk ..0000.178556!11 len:0 [11]
│                                ← StrChunk ..0000.178578!29 len:0 [29]
│                              → StrChunk ..0000.143617!1 len:0 [1]
│                                ← StrChunk ..0000.178537!1 len:0 [1]
│                      → StrChunk ..0000.124239!1 len:417 [1]
│                        ← StrChunk ..0000.124539!88 len:269 { "\n\n\\begin{IEEEkeywords}\nCRDTs, Co" … }
│                          ← StrChunk ..0000.142836!1 len:15 [1]
│                            ← StrChunk ..0000.142981!24 len:0 [24]
│                              ← StrChunk ..0000.142980!1 len:0 [1]
│                                ← StrChunk ..0000.143377!2 len:0 [2]
│                                → StrChunk ..0000.143029!1 len:0 [1]
│                              → StrChunk ..0000.142909!4 len:0 [4]
│                                ← StrChunk ..0000.142931!3 len:0 [3]
│                            → StrChunk ..0000.124537!1 len:15 [1]
│                              ← StrChunk ..0000.124520!3 len:0 [3]
│                                ← StrChunk ..0000.142714!1 len:0 [1]
│                              → StrChunk ..0000.124523!14 len:15 { "\\end{abstract}" }
│                                ← StrChunk ..0000.124538!1 len:1 { "\n" }
│                          → StrChunk ..0000.124174!25 len:166 { "\\IEEEraisesectionheading{" }
│                            ← StrChunk ..0000.412!13 len:77 { "\n\\maketitle\n\n" }
│                              ← StrChunk ..0000.124627!52 len:64 { "Semantics, Eventual Consistency." … }
│                                ← StrChunk ..0000.180514!12 len:12 { "Operational " }
│                              → StrChunk ..0000.451!4 len:0 [4]
│                                ← StrChunk ..0000.425!20 len:0 [20]
│                            → StrChunk ..0000.477!1 len:64 { "\n" }
│                              ← StrChunk ..0000.124199!25 len:47 { "\\label{sec:introduction}}" }
│                                ← StrChunk ..0000.455!22 len:22 { "\\section{Introduction}" }
│                              → StrChunk ..0000.124950!1 len:16 { "U" }
│                                ← StrChunk ..0000.124224!15 len:15 { "\n\\IEEEPARstart{" }
│                        → StrChunk ..0000.124999!5 len:148 [5]
│                          ← StrChunk ..0000.124961!16 len:54 [16]
│                            ← StrChunk ..0000.124242!4 len:10 [4]
│                              ← StrChunk ..0000.124955!4 len:6 { "sers" }
│                                ← StrChunk ..0000.124240!2 len:2 { "}{" }
│                              → StrChunk ..0000.124959!2 len:4 { "of" }
│                                ← StrChunk ..0000.124246!2 len:2 { "} " }
│                            → StrChunk ..0000.143719!20 len:44 { " such as smartphones" }
│                              ← StrChunk ..0000.143762!1 len:16 { "," }
│                                ← StrChunk ..0000.124977!15 len:15 { " mobile devices" }
│                              → StrChunk ..0000.124992!7 len:8 { " expect" }
│                                ← StrChunk ..0000.143763!1 len:1 { "," }
│                          → StrChunk ..0000.125015!7 len:94 [7]
│                            ← StrChunk ..0000.178889!3 len:13 [3]
│                              ← StrChunk ..0000.178908!1 len:1 { " " }
│                                ← StrChunk ..0000.178895!13 len:0 [13]
│                              → StrChunk ..0000.143764!1 len:12 { "s" }
│                                ← StrChunk ..0000.125004!11 len:11 { "application" }
│                            → StrChunk ..0000.125025!5 len:81 { " work" }
│                              ← StrChunk ..0000.143750!9 len:12 { " continue" }
│                                ← StrChunk ..0000.125022!3 len:3 { " to" }
│                              → StrChunk ..0000.125030!61 len:64 { " while the device is offline or " … }
│                                ← StrChunk ..0000.143759!3 len:3 { "ing" }
│                    → StrChunk ..0000.226650!6 len:675 { " with " }
│                      ← StrChunk ..0000.226509!9 len:346 { " the same" }
│                        ← StrChunk ..0000.125486!4 len:257 { " and" }
│                          ← StrChunk ..0000.125434!3 len:151 [3]
│                            ← StrChunk ..0000.125370!39 len:103 { " Examples of such applications i" … }
│                              ← StrChunk ..0000.125327!43 len:55 { "other devices when the network i" … }
│                                ← StrChunk ..0000.125475!11 len:11 { "the user's " }
│                                → StrChunk ..0000.125091!1 len:1 { "." }
│                              → StrChunk ..0000.125442!1 len:9 { "s" }
│                                ← StrChunk ..0000.125426!8 len:8 { "calendar" }
│                            → StrChunk ..0000.125445!11 len:48 { "note-taking" }
│                              ← StrChunk ..0000.125409!15 len:17 { "address books, " }
│                                ← StrChunk ..0000.125437!2 len:2 { ", " }
│                              → StrChunk ..0000.125456!1 len:20 { "," }
│                                ← StrChunk ..0000.143765!19 len:19 { " tools, to-do lists" }
│                          → StrChunk ..0000.125552!11 len:102 { " collaborat" }
│                            ← StrChunk ..0000.226445!10 len:30 { "Similarly," }
│                              ← StrChunk ..0000.125490!2 len:20 { ". " }
│                                ← StrChunk ..0000.125457!18 len:18 { " password managers" }
│                              → StrChunk ..0000.125534!18 len:0 [18]
│                                ← StrChunk ..0000.125492!11 len:0 [11]
│                            → StrChunk ..0000.226592!15 len:61 { "simultaneously " }
│                              ← StrChunk ..0000.226461!41 len:42 { "ve work often requires several p" … }
│                                ← StrChunk ..0000.226402!1 len:1 { "i" }
│                              → StrChunk ..0000.226502!7 len:4 [7]
│                                ← StrChunk ..0000.226542!4 len:4 { "edit" }
│                        → StrChunk ..0000.125612!14 len:80 { ", presentation" }
│                          ← StrChunk ..0000.125579!1 len:27 { " " }
│                            ← StrChunk ..0000.178925!35 len:0 [35]
│                              ← StrChunk ..0000.125563!13 len:0 [13]
│                                ← StrChunk ..0000.226403!13 len:0 [13]
│                              → StrChunk ..0000.125576!3 len:0 [3]
│                                ← StrChunk ..0000.178923!1 len:0 [1]
│                            → StrChunk ..0000.125588!1 len:26 [1]
│                              ← StrChunk ..0000.125580!8 len:13 { "document" }
│                                ← StrChunk ..0000.125590!5 len:5 { "text " }
│                              → StrChunk ..0000.125611!1 len:13 [1]
│                                ← StrChunk ..0000.125598!13 len:13 { ", spreadsheet" }
│                          → StrChunk ..0000.125643!7 len:39 [7]
│                            ← StrChunk ..0000.125636!1 len:29 [1]
│                              ← StrChunk ..0000.125627!9 len:9 { ", graphic" }
│                                ← StrChunk ..0000.125626!1 len:0 [1]
│                              → StrChunk ..0000.125668!14 len:20 { "other kinds of" }
│                                ← StrChunk ..0000.125637!6 len:6 { ", and " }
│                            → StrChunk ..0000.226533!2 len:10 [2]
│                              ← StrChunk ..0000.180968!1 len:9 [1]
│                                ← StrChunk ..0000.125650!9 len:9 { " document" }
│                              → StrChunk ..0000.226582!1 len:1 { "," }
│                                ← StrChunk ..0000.226546!36 len:0 [36]
│                      → StrChunk ..0000.179106!1 len:323 [1]
│                        ← StrChunk ..0000.179000!1 len:100 [1]
│                          ← StrChunk ..0000.226689!10 len:100 [10]
│                            ← StrChunk ..0000.226656!8 len:99 [8]
│                              ← StrChunk ..0000.226685!1 len:13 [1]
│                                ← StrChunk ..0000.226672!13 len:13 { "each person's" }
│                              → StrChunk ..0000.226709!79 len:86 { "reflected on the other collabora" … }
│                                ← StrChunk ..0000.226583!7 len:7 { " edits " }
│                            → StrChunk ..0000.125659!1 len:1 [1]
│                              ← StrChunk ..0000.226455!4 len:0 [4]
│                                ← StrChunk ..0000.226590!2 len:0 [2]
│                              → StrChunk ..0000.125683!1 len:1 [1]
│                                ← StrChunk ..0000.125660!1 len:1 { "." }
│                          → StrChunk ..0000.179186!1 len:0 [1]
│                            ← StrChunk ..0000.179022!9 len:0 [9]
│                              ← StrChunk ..0000.179001!19 len:0 [19]
│                                ← StrChunk ..0000.178996!4 len:0 [4]
│                              → StrChunk ..0000.179144!34 len:0 [34]
│                                ← StrChunk ..0000.179033!55 len:0 [55]
│                            → StrChunk ..0000.179178!4 len:0 [4]
│                              ← StrChunk ..0000.179187!2 len:0 [2]
│                                ← StrChunk ..0000.179191!39 len:0 [39]
│                              → StrChunk ..0000.179108!9 len:0 [9]
│                                ← StrChunk ..0000.179088!18 len:0 [18]
│                        → StrChunk ..0000.143942!1 len:223 { "t" }
│                          ← StrChunk ..0000.125738!5 len:162 [5]
│                            ← StrChunk ..0000.178995!1 len:53 { "\n" }
│                              ← StrChunk ..0000.179020!1 len:0 [1]
│                                ← StrChunk ..0000.179031!1 len:0 [1]
│                              → StrChunk ..0000.125698!40 len:52 { "applications have in common is t" … }
│                                ← StrChunk ..0000.125684!12 len:12 { "\nWhat these " }
│                            → StrChunk ..0000.179230!2 len:109 [2]
│                              ← StrChunk ..0000.179262!1 len:106 { "T" }
│                                ← StrChunk ..0000.125743!105 len:105 { "application state needs to be re" … }
│                              → StrChunk ..0000.143938!3 len:3 { "he " }
│                                ← StrChunk ..0000.143910!28 len:0 [28]
│                          → StrChunk ..0000.143894!4 len:60 { " to " }
│                            ← StrChunk ..0000.125896!11 len:19 { "raditional " }
│                              ← StrChunk ..0000.125852!44 len:0 [44]
│                                ← StrChunk ..0000.126024!1 len:0 [1]
│                              → StrChunk ..0000.143892!2 len:8 [2]
│                                ← StrChunk ..0000.143884!8 len:8 { "approach" }
│                            → StrChunk ..0000.179263!17 len:37 { " serializability," }
│                              ← StrChunk ..0000.143909!1 len:20 { "," }
│                                ← StrChunk ..0000.125907!19 len:19 { "concurrency control" }
│                              → StrChunk ..0000.125945!34 len:0 [34]
│                                ← StrChunk ..0000.125926!1 len:0 [1]
│                → StrChunk ..0000.179447!19 len:3862 [19]
│                  ← StrChunk ..0000.216049!6 len:1578 { "gister" }
│                    ← StrChunk ..0000.126458!1 len:1157 { "." }
│                      ← StrChunk ..0000.179306!1 len:470 { "e" }
│                        ← StrChunk ..0000.179284!13 len:354 { " availability" }
│                          ← StrChunk ..0000.143969!5 len:167 { "that " }
│                            ← StrChunk ..0000.126109!1 len:123 [1]
│                              ← StrChunk ..0000.143784!23 len:108 { "~\\cite{Davidson:1985hv}" }
│                                ← StrChunk ..0000.126025!84 len:84 { "would cause the application to b" … }
│                                → StrChunk ..0000.143813!1 len:1 { "." }
│                              → StrChunk ..0000.143818!14 len:15 { "If we require " }
│                                ← StrChunk ..0000.126110!1 len:1 { " " }
│                            → StrChunk ..0000.143847!20 len:39 { " work regardless of " }
│                              ← StrChunk ..0000.143844!3 len:12 [3]
│                                ← StrChunk ..0000.143832!12 len:12 { "applications" }
│                              → StrChunk ..0000.143871!7 len:7 { "network" }
│                                ← StrChunk ..0000.143867!4 len:0 [4]
│                          → StrChunk ..0000.143879!5 len:174 { " that" }
│                            ← StrChunk ..0000.143815!1 len:99 [1]
│                              ← StrChunk ..0000.126111!1 len:1 [1]
│                                ← StrChunk ..0000.143878!1 len:1 { "," }
│                              → StrChunk ..0000.126113!98 len:98 { " we must assume that users can m" … }
│                                ← StrChunk ..0000.126112!1 len:0 [1]
│                            → StrChunk ..0000.126272!2 len:70 [2]
│                              ← StrChunk ..0000.179299!2 len:63 { "to" }
│                                ← StrChunk ..0000.126211!61 len:61 { " any resulting conflicts must be" … }
│                              → StrChunk ..0000.126286!3 len:7 { "olv" }
│                                ← StrChunk ..0000.126274!4 len:4 { " res" }
│                        → StrChunk ..0000.179324!2 len:115 { "a " }
│                          ← StrChunk ..0000.126330!9 len:49 [9]
│                            ← StrChunk ..0000.126290!2 len:30 [2]
│                              ← StrChunk ..0000.179303!1 len:0 [1]
│                                ← StrChunk ..0000.126289!1 len:0 [1]
│                              → StrChunk ..0000.126306!24 len:30 { "icts is to discard some " }
│                                ← StrChunk ..0000.126292!6 len:6 { " confl" }
│                            → StrChunk ..0000.126353!3 len:19 [3]
│                              ← StrChunk ..0000.179320!4 len:18 { "when" }
│                                ← StrChunk ..0000.126339!14 len:14 { "modifications " }
│                              → StrChunk ..0000.126460!1 len:1 { " " }
│                                ← StrChunk ..0000.126459!1 len:0 [1]
│                          → StrChunk ..0000.126406!2 len:64 [2]
│                            ← StrChunk ..0000.126399!6 len:15 { " occur" }
│                              ← StrChunk ..0000.126398!1 len:8 [1]
│                                ← StrChunk ..0000.126390!8 len:8 { "conflict" }
│                              → StrChunk ..0000.179328!1 len:1 { "s" }
│                                ← StrChunk ..0000.126405!1 len:0 [1]
│                            → StrChunk ..0000.126410!27 len:49 [27]
│                              ← StrChunk ..0000.126489!19 len:21 { "for example using a" }
│                                ← StrChunk ..0000.126408!2 len:2 { ", " }
│                              → StrChunk ..0000.126508!7 len:28 { " policy" }
│                                ← StrChunk ..0000.126437!21 len:21 { " ``last writer wins''" }
│                      → StrChunk ..0000.216098!13 len:686 { "supports the " }
│                        ← StrChunk ..0000.143990!91 len:541 { " applications solve this problem" … }
│                          ← StrChunk ..0000.179356!11 len:221 { "avoided whe" }
│                            ← StrChunk ..0000.179332!24 len:186 { " and therefore should be" }
│                              ← StrChunk ..0000.126548!113 len:161 { "sirable as it incurs data loss. " … }
│                                ← StrChunk ..0000.126515!31 len:31 { " However, this approach is unde" }
│                                → StrChunk ..0000.230155!17 len:17 { " and error-prone," }
│                              → StrChunk ..0000.126661!1 len:1 { " " }
│                                ← StrChunk ..0000.179330!1 len:0 [1]
│                            → StrChunk ..0000.179367!1 len:24 [1]
│                              ← StrChunk ..0000.179384!1 len:15 [1]
│                                ← StrChunk ..0000.179369!15 len:15 { "never possible." }
│                              → StrChunk ..0000.143977!9 len:9 { "\n\nCurrent" }
│                                ← StrChunk ..0000.126662!60 len:0 [60]
│                          → StrChunk ..0000.215535!9 len:229 { "supports " }
│                            ← StrChunk ..0000.144209!1 len:120 { "a" }
│                              ← StrChunk ..0000.144165!26 len:27 { " In this paper we present " }
│                                ← StrChunk ..0000.144105!1 len:1 { "." }
│                              → StrChunk ..0000.144210!76 len:92 { " datatype that provides the full" … }
│                                ← StrChunk ..0000.144399!16 len:16 { " general-purpose" }
│                            → StrChunk ..0000.215804!24 len:100 { " As we shall see later, " }
│                              ← StrChunk ..0000.144311!53 len:53 { "concurrent modifications without" … }
│                                ← StrChunk ..0000.144286!25 len:0 [25]
│                              → StrChunk ..0000.216085!11 len:23 { " typically " }
│                                ← StrChunk ..0000.215910!12 len:12 { "our approach" }
│                        → StrChunk ..0000.216303!1 len:132 [1]
│                          ← StrChunk ..0000.216193!9 len:86 [9]
│                            ← StrChunk ..0000.216144!42 len:76 { "modifications into a JSON data s" … }
│                              ← StrChunk ..0000.216276!11 len:32 { "concurrent " }
│                                ← StrChunk ..0000.216123!21 len:21 { "automatic merging of " }
│                              → StrChunk ..0000.216186!3 len:2 [3]
│                                ← StrChunk ..0000.216902!2 len:2 { "We" }
│                            → StrChunk ..0000.216096!1 len:10 [1]
│                              ← StrChunk ..0000.216111!6 len:0 [6]
│                                ← StrChunk ..0000.216189!2 len:0 [2]
│                              → StrChunk ..0000.216294!9 len:10 { "introduce" }
│                                ← StrChunk ..0000.215922!1 len:1 { " " }
│                          → StrChunk ..0000.216323!5 len:46 { "m (a " }
│                            ← StrChunk ..0000.216306!15 len:27 { " general mechan" }
│                              ← StrChunk ..0000.216920!8 len:10 { " single," }
│                                ← StrChunk ..0000.216304!2 len:2 { " a" }
│                              → StrChunk ..0000.216321!2 len:2 [2]
│                                ← StrChunk ..0000.259730!2 len:2 { "is" }
│                            → StrChunk ..0000.216013!14 len:14 [14]
│                              ← StrChunk ..0000.216215!12 len:0 [12]
│                                ← StrChunk ..0000.216264!4 len:0 [4]
│                              → StrChunk ..0000.216039!6 len:14 { "lue re" }
│                                ← StrChunk ..0000.216027!8 len:8 { "multi-va" }
│                    → StrChunk ..0000.216729!6 len:415 { "throug" }
│                      ← StrChunk ..0000.216414!4 len:195 { "chan" }
│                        ← StrChunk ..0000.216388!18 len:96 { "SON data structure" }
│                          ← StrChunk ..0000.216247!6 len:69 { "pdates" }
│                            ← StrChunk ..0000.216065!10 len:40 [10]
│                              ← StrChunk ..0000.216905!15 len:26 { " into our model" }
│                                ← StrChunk ..0000.216328!1 len:1 { ")" }
│                                → StrChunk ..0000.216055!10 len:10 { " to record" }
│                              → StrChunk ..0000.216238!5 len:14 { "ing u" }
│                                ← StrChunk ..0000.216075!9 len:9 { " conflict" }
│                            → StrChunk ..0000.216333!4 len:23 { "odes" }
│                              ← StrChunk ..0000.216329!2 len:10 { " n" }
│                                ← StrChunk ..0000.216268!8 len:8 { " to leaf" }
│                              → StrChunk ..0000.216385!1 len:9 { "J" }
│                                ← StrChunk ..0000.216375!8 len:8 { " in the " }
│                          → StrChunk ..0000.216652!1 len:9 { "T" }
│                            ← StrChunk ..0000.216383!1 len:2 [1]
│                              ← StrChunk ..0000.216386!1 len:1 [1]
│                                ← StrChunk ..0000.216650!1 len:1 { "." }
│                              → StrChunk ..0000.216338!1 len:1 { " " }
│                                ← StrChunk ..0000.216337!1 len:0 [1]
│                            → StrChunk ..0000.216339!31 len:6 [31]
│                              ← StrChunk ..0000.216576!3 len:3 { "his" }
│                                ← StrChunk ..0000.216575!1 len:0 [1]
│                              → StrChunk ..0000.216410!2 len:3 { "me" }
│                                ← StrChunk ..0000.216370!1 len:1 { " " }
│                        → StrChunk ..0000.216605!3 len:95 [3]
│                          ← StrChunk ..0000.216584!8 len:45 { "then pro" }
│                            ← StrChunk ..0000.216419!1 len:4 [1]
│                              ← StrChunk ..0000.216418!1 len:2 { "s" }
│                                ← StrChunk ..0000.220965!1 len:1 { "i" }
│                              → StrChunk ..0000.216441!1 len:2 { " " }
│                                ← StrChunk ..0000.216424!1 len:1 { "m" }
│                            → StrChunk ..0000.216602!3 len:33 [3]
│                              ← StrChunk ..0000.216662!16 len:24 { "consistent basis" }
│                                ← StrChunk ..0000.216594!8 len:8 { "vides a " }
│                              → StrChunk ..0000.216617!9 len:9 { " on which" }
│                                ← StrChunk ..0000.216611!6 len:0 [6]
│                          → StrChunk ..0000.216688!14 len:50 { " any remaining" }
│                            ← StrChunk ..0000.216447!17 len:25 { " applications can" }
│                              ← StrChunk ..0000.216442!5 len:0 [5]
│                                ← StrChunk ..0000.216592!1 len:0 [1]
│                              → StrChunk ..0000.216469!8 len:8 { " resolve" }
│                                ← StrChunk ..0000.216464!5 len:0 [5]
│                            → StrChunk ..0000.216636!10 len:11 { " conflicts" }
│                              ← StrChunk ..0000.216632!4 len:0 [4]
│                                ← StrChunk ..0000.216477!1 len:0 [1]
│                              → StrChunk ..0000.216484!1 len:1 { " " }
│                                ← StrChunk ..0000.216478!6 len:0 [6]
│                      → StrChunk ..0000.216420!2 len:214 [2]
│                        ← StrChunk ..0000.216735!1 len:48 [1]
│                          ← StrChunk ..0000.216793!15 len:47 [15]
│                            ← StrChunk ..0000.216928!1 len:24 { "," }
│                              ← StrChunk ..0000.216835!18 len:20 { "programmatic means" }
│                                ← StrChunk ..0000.216737!2 len:2 { "h " }
│                              → StrChunk ..0000.216739!9 len:3 [9]
│                                ← StrChunk ..0000.216853!3 len:3 { " or" }
│                            → StrChunk ..0000.216886!4 len:23 { "via " }
│                              ← StrChunk ..0000.216751!1 len:1 { " " }
│                                ← StrChunk ..0000.216748!3 len:0 [3]
│                              → StrChunk ..0000.216752!12 len:18 [12]
│                                ← StrChunk ..0000.216868!18 len:18 { "further user input" }
│                          → StrChunk ..0000.216647!1 len:1 [1]
│                            ← StrChunk ..0000.216494!8 len:0 [8]
│                              ← StrChunk ..0000.216490!2 len:0 [2]
│                                ← StrChunk ..0000.216485!3 len:0 [3]
│                              → StrChunk ..0000.216502!12 len:0 [12]
│                                ← StrChunk ..0000.216646!1 len:0 [1]
│                            → StrChunk ..0000.216492!1 len:1 [1]
│                              ← StrChunk ..0000.216543!1 len:1 { "." }
│                                ← StrChunk ..0000.216514!29 len:0 [29]
│                              → StrChunk ..0000.216425!8 len:0 [8]
│                                ← StrChunk ..0000.216488!1 len:0 [1]
│                        → StrChunk ..0000.215963!2 len:166 [2]
│                          ← StrChunk ..0000.216084!1 len:1 [1]
│                            ← StrChunk ..0000.216331!1 len:1 [1]
│                              ← StrChunk ..0000.216371!4 len:0 [4]
│                                ← StrChunk ..0000.216412!1 len:0 [1]
│                              → StrChunk ..0000.216243!2 len:1 [2]
│                                ← StrChunk ..0000.216253!1 len:1 { " " }
│                            → StrChunk ..0000.215923!29 len:0 [29]
│                              ← StrChunk ..0000.216035!2 len:0 [2]
│                                ← StrChunk ..0000.216045!2 len:0 [2]
│                              → StrChunk ..0000.215967!4 len:0 [4]
│                                ← StrChunk ..0000.215954!9 len:0 [9]
│                          → StrChunk ..0000.144364!16 len:165 { " We expect that " }
│                            ← StrChunk ..0000.215878!9 len:0 [9]
│                              ← StrChunk ..0000.215828!14 len:0 [14]
│                                ← StrChunk ..0000.215952!1 len:0 [1]
│                              → StrChunk ..0000.215800!2 len:0 [2]
│                                ← StrChunk ..0000.215842!18 len:0 [18]
│                            → StrChunk ..0000.144434!1 len:149 { " " }
│                              ← StrChunk ..0000.144380!18 len:37 { "this datatype will" }
│                                ← StrChunk ..0000.144415!19 len:19 { "implementations of " }
│                              → StrChunk ..0000.179446!1 len:111 { "\n" }
│                                ← StrChunk ..0000.144451!110 len:110 { "drastically simplify the develop" … }
│                  → StrChunk ..0000.145599!61 len:2284 { "node whose children have an orde" … }
│                    ← StrChunk ..0000.144823!48 len:797 { "It has similarities to XML, and " … }
│                      ← StrChunk ..0000.143986!2 len:128 [2]
│                        ← StrChunk ..0000.179705!1 len:0 [1]
│                          ← StrChunk ..0000.179707!7 len:0 [7]
│                            ← StrChunk ..0000.179593!8 len:0 [8]
│                              ← StrChunk ..0000.179492!70 len:0 [70]
│                                ← StrChunk ..0000.179476!14 len:0 [14]
│                                → StrChunk ..0000.179564!25 len:0 [25]
│                              → StrChunk ..0000.179643!62 len:0 [62]
│                                ← StrChunk ..0000.179607!28 len:0 [28]
│                            → StrChunk ..0000.179722!6 len:0 [6]
│                              ← StrChunk ..0000.179734!19 len:0 [19]
│                                ← StrChunk ..0000.179716!4 len:0 [4]
│                              → StrChunk ..0000.179714!1 len:0 [1]
│                                ← StrChunk ..0000.179720!1 len:0 [1]
│                          → StrChunk ..0000.179466!5 len:0 [5]
│                            ← StrChunk ..0000.179589!2 len:0 [2]
│                              ← StrChunk ..0000.179601!3 len:0 [3]
│                                ← StrChunk ..0000.179635!4 len:0 [4]
│                              → StrChunk ..0000.179490!1 len:0 [1]
│                                ← StrChunk ..0000.179562!1 len:0 [1]
│                            → StrChunk ..0000.144191!9 len:0 [9]
│                              ← StrChunk ..0000.144398!1 len:0 [1]
│                                ← StrChunk ..0000.144435!8 len:0 [8]
│                              → StrChunk ..0000.144081!12 len:0 [12]
│                                ← StrChunk ..0000.144106!59 len:0 [59]
│                        → StrChunk ..0000.144644!17 len:128 { "\\subsection{JSON " }
│                          ← StrChunk ..0000.125848!2 len:1 [2]
│                            ← StrChunk ..0000.126298!4 len:0 [4]
│                              ← StrChunk ..0000.126356!17 len:0 [17]
│                                ← StrChunk ..0000.126546!1 len:0 [1]
│                              → StrChunk ..0000.125927!9 len:0 [9]
│                                ← StrChunk ..0000.126278!4 len:0 [4]
│                            → StrChunk ..0000.125589!1 len:1 [1]
│                              ← StrChunk ..0000.125596!1 len:0 [1]
│                                ← StrChunk ..0000.125696!1 len:0 [1]
│                              → StrChunk ..0000.125504!1 len:1 { "\n" }
│                                ← StrChunk ..0000.125503!1 len:0 [1]
│                          → StrChunk ..0000.144667!5 len:110 { "odel}" }
│                            ← StrChunk ..0000.144662!4 len:6 { "ata " }
│                              ← StrChunk ..0000.144661!1 len:1 [1]
│                                ← StrChunk ..0000.252313!1 len:1 { "D" }
│                              → StrChunk ..0000.144666!1 len:1 [1]
│                                ← StrChunk ..0000.252315!1 len:1 { "M" }
│                            → StrChunk ..0000.144969!41 len:99 { ", used in many databases and web" … }
│                              ← StrChunk ..0000.144909!50 len:56 { " is a popular general-purpose da" … }
│                                ← StrChunk ..0000.144720!6 len:6 { "\n\nJSON" }
│                              → StrChunk ..0000.144726!1 len:2 { " " }
│                                ← StrChunk ..0000.144959!1 len:1 { "." }
│                      → StrChunk ..0000.145284!26 len:621 { "node:\n\n\\begin{description}" }
│                        ← StrChunk ..0000.145090!3 len:257 [3]
│                          ← StrChunk ..0000.145010!74 len:132 { "The structure of a JSON document" … }
│                            ← StrChunk ..0000.144882!1 len:31 [1]
│                              ← StrChunk ..0000.144879!3 len:4 { "in " }
│                                ← StrChunk ..0000.144871!8 len:0 [8]
│                                → StrChunk ..0000.155406!1 len:1 { "S" }
│                              → StrChunk ..0000.144968!1 len:27 { " " }
│                                ← StrChunk ..0000.144883!26 len:26 { "ection~\\ref{sec:json-xml}." }
│                            → StrChunk ..0000.145171!16 len:27 { " for simplicity," }
│                              ← StrChunk ..0000.145210!9 len:10 { " however," }
│                                ← StrChunk ..0000.145170!1 len:1 { ";" }
│                              → StrChunk ..0000.145089!1 len:1 { " " }
│                                ← StrChunk ..0000.145084!5 len:0 [5]
│                          → StrChunk ..0000.145219!31 len:125 { "\n\nA JSON document is a tree con" }
│                            ← StrChunk ..0000.145104!11 len:66 [11]
│                              ← StrChunk ..0000.145201!9 len:20 { "discusses" }
│                                ← StrChunk ..0000.145093!11 len:11 { "this paper " }
│                              → StrChunk ..0000.145120!45 len:46 { "only untyped JSON without an exp" … }
│                                ← StrChunk ..0000.145115!1 len:1 { " " }
│                            → StrChunk ..0000.145250!24 len:28 [24]
│                              ← StrChunk ..0000.146456!5 len:11 [5]
│                                ← StrChunk ..0000.146466!11 len:11 { "taining two" }
│                              → StrChunk ..0000.145806!7 len:17 { "branch " }
│                                ← StrChunk ..0000.145274!10 len:10 { " types of " }
│                        → StrChunk ..0000.145934!24 len:338 { " immutable, but values a" }
│                          ← StrChunk ..0000.151480!9 len:180 { "We treat " }
│                            ← StrChunk ..0000.145349!21 len:164 { " node whose children " }
│                              ← StrChunk ..0000.145342!7 len:14 [7]
│                                ← StrChunk ..0000.145328!14 len:14 { "\n\\item[Map:] A" }
│                              → StrChunk ..0000.145925!1 len:129 { " " }
│                                ← StrChunk ..0000.145400!128 len:128 { "have no defined order, and where" … }
│                            → StrChunk ..0000.145927!4 len:7 { "eys " }
│                              ← StrChunk ..0000.145926!1 len:1 [1]
│                                ← StrChunk ..0000.151490!1 len:1 { "k" }
│                              → StrChunk ..0000.145931!3 len:2 [3]
│                                ← StrChunk ..0000.151494!2 len:2 { "as" }
│                          → StrChunk ..0000.145574!6 len:134 { "\n\\item" }
│                            ← StrChunk ..0000.145960!71 len:118 { " mutable, and key-value mappings" … }
│                              ← StrChunk ..0000.145958!2 len:1 [2]
│                                ← StrChunk ..0000.151498!1 len:1 { "s" }
│                              → StrChunk ..0000.145923!1 len:46 [1]
│                                ← StrChunk ..0000.145528!46 len:46 { " A JSON map is also known as an " … }
│                            → StrChunk ..0000.145581!5 len:10 { "List:" }
│                              ← StrChunk ..0000.145580!1 len:1 [1]
│                                ← StrChunk ..0000.145587!1 len:1 { "[" }
│                              → StrChunk ..0000.145592!7 len:4 [7]
│                                ← StrChunk ..0000.145588!4 len:4 { "] A " }
│                    → StrChunk ..0000.146988!8 len:1426 { "onflict " }
│                      ← StrChunk ..0000.146777!7 len:849 { "single-" }
│                        ← StrChunk ..0000.146129!1 len:589 [1]
│                          ← StrChunk ..0000.145797!8 len:207 [8]
│                            ← StrChunk ..0000.145710!83 len:110 [83]
│                              ← StrChunk ..0000.145660!1 len:110 { " " }
│                                ← StrChunk ..0000.146031!64 len:64 { " The list can be mutated by inse" … }
│                                → StrChunk ..0000.145665!45 len:45 { "A JSON list is also known as an " … }
│                              → StrChunk ..0000.145793!3 len:0 [3]
│                                ← StrChunk ..0000.145796!1 len:0 [1]
│                            → StrChunk ..0000.145310!18 len:97 { "\n\\end{description}" }
│                              ← StrChunk ..0000.145370!15 len:0 [15]
│                                ← StrChunk ..0000.145661!2 len:0 [2]
│                              → StrChunk ..0000.146131!77 len:79 { "A child of a branch node can be " … }
│                                ← StrChunk ..0000.145921!2 len:2 { "\n\n" }
│                          → StrChunk ..0000.146213!106 len:382 { "s a primitive value (string, num" … }
│                            ← StrChunk ..0000.146211!1 len:25 { "f" }
│                              ← StrChunk ..0000.146098!4 len:4 { " lea" }
│                                ← StrChunk ..0000.146095!3 len:0 [3]
│                              → StrChunk ..0000.146105!20 len:20 { " of the tree contain" }
│                                ← StrChunk ..0000.146102!3 len:0 [3]
│                            → StrChunk ..0000.146586!132 len:251 { "\nThis model is sufficient to exp" … }
│                              ← StrChunk ..0000.146477!1 len:110 { "\n" }
│                                ← StrChunk ..0000.146323!109 len:109 { "the value of a leaf node to be m" … }
│                              → StrChunk ..0000.146727!9 len:9 { " list of " }
│                                ← StrChunk ..0000.146718!9 len:0 [9]
│                        → StrChunk ..0000.146504!12 len:253 { "xamples} we " }
│                          ← StrChunk ..0000.146765!1 len:134 [1]
│                            ← StrChunk ..0000.146756!9 len:113 { "character" }
│                              ← StrChunk ..0000.146750!6 len:0 [6]
│                                ← StrChunk ..0000.146736!5 len:0 [5]
│                              → StrChunk ..0000.146889!1 len:104 { " " }
│                                ← StrChunk ..0000.146785!103 len:103 { " strings; character-by-character" … }
│                            → StrChunk ..0000.155408!1 len:21 { "S" }
│                              ← StrChunk ..0000.146481!3 len:3 { "In " }
│                                ← StrChunk ..0000.146478!1 len:0 [1]
│                              → StrChunk ..0000.146485!17 len:17 { "ection~\\ref{sec:e" }
│                                ← StrChunk ..0000.146484!1 len:0 [1]
│                          → StrChunk ..0000.146536!50 len:107 { " examples of using JSON to model" … }
│                            ← StrChunk ..0000.146901!7 len:26 [7]
│                              ← StrChunk ..0000.146516!5 len:26 [5]
│                                ← StrChunk ..0000.216941!26 len:26 { "describe four more complex" }
│                              → StrChunk ..0000.146530!6 len:0 [6]
│                                ← StrChunk ..0000.146521!5 len:0 [5]
│                            → StrChunk ..0000.146983!4 len:31 { "and " }
│                              ← StrChunk ..0000.146961!12 len:26 { "Replication " }
│                                ← StrChunk ..0000.146908!14 len:14 { "\n\n\\subsection{" }
│                              → StrChunk ..0000.146987!1 len:1 [1]
│                                ← StrChunk ..0000.252317!1 len:1 { "C" }
│                      → StrChunk ..0000.575!11 len:569 [11]
│                        ← StrChunk ..0000.146319!2 len:41 [2]
│                          ← StrChunk ..0000.146941!1 len:40 { "}" }
│                            ← StrChunk ..0000.146997!9 len:10 { "esolution" }
│                              ← StrChunk ..0000.146996!1 len:1 [1]
│                                ← StrChunk ..0000.252319!1 len:1 { "R" }
│                              → StrChunk ..0000.146922!19 len:0 [19]
│                                ← StrChunk ..0000.146973!5 len:0 [5]
│                            → StrChunk ..0000.146526!2 len:29 [2]
│                              ← StrChunk ..0000.155471!3 len:29 [3]
│                                ← StrChunk ..0000.155477!29 len:29 { "\\label{sec:intro-replication}" }
│                              → StrChunk ..0000.146479!1 len:0 [1]
│                                ← StrChunk ..0000.146502!1 len:0 [1]
│                          → StrChunk ..0000.125424!2 len:1 [2]
│                            ← StrChunk ..0000.125505!14 len:0 [14]
│                              ← StrChunk ..0000.145116!2 len:0 [2]
│                                ← StrChunk ..0000.146125!1 len:0 [1]
│                              → StrChunk ..0000.125519!3 len:0 [3]
│                                ← StrChunk ..0000.125525!9 len:0 [9]
│                            → StrChunk ..0000.601!6 len:1 [6]
│                              ← StrChunk ..0000.568!1 len:1 { "\n" }
│                                ← StrChunk ..0000.124248!199 len:0 [199]
│                              → StrChunk ..0000.586!15 len:0 [15]
│                                ← StrChunk ..0000.569!6 len:0 [6]
│                        → StrChunk ..0000.148632!46 len:528 { ", which have intermittent networ" … }
│                          ← StrChunk ..0000.35261!1 len:206 [1]
│                            ← StrChunk ..0000.34751!223 len:1 [223]
│                              ← StrChunk ..0000.34749!1 len:1 { "\n" }
│                                ← StrChunk ..0000.478!1 len:0 [1]
│                              → StrChunk ..0000.35262!6 len:0 [6]
│                                ← StrChunk ..0000.35215!46 len:0 [46]
│                            → StrChunk ..0000.148386!150 len:205 { "We consider systems in which a f" … }
│                              ← StrChunk ..0000.148384!1 len:0 [1]
│                                ← StrChunk ..0000.34750!1 len:0 [1]
│                              → StrChunk ..0000.148619!12 len:55 { " and laptops" }
│                                ← StrChunk ..0000.148562!43 len:43 { "focus on mobile devices such as " … }
│                          → StrChunk ..0000.148717!17 len:276 { "modify its local " }
│                            ← StrChunk ..0000.148678!23 len:131 { " Our model allows each " }
│                              ← StrChunk ..0000.151398!82 len:83 { " We do not distinguish between d" … }
│                                ← StrChunk ..0000.148631!1 len:1 { "." }
│                              → StrChunk ..0000.151090!15 len:25 { "optimistically " }
│                                ← StrChunk ..0000.148707!10 len:10 { "device to " }
│                            → StrChunk ..0000.148831!2 len:128 { "\n\n" }
│                              ← StrChunk ..0000.151105!1 len:87 [1]
│                                ← StrChunk ..0000.148744!87 len:87 { "replica of the document, and to " … }
│                              → StrChunk ..0000.148878!23 len:39 [23]
│                                ← StrChunk ..0000.148839!39 len:39 { "Our only requirement of the netw" … }
│              → StrChunk ..0000.228494!2 len:10678 [2]
│                ← StrChunk ..0000.150970!20 len:6298 [20]
│                  ← StrChunk ..0000.149758!5 len:2290 [5]
│                    ← StrChunk ..0000.149469!28 len:712 { " a secure messaging protocol" }
│                      ← StrChunk ..0000.149197!6 len:361 { "order " }
│                        ← StrChunk ..0000.149051!1 len:147 { "." }
│                          ← StrChunk ..0000.148968!2 len:98 { ", " }
│                            ← StrChunk ..0000.149378!7 len:67 { " to all" }
│                              ← StrChunk ..0000.148914!20 len:45 { " are eventually deli" }
│                                ← StrChunk ..0000.149394!20 len:20 { " sent by one replica" }
│                                → StrChunk ..0000.148940!5 len:5 { "vered" }
│                              → StrChunk ..0000.149385!9 len:15 { " replicas" }
│                                ← StrChunk ..0000.149414!6 len:6 { " other" }
│                            → StrChunk ..0000.149030!12 len:29 { "retrying if " }
│                              ← StrChunk ..0000.149014!16 len:3 [16]
│                                ← StrChunk ..0000.149070!3 len:3 { "by " }
│                              → StrChunk ..0000.149042!9 len:14 [9]
│                                ← StrChunk ..0000.149082!14 len:14 { "delivery fails" }
│                          → StrChunk ..0000.149163!13 len:48 [13]
│                            ← StrChunk ..0000.149151!3 len:26 [3]
│                              ← StrChunk ..0000.154099!13 len:14 { "We assume the" }
│                                ← StrChunk ..0000.149096!1 len:1 { " " }
│                              → StrChunk ..0000.154125!3 len:12 { "may" }
│                                ← StrChunk ..0000.149154!9 len:9 { " network " }
│                            → StrChunk ..0000.154086!5 len:22 { "lay, " }
│                              ← StrChunk ..0000.154076!2 len:15 { "de" }
│                                ← StrChunk ..0000.149176!13 len:13 { " arbitrarily " }
│                              → StrChunk ..0000.149189!2 len:2 { "re" }
│                                ← StrChunk ..0000.154078!4 len:0 [4]
│                        → StrChunk ..0000.149375!3 len:208 { "ide" }
│                          ← StrChunk ..0000.149232!14 len:53 { "Our algorithm " }
│                            ← StrChunk ..0000.149205!20 len:25 { " duplicate messages." }
│                              ← StrChunk ..0000.149203!2 len:3 [2]
│                                ← StrChunk ..0000.154093!3 len:3 { "and" }
│                              → StrChunk ..0000.149225!1 len:2 [1]
│                                ← StrChunk ..0000.151500!2 len:2 { "\n\n" }
│                            → StrChunk ..0000.149270!7 len:14 { " client" }
│                              ← StrChunk ..0000.149246!24 len:5 [24]
│                                ← StrChunk ..0000.149369!5 len:5 { "works" }
│                              → StrChunk ..0000.149277!1 len:2 { "s" }
│                                ← StrChunk ..0000.149374!1 len:1 { "-" }
│                          → StrChunk ..0000.151502!29 len:152 { " messages to be delivered via" }
│                            ← StrChunk ..0000.149344!1 len:89 [1]
│                              ← StrChunk ..0000.149535!4 len:70 { "s. T" }
│                                ← StrChunk ..0000.149278!66 len:66 { " and does not depend on any serv" … }
│                              → StrChunk ..0000.149423!19 len:19 { "his approach allows" }
│                                ← StrChunk ..0000.149420!3 len:0 [3]
│                            → StrChunk ..0000.216972!3 len:34 [3]
│                              ← StrChunk ..0000.216980!10 len:34 { "as well as" }
│                                ← StrChunk ..0000.149442!24 len:24 { " a peer-to-peer network " }
│                              → StrChunk ..0000.149466!3 len:0 [3]
│                                ← StrChunk ..0000.216970!2 len:0 [2]
│                      → StrChunk ..0000.105229!1 len:323 { "\n" }
│                        ← StrChunk ..0000.149097!27 len:159 [27]
│                          ← StrChunk ..0000.149596!4 len:158 [4]
│                            ← StrChunk ..0000.149519!11 len:95 [11]
│                              ← StrChunk ..0000.149499!20 len:50 { "~\\cite{Unger:2015kg}" }
│                                ← StrChunk ..0000.149662!27 len:27 { " with end-to-end encryption" }
│                                → StrChunk ..0000.217002!3 len:3 { ". T" }
│                              → StrChunk ..0000.149551!45 len:45 { "he details of the network implem" … }
│                                ← StrChunk ..0000.149539!12 len:0 [12]
│                            → StrChunk ..0000.149497!1 len:63 [1]
│                              ← StrChunk ..0000.149530!1 len:63 { "." }
│                                ← StrChunk ..0000.149600!62 len:62 { "cryptographic protocols are outs" … }
│                              → StrChunk ..0000.149191!3 len:0 [3]
│                                ← StrChunk ..0000.149226!3 len:0 [3]
│                          → StrChunk ..0000.148701!3 len:1 [3]
│                            ← StrChunk ..0000.148934!3 len:0 [3]
│                              ← StrChunk ..0000.148970!22 len:0 [22]
│                                ← StrChunk ..0000.149052!1 len:0 [1]
│                              → StrChunk ..0000.148734!5 len:0 [5]
│                                ← StrChunk ..0000.148833!3 len:0 [3]
│                            → StrChunk ..0000.148556!2 len:1 [2]
│                              ← StrChunk ..0000.148560!1 len:0 [1]
│                                ← StrChunk ..0000.148605!7 len:0 [7]
│                              → StrChunk ..0000.148385!1 len:1 { "\n" }
│                                ← StrChunk ..0000.148536!10 len:0 [10]
│                        → StrChunk ..0000.180545!3 len:163 { "ing" }
│                          ← StrChunk ..0000.149825!5 len:65 [5]
│                            ← StrChunk ..0000.149788!1 len:40 [1]
│                              ← StrChunk ..0000.155410!1 len:4 { "S" }
│                                ← StrChunk ..0000.149785!3 len:3 { "In " }
│                              → StrChunk ..0000.180532!6 len:36 { "define" }
│                                ← StrChunk ..0000.149789!30 len:30 { "ection~\\ref{sec:semantics} we " }
│                            → StrChunk ..0000.149830!16 len:25 { "formal semantics" }
│                              ← StrChunk ..0000.151755!1 len:1 { " " }
│                                ← StrChunk ..0000.151754!1 len:0 [1]
│                              → StrChunk ..0000.149851!8 len:8 { " describ" }
│                                ← StrChunk ..0000.149846!5 len:0 [5]
│                          → StrChunk ..0000.149690!1 len:95 [1]
│                            ← StrChunk ..0000.149819!3 len:29 [3]
│                              ← StrChunk ..0000.149861!27 len:27 { " how conflicts are resolved" }
│                                ← StrChunk ..0000.149859!2 len:0 [2]
│                              → StrChunk ..0000.149889!1 len:2 { "w" }
│                                ← StrChunk ..0000.149784!1 len:1 { " " }
│                            → StrChunk ..0000.149695!3 len:66 [3]
│                              ← StrChunk ..0000.149893!1 len:5 { "a" }
│                                ← StrChunk ..0000.149691!4 len:4 { "hen " }
│                              → StrChunk ..0000.149899!1 len:61 { "." }
│                                ← StrChunk ..0000.149698!60 len:60 { " JSON document is concurrently m" … }
│                    → StrChunk ..0000.106056!14 len:1578 [14]
│                      ← StrChunk ..0000.105458!3 len:536 [3]
│                        ← StrChunk ..0000.105967!5 len:243 [5]
│                          ← StrChunk ..0000.151548!4 len:129 [4]
│                            ← StrChunk ..0000.105257!1 len:29 { " " }
│                              ← StrChunk ..0000.105231!22 len:23 { "Our design is based on" }
│                                ← StrChunk ..0000.149689!1 len:1 { " " }
│                                → StrChunk ..0000.105253!4 len:0 [4]
│                              → StrChunk ..0000.105774!1 len:5 [1]
│                                ← StrChunk ..0000.154133!5 len:5 { "three" }
│                            → StrChunk ..0000.105258!18 len:100 { "simple principles:" }
│                              ← StrChunk ..0000.105777!1 len:1 { " " }
│                                ← StrChunk ..0000.105775!2 len:0 [2]
│                              → StrChunk ..0000.106021!14 len:81 { "automatically " }
│                                ← StrChunk ..0000.105278!67 len:67 { "\n\\begin{enumerate}\n\\item All rep" … }
│                          → StrChunk ..0000.105466!26 len:114 [26]
│                            ← StrChunk ..0000.230172!82 len:114 { " (a requirement known as \\emph{s" … }
│                              ← StrChunk ..0000.105374!4 len:31 { "tate" }
│                                ← StrChunk ..0000.105345!27 len:27 { "converge towards the same s" }
│                              → StrChunk ..0000.105451!7 len:1 [7]
│                                ← StrChunk ..0000.105378!1 len:1 { "." }
│                            → StrChunk ..0000.105583!8 len:0 [8]
│                              ← StrChunk ..0000.105633!11 len:0 [11]
│                                ← StrChunk ..0000.105498!85 len:0 [85]
│                              → StrChunk ..0000.105464!1 len:0 [1]
│                                ← StrChunk ..0000.105492!3 len:0 [3]
│                        → StrChunk ..0000.105591!16 len:293 { "\\end{enumerate}\n" }
│                          ← StrChunk ..0000.151567!13 len:246 [13]
│                            ← StrChunk ..0000.151593!33 len:245 { "If all sequential permutations o" … }
│                              ← StrChunk ..0000.151552!7 len:75 { "\n\\item " }
│                                ← StrChunk ..0000.105379!68 len:68 { "\n\\item No user input should be l" … }
│                              → StrChunk ..0000.151626!128 len:137 { " updates lead to the same state," … }
│                                ← StrChunk ..0000.152558!9 len:9 { " a set of" }
│                            → StrChunk ..0000.105372!1 len:1 [1]
│                              ← StrChunk ..0000.105977!22 len:0 [22]
│                                ← StrChunk ..0000.151559!4 len:0 [4]
│                              → StrChunk ..0000.105230!1 len:1 { "\n" }
│                                ← StrChunk ..0000.105276!1 len:0 [1]
│                          → StrChunk ..0000.105609!7 len:31 [7]
│                            ← StrChunk ..0000.252321!1 len:31 { "C" }
│                              ← StrChunk ..0000.150195!16 len:17 { "\\subsection{Our " }
│                                ← StrChunk ..0000.105608!1 len:1 { "\n" }
│                              → StrChunk ..0000.150212!13 len:13 { "ontributions}" }
│                                ← StrChunk ..0000.150211!1 len:0 [1]
│                            → StrChunk ..0000.105822!27 len:0 [27]
│                              ← StrChunk ..0000.105849!21 len:0 [21]
│                                ← StrChunk ..0000.105784!38 len:0 [38]
│                              → StrChunk ..0000.105912!7 len:0 [7]
│                                ← StrChunk ..0000.105870!28 len:0 [28]
│                      → StrChunk ..0000.226891!1 len:1042 { " " }
│                        ← StrChunk ..0000.150252!67 len:576 { "\nOur main contribution in this w" … }
│                          ← StrChunk ..0000.106036!6 len:1 [6]
│                            ← StrChunk ..0000.105929!38 len:0 [38]
│                              ← StrChunk ..0000.106070!21 len:0 [21]
│                                ← StrChunk ..0000.105919!10 len:0 [10]
│                              → StrChunk ..0000.106097!97 len:0 [97]
│                                ← StrChunk ..0000.106035!1 len:0 [1]
│                            → StrChunk ..0000.105625!1 len:1 [1]
│                              ← StrChunk ..0000.105616!5 len:0 [5]
│                                ← StrChunk ..0000.105898!7 len:0 [7]
│                              → StrChunk ..0000.105607!1 len:1 { "\n" }
│                                ← StrChunk ..0000.105621!2 len:0 [2]
│                          → StrChunk ..0000.150534!119 len:508 { ", to our knowledge this paper is" … }
│                            ← StrChunk ..0000.155412!1 len:245 { "S" }
│                              ← StrChunk ..0000.150654!6 len:219 { " (see " }
│                                ← StrChunk ..0000.150321!213 len:213 { "ormal semantics for collaborativ" … }
│                              → StrChunk ..0000.150661!25 len:25 { "ection~\\ref{sec:related})" }
│                                ← StrChunk ..0000.150660!1 len:0 [1]
│                            → StrChunk ..0000.226788!2 len:144 { "\n\n" }
│                              ← StrChunk ..0000.150653!1 len:46 { "." }
│                                ← StrChunk ..0000.227223!45 len:45 { " that can be deployed on any net" … }
│                              → StrChunk ..0000.227099!48 len:96 { " after any sequence of concurren" … }
│                                ← StrChunk ..0000.226843!48 len:48 { "A key requirement of conflict re" … }
│                        → StrChunk ..0000.226841!1 len:465 { "." }
│                          ← StrChunk ..0000.226932!77 len:179 [77]
│                            ← StrChunk ..0000.227013!11 len:56 { " eventually" }
│                              ← StrChunk ..0000.226892!8 len:12 { "replicas" }
│                                ← StrChunk ..0000.227009!4 len:4 { "all " }
│                              → StrChunk ..0000.227149!1 len:33 { "." }
│                                ← StrChunk ..0000.226900!32 len:32 { " converge towards the same state" }
│                            → StrChunk ..0000.227150!9 len:123 { " we prove" }
│                              ← StrChunk ..0000.226790!49 len:50 { "In Section~\\ref{sec:convergence}" … }
│                                ← StrChunk ..0000.226842!1 len:1 { " " }
│                              → StrChunk ..0000.227159!46 len:64 { " that our algorithm satisfies th" … }
│                                ← StrChunk ..0000.227205!18 len:18 { " a theorem to show" }
│                          → StrChunk ..0000.155414!1 len:285 { "S" }
│                            ← StrChunk ..0000.150843!11 len:256 { "concurrent " }
│                              ← StrChunk ..0000.150686!153 len:153 { "\n\nComposing maps and lists into " … }
│                                ← StrChunk ..0000.226839!1 len:0 [1]
│                              → StrChunk ..0000.150854!88 len:92 { "s at different levels of the tre" … }
│                                ← StrChunk ..0000.150839!4 len:4 { "edit" }
│                            → StrChunk ..0000.179779!1 len:28 [1]
│                              ← StrChunk ..0000.150943!27 len:27 { "ection~\\ref{sec:examples}. " }
│                                ← StrChunk ..0000.150942!1 len:0 [1]
│                              → StrChunk ..0000.179753!3 len:1 [3]
│                                ← StrChunk ..0000.179780!1 len:1 { "N" }
│                  → StrChunk ..0000.131862!25 len:4008 { "al ordering of operations" }
│                    ← StrChunk ..0000.252323!1 len:2136 { "W" }
│                      ← StrChunk ..0000.180182!20 len:344 [20]
│                        ← StrChunk ..0000.151178!64 len:316 { " the development of applications" … }
│                          ← StrChunk ..0000.179875!12 len:128 { "Consequently" }
│                            ← StrChunk ..0000.151057!33 len:69 [33]
│                              ← StrChunk ..0000.179783!1 len:69 { "." }
│                                ← StrChunk ..0000.150990!67 len:67 { "ested structures are an importan" … }
│                                → StrChunk ..0000.227269!1 len:1 { " " }
│                              → StrChunk ..0000.179784!1 len:0 [1]
│                                ← StrChunk ..0000.151107!48 len:0 [48]
│                            → StrChunk ..0000.151155!10 len:47 [10]
│                              ← StrChunk ..0000.179887!37 len:38 { " the long-term goal of our work " … }
│                                ← StrChunk ..0000.227270!1 len:1 { "," }
│                              → StrChunk ..0000.151174!4 len:9 [4]
│                                ← StrChunk ..0000.151165!9 len:9 { " simplify" }
│                          → StrChunk ..0000.180251!29 len:124 { "whose details can largely be " }
│                            ← StrChunk ..0000.179998!8 len:58 { "for conf" }
│                              ← StrChunk ..0000.179977!19 len:34 { " general algorithm " }
│                                ← StrChunk ..0000.179932!15 len:15 { " by providing a" }
│                              → StrChunk ..0000.180142!1 len:16 { " " }
│                                ← StrChunk ..0000.180008!15 len:15 { "lict resolution" }
│                            → StrChunk ..0000.180317!1 len:37 [1]
│                              ← StrChunk ..0000.180319!4 len:37 { "ware" }
│                                ← StrChunk ..0000.180284!33 len:33 { "hidden inside an easy-to-use sof" … }
│                              → StrChunk ..0000.180143!21 len:0 [21]
│                                ← StrChunk ..0000.180280!2 len:0 [2]
│                        → StrChunk ..0000.179949!10 len:28 [10]
│                          ← StrChunk ..0000.180082!20 len:9 [20]
│                            ← StrChunk ..0000.180164!9 len:9 [9]
│                              ← StrChunk ..0000.180323!1 len:9 { "." }
│                                ← StrChunk ..0000.180202!8 len:8 { " library" }
│                              → StrChunk ..0000.180046!12 len:0 [12]
│                                ← StrChunk ..0000.180036!8 len:0 [8]
│                            → StrChunk ..0000.180024!6 len:0 [6]
│                              ← StrChunk ..0000.180044!1 len:0 [1]
│                                ← StrChunk ..0000.180058!12 len:0 [12]
│                              → StrChunk ..0000.179996!1 len:0 [1]
│                                ← StrChunk ..0000.180006!1 len:0 [1]
│                          → StrChunk ..0000.151242!1 len:19 [1]
│                            ← StrChunk ..0000.179947!1 len:0 [1]
│                              ← StrChunk ..0000.179959!2 len:0 [2]
│                                ← StrChunk ..0000.179963!2 len:0 [2]
│                              → StrChunk ..0000.179928!1 len:0 [1]
│                                ← StrChunk ..0000.179930!1 len:0 [1]
│                            → StrChunk ..0000.129621!355 len:19 [355]
│                              ← StrChunk ..0000.126827!1 len:0 [1]
│                                ← StrChunk ..0000.150319!1 len:0 [1]
│                              → StrChunk ..0000.130801!1 len:19 { " " }
│                                ← StrChunk ..0000.129976!18 len:18 { "\n\n\\section{Related" }
│                      → StrChunk ..0000.130205!30 len:1791 { " many applications. Some algor" }
│                        ← StrChunk ..0000.130042!48 len:535 { ") have long been used for collab" … }
│                          ← StrChunk ..0000.130807!10 len:267 { "\n\n\\subsect" }
│                            ← StrChunk ..0000.150234!18 len:145 { "label{sec:related}" }
│                              ← StrChunk ..0000.130803!4 len:5 { "ork}" }
│                                ← StrChunk ..0000.130802!1 len:0 [1]
│                                → StrChunk ..0000.150225!1 len:1 { "\\" }
│                              → StrChunk ..0000.150226!4 len:122 [4]
│                                ← StrChunk ..0000.151243!122 len:122 { "\n\nIn this section we discuss exi" … }
│                            → StrChunk ..0000.130010!1 len:112 [1]
│                              ← StrChunk ..0000.252325!1 len:17 { "T" }
│                                ← StrChunk ..0000.129994!16 len:16 { "ion{Operational " }
│                              → StrChunk ..0000.130817!64 len:95 { "d-ot}\n\nAlgorithms based on \\emph" … }
│                                ← StrChunk ..0000.130011!31 len:31 { "ransformation}\\label{sec:relate" }
│                          → StrChunk ..0000.130138!18 len:220 { "and do not support" }
│                            ← StrChunk ..0000.130910!1 len:158 [1]
│                              ← StrChunk ..0000.130912!34 len:63 { "ue,Ressel:1996wx,Sun:1998vf,Nich" … }
│                                ← StrChunk ..0000.130881!29 len:29 { "applications~\\cite{Ellis:1989" }
│                              → StrChunk ..0000.130946!47 len:95 { "ngle ordered list (of characters" … }
│                                ← StrChunk ..0000.130090!48 len:48 { "s:1995fd}. Most of them treat a " … }
│                            → StrChunk ..0000.130160!42 len:44 { " nested tree structures that are" … }
│                              ← StrChunk ..0000.180324!2 len:0 [2]
│                                ← StrChunk ..0000.130156!4 len:0 [4]
│                              → StrChunk ..0000.130202!3 len:2 [3]
│                                ← StrChunk ..0000.180335!2 len:2 { "by" }
│                        → StrChunk ..0000.152301!10 len:1226 [10]
│                          ← StrChunk ..0000.155416!1 len:243 { "S" }
│                            ← StrChunk ..0000.130356!1 len:213 [1]
│                              ← StrChunk ..0000.130236!120 len:120 { "ithms generalize OT to editing X" … }
│                                ← StrChunk ..0000.130235!1 len:0 [1]
│                              → StrChunk ..0000.151365!6 len:93 { " (see " }
│                                ← StrChunk ..0000.130357!87 len:87 { "ered lists, but these algorithms" … }
│                            → StrChunk ..0000.130444!1 len:29 { "." }
│                              ← StrChunk ..0000.151372!26 len:26 { "ection~\\ref{sec:json-xml})" }
│                                ← StrChunk ..0000.151371!1 len:0 [1]
│                              → StrChunk ..0000.152430!1 len:2 { "T" }
│                                ← StrChunk ..0000.152300!1 len:1 { " " }
│                          → StrChunk ..0000.230254!13 len:983 { ",Mehdi:2011ke" }
│                            ← StrChunk ..0000.152311!10 len:113 { "performanc" }
│                              ← StrChunk ..0000.152380!3 len:3 { "he " }
│                                ← StrChunk ..0000.152379!1 len:0 [1]
│                              → StrChunk ..0000.152431!64 len:100 { "as the number of concurrent oper" … }
│                                ← StrChunk ..0000.152383!36 len:36 { "e of OT algorithms degrades rapi" … }
│                            → StrChunk ..0000.130995!99 len:857 { "\n\nMost deployed OT collaboration" … }
│                              ← StrChunk ..0000.152321!29 len:2 [29]
│                                ← StrChunk ..0000.152495!2 len:2 { "}." }
│                              → StrChunk ..0000.131434!422 len:756 { "formation functions simpler and " … }
│                                ← StrChunk ..0000.131096!334 len:334 { "\\cite{Etherpad:2011um}, Novell V" … }
│                    → StrChunk ..0000.151864!2 len:1847 [2]
│                      ← StrChunk ..0000.259360!1 len:992 { "t" }
│                        ← StrChunk ..0000.132227!15 len:458 [15]
│                          ← StrChunk ..0000.132106!20 len:326 { " of participants are" }
│                            ← StrChunk ..0000.131989!109 len:206 { "such protocols are equivalent to" … }
│                              ← StrChunk ..0000.131887!61 len:91 { " by using an atomic broadcast pr" … }
│                                ← StrChunk ..0000.259366!30 len:30 { " without using a single server" }
│                                → StrChunk ..0000.131948!41 len:0 [41]
│                              → StrChunk ..0000.132098!8 len:6 [8]
│                                ← StrChunk ..0000.259243!6 len:6 { "quorum" }
│                            → StrChunk ..0000.259448!13 len:100 { " participants" }
│                              ← StrChunk ..0000.132137!68 len:68 { " reachable. We expect that in pe" … }
│                                ← StrChunk ..0000.132126!11 len:0 [11]
│                              → StrChunk ..0000.132208!19 len:19 { " will frequently be" }
│                                ← StrChunk ..0000.132205!3 len:0 [3]
│                          → StrChunk ..0000.132276!25 len:132 [25]
│                            ← StrChunk ..0000.259300!1 len:8 [1]
│                              ← StrChunk ..0000.132242!34 len:0 [34]
│                                ← StrChunk ..0000.259338!4 len:0 [4]
│                              → StrChunk ..0000.259309!11 len:8 [11]
│                                ← StrChunk ..0000.259301!8 len:8 { " offline" }
│                            → StrChunk ..0000.259249!31 len:124 { "struggle to reach a quorum and " }
│                              ← StrChunk ..0000.132325!34 len:56 { " requiring atomic broadcast woul" … }
│                                ← StrChunk ..0000.132301!22 len:22 { ", and so any algorithm" }
│                              → StrChunk ..0000.259342!17 len:37 { "Without quorums, " }
│                                ← StrChunk ..0000.132359!20 len:20 { "become unavailable. " }
│                        → StrChunk ..0000.151756!36 len:533 { "\nConflict-free replicated dataty" … }
│                          ← StrChunk ..0000.132506!14 len:421 { "le:2015vk} is " }
│                            ← StrChunk ..0000.132403!5 len:117 [5]
│                              ← StrChunk ..0000.132380!23 len:23 { "he strongest guarantee " }
│                                ← StrChunk ..0000.132379!1 len:0 [1]
│                              → StrChunk ..0000.132447!57 len:94 { "\\cite{Attiya:2015dm}.\n\nThe Googl" … }
│                                ← StrChunk ..0000.132408!37 len:37 { "a system can give is causal orde" … }
│                            → StrChunk ..0000.132550!22 len:290 [22]
│                              ← StrChunk ..0000.132520!30 len:47 { "the only implementation of OT " }
│                                ← StrChunk ..0000.132577!17 len:17 { "to our knowledge " }
│                              → StrChunk ..0000.132616!238 len:243 { "supports arbitrary nesting of li" … }
│                                ← StrChunk ..0000.132572!5 len:5 { "that " }
│                          → StrChunk ..0000.180343!7 len:76 { "support" }
│                            ← StrChunk ..0000.151830!2 len:45 { ") " }
│                              ← StrChunk ..0000.151832!1 len:6 { "s" }
│                                ← StrChunk ..0000.151825!5 len:5 { "(CRDT" }
│                              → StrChunk ..0000.151833!5 len:37 { "that " }
│                                ← StrChunk ..0000.151792!32 len:32 { "are a family of data structures " }
│                            → StrChunk ..0000.151855!2 len:24 [2]
│                              ← StrChunk ..0000.151844!11 len:11 { " concurrent" }
│                                ← StrChunk ..0000.151838!6 len:0 [6]
│                              → StrChunk ..0000.180354!6 len:13 { "cation" }
│                                ← StrChunk ..0000.151857!7 len:7 { " modifi" }
│                      → StrChunk ..0000.259702!1 len:855 { "," }
│                        ← StrChunk ..0000.152553!5 len:605 { "CRDT." }
│                          ← StrChunk ..0000.152055!41 len:223 [41]
│                            ← StrChunk ..0000.151876!24 len:49 { "guarantee convergence of" }
│                              ← StrChunk ..0000.151871!5 len:5 [5]
│                                ← StrChunk ..0000.151866!5 len:5 { " and " }
│                              → StrChunk ..0000.151905!20 len:20 { " concurrent updates." }
│                                ← StrChunk ..0000.151900!5 len:0 [5]
│                            → StrChunk ..0000.151995!60 len:174 { " making modification operations " … }
│                              ← StrChunk ..0000.151991!4 len:66 [4]
│                                ← StrChunk ..0000.151925!66 len:66 { " They work by attaching addition" … }
│                              → StrChunk ..0000.152545!8 len:48 [8]
│                                ← StrChunk ..0000.152497!48 len:48 { " The JSON datatype described in " … }
│                          → StrChunk ..0000.259703!1 len:377 { "," }
│                            ← StrChunk ..0000.152168!1 len:37 [1]
│                              ← StrChunk ..0000.152170!42 len:0 [42]
│                                ← StrChunk ..0000.152137!31 len:0 [31]
│                              → StrChunk ..0000.132854!36 len:37 { "\nCRDTs for registers, counters, " … }
│                                ← StrChunk ..0000.151824!1 len:1 { "\n" }
│                            → StrChunk ..0000.132905!6 len:339 [6]
│                              ← StrChunk ..0000.230281!4 len:19 { "ell-" }
│                                ← StrChunk ..0000.132890!15 len:15 { " and sets are w" }
│                              → StrChunk ..0000.133120!113 len:320 { "uding WOOT~\\cite{Oster:2006wj}, " … }
│                                ← StrChunk ..0000.132911!207 len:207 { "known~\\cite{Shapiro:2011un,Shapi" … }
│                        → StrChunk ..0000.228366!3 len:249 [3]
│                          ← StrChunk ..0000.228450!20 len:123 { "metadata overhead of" }
│                            ← StrChunk ..0000.228309!8 len:80 [8]
│                              ← StrChunk ..0000.228273!36 len:68 { " Attiya et al.~\\cite{Attiya:2016" … }
│                                ← StrChunk ..0000.133233!32 len:32 { " and LSEQ~\\cite{Nedelec:2013ky}." }
│                              → StrChunk ..0000.228333!4 len:12 { "the " }
│                                ← StrChunk ..0000.228317!8 len:8 { "analyze " }
│                            → StrChunk ..0000.228470!2 len:23 { "ly" }
│                              ← StrChunk ..0000.228347!14 len:14 { " collaborative" }
│                                ← StrChunk ..0000.228337!10 len:0 [10]
│                              → StrChunk ..0000.228475!2 len:7 { "ed" }
│                                ← StrChunk ..0000.228361!5 len:5 { " edit" }
│                          → StrChunk ..0000.228439!1 len:126 { "." }
│                            ← StrChunk ..0000.228381!50 len:60 { "lists, and provide a correctness" … }
│                              ← StrChunk ..0000.228370!11 len:1 [11]
│                                ← StrChunk ..0000.228369!1 len:1 { " " }
│                              → StrChunk ..0000.228431!8 len:9 [8]
│                                ← StrChunk ..0000.230293!9 len:9 { "algorithm" }
│                            → StrChunk ..0000.228509!1 len:65 { " " }
│                              ← StrChunk ..0000.228484!10 len:50 { "all of the" }
│                                ← StrChunk ..0000.133265!40 len:40 { " However, none of them support n" … }
│                              → StrChunk ..0000.228510!8 len:14 [8]
│                                ← StrChunk ..0000.228550!14 len:14 { "aforementioned" }
│                → StrChunk ..0000.56534!46 len:4380 [46]
│                  ← StrChunk ..0000.155418!1 len:3956 [1]
│                    ← StrChunk ..0000.135305!54 len:3640 [54]
│                      ← StrChunk ..0000.228620!165 len:2328 { "Martin et al.~\\cite{Martin:2010i" … }
│                        ← StrChunk ..0000.133362!1 len:1192 { " " }
│                          ← StrChunk ..0000.228613!5 len:51 { "their" }
│                            ← StrChunk ..0000.133305!5 len:32 [5]
│                              ← StrChunk ..0000.228518!1 len:12 { " " }
│                                ← StrChunk ..0000.228496!11 len:11 { " algorithms" }
│                                → StrChunk ..0000.228519!23 len:0 [23]
│                              → StrChunk ..0000.228591!8 len:20 { "each of " }
│                                ← StrChunk ..0000.133310!12 len:12 { "assume that " }
│                            → StrChunk ..0000.133325!10 len:14 { " elements " }
│                              ← StrChunk ..0000.133322!3 len:0 [3]
│                                ← StrChunk ..0000.228599!3 len:0 [3]
│                              → StrChunk ..0000.133335!27 len:4 [27]
│                                ← StrChunk ..0000.228605!4 len:4 { "is a" }
│                          → StrChunk ..0000.133813!378 len:1140 { "l.~\\cite{Almeida:2016tk} also de" … }
│                            ← StrChunk ..0000.133369!6 len:450 { " value" }
│                              ← StrChunk ..0000.133363!6 len:9 [6]
│                                ← StrChunk ..0000.152291!9 len:9 { "primitive" }
│                              → StrChunk ..0000.133376!435 len:435 { ", not another CRDT.\n\nThe problem" … }
│                                ← StrChunk ..0000.133375!1 len:0 [1]
│                            → StrChunk ..0000.134493!5 len:312 { "work." }
│                              ← StrChunk ..0000.134379!110 len:286 { ", and \\emph{entities}, which are" … }
│                                ← StrChunk ..0000.134201!176 len:176 { "~\\cite{Burckhardt:2012jy} define" … }
│                              → StrChunk ..0000.228799!19 len:21 { "On the other hand, " }
│                                ← StrChunk ..0000.228618!2 len:2 { "\n\n" }
│                        → StrChunk ..0000.134560!147 len:971 { "\n\nAlthough CRDTs for registers, " … }
│                          ← StrChunk ..0000.228818!37 len:127 { " in Section~\\ref{sec:json-xml}, " … }
│                            ← StrChunk ..0000.228887!11 len:34 { "nested maps" }
│                              ← StrChunk ..0000.228858!9 len:9 { " without " }
│                                ← StrChunk ..0000.228855!3 len:0 [3]
│                              → StrChunk ..0000.228785!14 len:14 { ". As discussed" }
│                                ← StrChunk ..0000.228867!10 len:0 [10]
│                            → StrChunk ..0000.228943!3 len:56 [3]
│                              ← StrChunk ..0000.228958!5 len:47 { "eness" }
│                                ← StrChunk ..0000.228901!42 len:42 { "a structure does not capture the" … }
│                              → StrChunk ..0000.134498!62 len:9 [62]
│                                ← StrChunk ..0000.228946!9 len:9 { " of JSON." }
│                          → StrChunk ..0000.231104!12 len:697 { " and CouchDB" }
│                            ← StrChunk ..0000.252329!1 len:315 { "A" }
│                              ← StrChunk ..0000.252327!1 len:95 { " " }
│                                ← StrChunk ..0000.134711!94 len:94 { " to be composed into an arbitrar" … }
│                              → StrChunk ..0000.134807!219 len:219 { "pproaches}\\label{sec:related-oth" … }
│                                ← StrChunk ..0000.134805!2 len:0 [2]
│                            → StrChunk ..0000.135182!65 len:370 { ". Naively chosen merge functions" … }
│                              ← StrChunk ..0000.227271!75 len:231 { " -- in other words, the only dat" … }
│                                ← StrChunk ..0000.135026!156 len:156 { ", if several values are concurre" … }
│                              → StrChunk ..0000.152955!24 len:74 { "We believe that conflict" }
│                                ← StrChunk ..0000.135255!50 len:50 { "deleted items reappearing~\\cite{" … }
│                      → StrChunk ..0000.135918!68 len:1312 { "995dn} allow offline nodes to ex" … }
│                        ← StrChunk ..0000.259516!89 len:631 { "\n\nResolving concurrent updates o" … }
│                          ← StrChunk ..0000.135689!15 len:435 [15]
│                            ← StrChunk ..0000.135646!13 len:327 [13]
│                              ← StrChunk ..0000.135401!245 len:286 { "t can reasonably be left to appl" … }
│                                ← StrChunk ..0000.135359!38 len:38 { " resolution is not a simple matt" … }
│                                → StrChunk ..0000.231096!3 len:3 { "LWW" }
│                              → StrChunk ..0000.231184!11 len:41 { "for example" }
│                                ← StrChunk ..0000.135659!30 len:30 { " is used in Apache Cassandra, " }
│                            → StrChunk ..0000.231102!2 len:108 { "It" }
│                              ← StrChunk ..0000.135759!2 len:2 { ". " }
│                                ← StrChunk ..0000.135706!53 len:0 [53]
│                              → StrChunk ..0000.135766!104 len:104 { " does not meet our requirements," … }
│                                ← StrChunk ..0000.135761!3 len:0 [3]
│                          → StrChunk ..0000.223426!22 len:107 [22]
│                            ← StrChunk ..0000.259672!2 len:61 { "}." }
│                              ← StrChunk ..0000.259611!59 len:59 { " synchronization~\\cite{Balasubra" … }
│                                ← StrChunk ..0000.259605!6 len:0 [6]
│                              → StrChunk ..0000.223395!29 len:0 [29]
│                                ← StrChunk ..0000.259670!1 len:0 [1]
│                            → StrChunk ..0000.223424!1 len:46 [1]
│                              ← StrChunk ..0000.223448!1 len:0 [1]
│                                ← StrChunk ..0000.223450!16 len:0 [16]
│                              → StrChunk ..0000.135870!46 len:46 { "\n\nFinally, systems such as Bayou" … }
│                                ← StrChunk ..0000.223393!1 len:0 [1]
│                        → StrChunk ..0000.230639!19 len:613 [19]
│                          ← StrChunk ..0000.230316!157 len:470 { " has the advantage of being able" … }
│                            ← StrChunk ..0000.230302!1 len:212 { " " }
│                              ← StrChunk ..0000.136156!44 len:206 { "s successful depending on its pr" … }
│                                ← StrChunk ..0000.135992!162 len:162 { "confirm them when they are next " … }
│                              → StrChunk ..0000.230303!13 len:5 [13]
│                                ← StrChunk ..0000.231057!5 len:5 { "Bayou" }
│                            → StrChunk ..0000.231198!7 len:101 { "Bayou's" }
│                              ← StrChunk ..0000.230473!2 len:23 { ". " }
│                                ← StrChunk ..0000.231062!21 len:21 { "~\\cite{Bailis:2014th}" }
│                              → StrChunk ..0000.230568!71 len:71 { " downside is that tentative tran" … }
│                                ← StrChunk ..0000.230565!3 len:0 [3]
│                          → StrChunk ..0000.230675!1 len:143 { " " }
│                            ← StrChunk ..0000.230668!6 len:17 { " handl" }
│                              ← StrChunk ..0000.230666!2 len:8 [2]
│                                ← StrChunk ..0000.230658!8 len:8 { "explicit" }
│                              → StrChunk ..0000.230674!1 len:3 [1]
│                                ← StrChunk ..0000.231227!3 len:3 { "ing" }
│                            → StrChunk ..0000.230685!107 len:125 { ", whereas CRDTs are defined such" … }
│                              ← StrChunk ..0000.230676!9 len:18 [9]
│                                ← StrChunk ..0000.231239!18 len:18 { "by the application" }
│                              → StrChunk ..0000.136200!17 len:0 [17]
│                                ← StrChunk ..0000.230475!45 len:0 [45]
│                    → StrChunk ..0000.239536!10 len:316 { "structures" }
│                      ← StrChunk ..0000.126828!1 len:224 { "\n" }
│                        ← StrChunk ..0000.134199!1 len:0 [1]
│                          ← StrChunk ..0000.135704!1 len:0 [1]
│                            ← StrChunk ..0000.135986!3 len:0 [3]
│                              ← StrChunk ..0000.152979!112 len:0 [112]
│                                ← StrChunk ..0000.136217!123 len:0 [123]
│                                → StrChunk ..0000.136154!1 len:0 [1]
│                              → StrChunk ..0000.135764!1 len:0 [1]
│                                ← StrChunk ..0000.135916!1 len:0 [1]
│                            → StrChunk ..0000.134707!2 len:0 [2]
│                              ← StrChunk ..0000.135247!4 len:0 [4]
│                                ← StrChunk ..0000.135397!2 len:0 [2]
│                              → StrChunk ..0000.134377!1 len:0 [1]
│                                ← StrChunk ..0000.134489!2 len:0 [2]
│                          → StrChunk ..0000.132445!1 len:0 [1]
│                            ← StrChunk ..0000.133811!1 len:0 [1]
│                              ← StrChunk ..0000.134191!2 len:0 [2]
│                                ← StrChunk ..0000.134195!2 len:0 [2]
│                              → StrChunk ..0000.132504!1 len:0 [1]
│                                ← StrChunk ..0000.133118!1 len:0 [1]
│                            → StrChunk ..0000.131430!2 len:0 [2]
│                              ← StrChunk ..0000.131856!3 len:0 [3]
│                                ← StrChunk ..0000.132323!1 len:0 [1]
│                              → StrChunk ..0000.126829!1396 len:0 [1396]
│                                ← StrChunk ..0000.131094!1 len:0 [1]
│                        → StrChunk ..0000.618!21 len:223 [21]
│                          ← StrChunk ..0000.102856!15 len:36 [15]
│                            ← StrChunk ..0000.609!9 len:22 { "\\section{" }
│                              ← StrChunk ..0000.136340!1 len:2 { "\n" }
│                                ← StrChunk ..0000.608!1 len:1 { "\n" }
│                              → StrChunk ..0000.252331!1 len:11 { "D" }
│                                ← StrChunk ..0000.102846!10 len:10 { "Composing " }
│                            → StrChunk ..0000.102875!1 len:14 [1]
│                              ← StrChunk ..0000.252333!1 len:5 { "S" }
│                                ← StrChunk ..0000.102871!4 len:4 { "ata " }
│                              → StrChunk ..0000.102844!1 len:9 [1]
│                                ← StrChunk ..0000.102876!9 len:9 { "tructures" }
│                          → StrChunk ..0000.153120!11 len:187 { "informally " }
│                            ← StrChunk ..0000.35301!2 len:43 { "\n\n" }
│                              ← StrChunk ..0000.144727!21 len:22 { "\\label{sec:composing}" }
│                                ← StrChunk ..0000.639!1 len:1 { "}" }
│                              → StrChunk ..0000.153093!1 len:19 { " " }
│                                ← StrChunk ..0000.103441!18 len:18 { "In this section we" }
│                            → StrChunk ..0000.239435!6 len:133 { ", and " }
│                              ← StrChunk ..0000.153131!45 len:71 { "collaborative editing of JSON da" … }
│                                ← StrChunk ..0000.153094!26 len:26 { "introduce our approach to " }
│                              → StrChunk ..0000.239601!5 len:56 { "data " }
│                                ← StrChunk ..0000.239485!51 len:51 { "illustrate some peculiarities of" … }
│                      → StrChunk ..0000.35837!53 len:82 [53]
│                        ← StrChunk ..0000.103528!74 len:82 [74]
│                          ← StrChunk ..0000.155420!1 len:82 { "S" }
│                            ← StrChunk ..0000.239565!6 len:52 [6]
│                              ← StrChunk ..0000.239577!24 len:0 [24]
│                                ← StrChunk ..0000.239546!19 len:0 [19]
│                              → StrChunk ..0000.153176!52 len:52 { ". A formal presentation of the a" … }
│                                ← StrChunk ..0000.239441!22 len:0 [22]
│                            → StrChunk ..0000.153091!2 len:29 { "\n\n" }
│                              ← StrChunk ..0000.153229!27 len:27 { "ection~\\ref{sec:semantics}." }
│                                ← StrChunk ..0000.153228!1 len:0 [1]
│                              → StrChunk ..0000.103602!1 len:0 [1]
│                                ← StrChunk ..0000.103459!69 len:0 [69]
│                          → StrChunk ..0000.103667!2 len:0 [2]
│                            ← StrChunk ..0000.103611!56 len:0 [56]
│                              ← StrChunk ..0000.103692!9 len:0 [9]
│                                ← StrChunk ..0000.103603!8 len:0 [8]
│                              → StrChunk ..0000.103701!35 len:0 [35]
│                                ← StrChunk ..0000.103671!17 len:0 [17]
│                            → StrChunk ..0000.35485!129 len:0 [129]
│                              ← StrChunk ..0000.35394!75 len:0 [75]
│                                ← StrChunk ..0000.35303!87 len:0 [87]
│                              → StrChunk ..0000.35679!156 len:0 [156]
│                                ← StrChunk ..0000.35630!43 len:0 [43]
│                        → StrChunk ..0000.56202!3 len:0 [3]
│                          ← StrChunk ..0000.56162!11 len:0 [11]
│                            ← StrChunk ..0000.56000!46 len:0 [46]
│                              ← StrChunk ..0000.55855!25 len:0 [25]
│                                ← StrChunk ..0000.55852!2 len:0 [2]
│                              → StrChunk ..0000.56103!17 len:0 [17]
│                                ← StrChunk ..0000.56050!49 len:0 [49]
│                            → StrChunk ..0000.56194!2 len:0 [2]
│                              ← StrChunk ..0000.56146!6 len:0 [6]
│                                ← StrChunk ..0000.56120!10 len:0 [10]
│                              → StrChunk ..0000.56206!1 len:0 [1]
│                                ← StrChunk ..0000.56200!2 len:0 [2]
│                          → StrChunk ..0000.56604!2 len:0 [2]
│                            ← StrChunk ..0000.56615!3 len:0 [3]
│                              ← StrChunk ..0000.56287!84 len:0 [84]
│                                ← StrChunk ..0000.56207!66 len:0 [66]
│                              → StrChunk ..0000.56618!86 len:0 [86]
│                                ← StrChunk ..0000.56580!24 len:0 [24]
│                            → StrChunk ..0000.56372!12 len:0 [12]
│                              ← StrChunk ..0000.56488!46 len:0 [46]
│                                ← StrChunk ..0000.56371!1 len:0 [1]
│                              → StrChunk ..0000.56704!64 len:0 [64]
│                                ← StrChunk ..0000.56386!72 len:0 [72]
│                  → StrChunk ..0000.217161!1 len:424 [1]
│                    ← StrChunk ..0000.218574!10 len:261 { ",scale=0.8" }
│                      ← StrChunk ..0000.63627!7 len:116 [7]
│                        ← StrChunk ..0000.56273!7 len:0 [7]
│                          ← StrChunk ..0000.57045!1 len:0 [1]
│                            ← StrChunk ..0000.56963!69 len:0 [69]
│                              ← StrChunk ..0000.56768!44 len:0 [44]
│                                ← StrChunk ..0000.56458!30 len:0 [30]
│                                → StrChunk ..0000.56814!108 len:0 [108]
│                              → StrChunk ..0000.57047!107 len:0 [107]
│                                ← StrChunk ..0000.57036!9 len:0 [9]
│                            → StrChunk ..0000.56943!6 len:0 [6]
│                              ← StrChunk ..0000.56922!8 len:0 [8]
│                                ← StrChunk ..0000.57032!2 len:0 [2]
│                              → StrChunk ..0000.56384!1 len:0 [1]
│                                ← StrChunk ..0000.56812!1 len:0 [1]
│                          → StrChunk ..0000.57154!213 len:0 [213]
│                            ← StrChunk ..0000.56130!6 len:0 [6]
│                              ← StrChunk ..0000.56152!1 len:0 [1]
│                                ← StrChunk ..0000.56196!2 len:0 [2]
│                              → StrChunk ..0000.56136!10 len:0 [10]
│                                ← StrChunk ..0000.56182!11 len:0 [11]
│                            → StrChunk ..0000.57471!23 len:0 [23]
│                              ← StrChunk ..0000.57603!26 len:0 [26]
│                                ← StrChunk ..0000.57369!102 len:0 [102]
│                              → StrChunk ..0000.63592!17 len:0 [17]
│                                ← StrChunk ..0000.63539!1 len:0 [1]
│                        → StrChunk ..0000.103847!8 len:116 { "xamples}" }
│                          ← StrChunk ..0000.103815!23 len:32 { "\\subsection{Concurrent " }
│                            ← StrChunk ..0000.63540!51 len:0 [51]
│                              ← StrChunk ..0000.63626!1 len:0 [1]
│                                ← StrChunk ..0000.63609!16 len:0 [16]
│                              → StrChunk ..0000.103813!2 len:0 [2]
│                                ← StrChunk ..0000.63635!66 len:0 [66]
│                            → StrChunk ..0000.103839!7 len:9 { "diting " }
│                              ← StrChunk ..0000.103838!1 len:1 [1]
│                                ← StrChunk ..0000.252335!1 len:1 { "E" }
│                              → StrChunk ..0000.103846!1 len:1 [1]
│                                ← StrChunk ..0000.252337!1 len:1 { "E" }
│                          → StrChunk ..0000.242330!3 len:76 { "[p]" }
│                            ← StrChunk ..0000.217278!1 len:37 { "*" }
│                              ← StrChunk ..0000.103855!15 len:35 { "\n\n\\begin{figure" }
│                                ← StrChunk ..0000.144748!20 len:20 { "\\label{sec:examples}" }
│                              → StrChunk ..0000.103871!1 len:1 { "}" }
│                                ← StrChunk ..0000.103870!1 len:0 [1]
│                            → StrChunk ..0000.103888!20 len:36 { "\n\\begin{tikzpicture}" }
│                              ← StrChunk ..0000.240015!2 len:11 [2]
│                                ← StrChunk ..0000.104053!11 len:11 { "\n\\centering" }
│                              → StrChunk ..0000.104806!2 len:5 { "to" }
│                                ← StrChunk ..0000.104801!3 len:3 { "[au" }
│                      → StrChunk ..0000.217368!19 len:135 { "leftR)  at (0,6) {R" }
│                        ← StrChunk ..0000.219804!2 len:50 { ".5" }
│                          ← StrChunk ..0000.219792!1 len:27 { "4" }
│                            ← StrChunk ..0000.217332!5 len:23 { "otted" }
│                              ← StrChunk ..0000.217293!12 len:15 { "\n\\path [draw" }
│                                ← StrChunk ..0000.104808!1 len:1 { "]" }
│                                → StrChunk ..0000.217324!2 len:2 { ",d" }
│                              → StrChunk ..0000.217307!3 len:3 { "] (" }
│                                ← StrChunk ..0000.217326!3 len:0 [3]
│                            → StrChunk ..0000.217311!1 len:3 { "," }
│                              ← StrChunk ..0000.217310!1 len:0 [1]
│                                ← StrChunk ..0000.217620!1 len:0 [1]
│                              → StrChunk ..0000.217312!1 len:2 { "0" }
│                                ← StrChunk ..0000.219803!1 len:1 { "-" }
│                          → StrChunk ..0000.217320!1 len:21 { "," }
│                            ← StrChunk ..0000.219796!1 len:7 { "4" }
│                              ← StrChunk ..0000.217313!6 len:6 { ") -- (" }
│                                ← StrChunk ..0000.217810!2 len:0 [2]
│                              → StrChunk ..0000.217319!1 len:0 [1]
│                                ← StrChunk ..0000.217618!1 len:0 [1]
│                            → StrChunk ..0000.217321!1 len:13 [1]
│                              ← StrChunk ..0000.217812!2 len:3 { ".5" }
│                                ← StrChunk ..0000.217353!1 len:1 { "6" }
│                              → StrChunk ..0000.217354!8 len:10 { "\n\\node (" }
│                                ← StrChunk ..0000.217322!2 len:2 { ");" }
│                        → StrChunk ..0000.217440!3 len:66 [3]
│                          ← StrChunk ..0000.217405!20 len:49 { "\n\\node (rightR) at (" }
│                            ← StrChunk ..0000.217400!2 len:13 [2]
│                              ← StrChunk ..0000.217398!2 len:9 { "$p" }
│                                ← StrChunk ..0000.217389!7 len:7 { "eplica " }
│                              → StrChunk ..0000.217548!1 len:4 { ";" }
│                                ← StrChunk ..0000.217402!3 len:3 { "$:}" }
│                            → StrChunk ..0000.217425!1 len:16 [1]
│                              ← StrChunk ..0000.217622!1 len:1 [1]
│                                ← StrChunk ..0000.218585!1 len:1 { "8" }
│                              → StrChunk ..0000.217555!1 len:15 { "q" }
│                                ← StrChunk ..0000.217426!14 len:14 { ",6) {Replica $" }
│                          → StrChunk ..0000.217305!1 len:17 [1]
│                            ← StrChunk ..0000.217396!1 len:4 [1]
│                              ← StrChunk ..0000.217549!1 len:4 { ";" }
│                                ← StrChunk ..0000.217443!3 len:3 { "$:}" }
│                              → StrChunk ..0000.217362!3 len:0 [3]
│                                ← StrChunk ..0000.217387!1 len:0 [1]
│                            → StrChunk ..0000.104224!2 len:13 { " (" }
│                              ← StrChunk ..0000.104204!6 len:6 { "\n\\node" }
│                                ← StrChunk ..0000.104804!1 len:0 [1]
│                              → StrChunk ..0000.104226!5 len:5 [5]
│                                ← StrChunk ..0000.217220!5 len:5 { "left0" }
│                    → StrChunk ..0000.217238!1 len:163 { "0" }
│                      ← StrChunk ..0000.104075!1 len:63 { "\\" }
│                        ← StrChunk ..0000.104983!1 len:30 [1]
│                          ← StrChunk ..0000.104237!1 len:10 [1]
│                            ← StrChunk ..0000.217351!1 len:8 { " " }
│                              ← StrChunk ..0000.104404!1 len:2 [1]
│                                ← StrChunk ..0000.104231!1 len:1 { ")" }
│                                → StrChunk ..0000.104232!1 len:1 { " " }
│                              → StrChunk ..0000.217160!1 len:5 { "0" }
│                                ← StrChunk ..0000.104233!4 len:4 { "at (" }
│                            → StrChunk ..0000.217280!1 len:2 [1]
│                              ← StrChunk ..0000.217350!1 len:2 { "5" }
│                                ← StrChunk ..0000.104238!1 len:1 { "," }
│                              → StrChunk ..0000.105176!1 len:0 [1]
│                                ← StrChunk ..0000.108324!1 len:0 [1]
│                          → StrChunk ..0000.104003!6 len:20 [6]
│                            ← StrChunk ..0000.104240!1 len:18 { ")" }
│                              ← StrChunk ..0000.104239!1 len:0 [1]
│                                ← StrChunk ..0000.104406!1 len:0 [1]
│                              → StrChunk ..0000.104210!7 len:17 [7]
│                                ← StrChunk ..0000.217446!17 len:17 { " [rectangle,draw]" }
│                            → StrChunk ..0000.104065!1 len:2 [1]
│                              ← StrChunk ..0000.104009!3 len:0 [3]
│                                ← StrChunk ..0000.104032!1 len:0 [1]
│                              → StrChunk ..0000.104019!2 len:2 { " {" }
│                                ← StrChunk ..0000.104012!7 len:0 [7]
│                        → StrChunk ..0000.104090!2 len:32 [2]
│                          ← StrChunk ..0000.217014!2 len:12 { "''" }
│                            ← StrChunk ..0000.217011!2 len:6 { "``" }
│                              ← StrChunk ..0000.104081!1 len:1 { "{" }
│                                ← StrChunk ..0000.104076!5 len:0 [5]
│                              → StrChunk ..0000.104678!3 len:3 { "key" }
│                                ← StrChunk ..0000.104082!1 len:0 [1]
│                            → StrChunk ..0000.217016!1 len:4 { " " }
│                              ← StrChunk ..0000.104089!1 len:1 { ":" }
│                                ← StrChunk ..0000.104083!6 len:0 [6]
│                              → StrChunk ..0000.217018!1 len:2 [1]
│                                ← StrChunk ..0000.217020!2 len:2 { "``" }
│                          → StrChunk ..0000.104073!1 len:20 [1]
│                            ← StrChunk ..0000.104093!1 len:5 [1]
│                              ← StrChunk ..0000.217023!3 len:4 { "''\\" }
│                                ← StrChunk ..0000.104092!1 len:1 { "A" }
│                              → StrChunk ..0000.104095!1 len:1 [1]
│                                ← StrChunk ..0000.104094!1 len:1 { "}" }
│                            → StrChunk ..0000.104280!1 len:15 { ";" }
│                              ← StrChunk ..0000.104026!1 len:1 { "}" }
│                                ← StrChunk ..0000.104021!5 len:0 [5]
│                              → StrChunk ..0000.217231!5 len:13 { "right" }
│                                ← StrChunk ..0000.217163!8 len:8 { "\n\\node (" }
│                      → StrChunk ..0000.104273!2 len:99 { "at" }
│                        ← StrChunk ..0000.217186!1 len:65 { ")" }
│                          ← StrChunk ..0000.217183!1 len:9 [1]
│                            ← StrChunk ..0000.217177!6 len:7 { ") at (" }
│                              ← StrChunk ..0000.217171!6 len:0 [6]
│                                ← StrChunk ..0000.217236!1 len:0 [1]
│                              → StrChunk ..0000.217624!1 len:1 [1]
│                                ← StrChunk ..0000.218587!1 len:1 { "8" }
│                            → StrChunk ..0000.217346!1 len:2 [1]
│                              ← StrChunk ..0000.217348!1 len:2 { "5" }
│                                ← StrChunk ..0000.217184!1 len:1 { "," }
│                              → StrChunk ..0000.217185!1 len:0 [1]
│                                ← StrChunk ..0000.217282!1 len:0 [1]
│                          → StrChunk ..0000.217198!1 len:55 [1]
│                            ← StrChunk ..0000.217200!7 len:39 { ": ``A''" }
│                              ← StrChunk ..0000.217187!11 len:28 { " {\\{``key''" }
│                                ← StrChunk ..0000.217463!17 len:17 { " [rectangle,draw]" }
│                              → StrChunk ..0000.217207!1 len:4 [1]
│                                ← StrChunk ..0000.217209!4 len:4 { "\\}};" }
│                            → StrChunk ..0000.104402!1 len:16 { "1" }
│                              ← StrChunk ..0000.104258!11 len:12 { "\\node (left" }
│                                ← StrChunk ..0000.104096!1 len:1 { "\n" }
│                              → StrChunk ..0000.104097!2 len:3 { "  " }
│                                ← StrChunk ..0000.104269!1 len:1 { ")" }
│                        → StrChunk ..0000.104035!2 len:32 [2]
│                          ← StrChunk ..0000.105172!1 len:5 [1]
│                            ← StrChunk ..0000.104033!2 len:5 { "0," }
│                              ← StrChunk ..0000.104030!2 len:2 { " (" }
│                                ← StrChunk ..0000.104027!3 len:0 [3]
│                              → StrChunk ..0000.217286!1 len:1 [1]
│                                ← StrChunk ..0000.217344!1 len:1 { "3" }
│                            → StrChunk ..0000.104408!1 len:0 [1]
│                              ← StrChunk ..0000.105177!2 len:0 [2]
│                                ← StrChunk ..0000.105181!2 len:0 [2]
│                              → StrChunk ..0000.104067!1 len:0 [1]
│                                ← StrChunk ..0000.104128!2 len:0 [2]
│                          → StrChunk ..0000.104104!1 len:27 { "\\" }
│                            ← StrChunk ..0000.104039!1 len:20 { " " }
│                              ← StrChunk ..0000.217480!17 len:18 { " [rectangle,draw]" }
│                                ← StrChunk ..0000.104038!1 len:1 { ")" }
│                              → StrChunk ..0000.104045!1 len:1 { "{" }
│                                ← StrChunk ..0000.104040!5 len:0 [5]
│                            → StrChunk ..0000.217033!2 len:6 { "``" }
│                              ← StrChunk ..0000.104110!1 len:1 { "{" }
│                                ← StrChunk ..0000.104105!5 len:0 [5]
│                              → StrChunk ..0000.104686!3 len:3 { "key" }
│                                ← StrChunk ..0000.104111!1 len:0 [1]
│            → StrChunk ..0000.218067!2 len:5543 { "''" }
│              ← StrChunk ..0000.240222!3 len:3454 [3]
│                ← StrChunk ..0000.104829!1 len:1313 [1]
│                  ← StrChunk ..0000.217092!2 len:371 { "``" }
│                    ← StrChunk ..0000.219784!1 len:193 { "0" }
│                      ← StrChunk ..0000.105183!2 len:96 [2]
│                        ← StrChunk ..0000.104046!5 len:34 [5]
│                          ← StrChunk ..0000.104123!1 len:9 { "B" }
│                            ← StrChunk ..0000.217040!2 len:4 { "``" }
│                              ← StrChunk ..0000.104118!1 len:2 { ":" }
│                                ← StrChunk ..0000.104112!6 len:0 [6]
│                                → StrChunk ..0000.217038!1 len:1 { " " }
│                              → StrChunk ..0000.104122!1 len:0 [1]
│                                ← StrChunk ..0000.104119!1 len:0 [1]
│                            → StrChunk ..0000.104125!1 len:4 { "}" }
│                              ← StrChunk ..0000.104124!1 len:3 [1]
│                                ← StrChunk ..0000.217043!3 len:3 { "''\\" }
│                              → StrChunk ..0000.104120!1 len:0 [1]
│                                ← StrChunk ..0000.104126!1 len:0 [1]
│                          → StrChunk ..0000.217626!1 len:25 [1]
│                            ← StrChunk ..0000.104403!1 len:23 { "1" }
│                              ← StrChunk ..0000.104323!13 len:15 { "\n\\node (right" }
│                                ← StrChunk ..0000.104051!2 len:2 { "};" }
│                              → StrChunk ..0000.218589!1 len:7 { "8" }
│                                ← StrChunk ..0000.104336!6 len:6 { ") at (" }
│                            → StrChunk ..0000.217342!1 len:2 { "3" }
│                              ← StrChunk ..0000.104343!1 len:1 { "," }
│                                ← StrChunk ..0000.104342!1 len:0 [1]
│                              → StrChunk ..0000.105174!1 len:0 [1]
│                                ← StrChunk ..0000.217290!1 len:0 [1]
│                        → StrChunk ..0000.104356!6 len:62 [6]
│                          ← StrChunk ..0000.104349!5 len:29 [5]
│                            ← StrChunk ..0000.104345!1 len:21 { ")" }
│                              ← StrChunk ..0000.104344!1 len:0 [1]
│                                ← StrChunk ..0000.104410!1 len:0 [1]
│                              → StrChunk ..0000.104346!3 len:20 { " {\\" }
│                                ← StrChunk ..0000.217497!17 len:17 { " [rectangle,draw]" }
│                            → StrChunk ..0000.104355!1 len:8 [1]
│                              ← StrChunk ..0000.217060!2 len:3 { "``" }
│                                ← StrChunk ..0000.104354!1 len:1 { "{" }
│                              → StrChunk ..0000.217057!2 len:5 { "''" }
│                                ← StrChunk ..0000.104694!3 len:3 { "key" }
│                          → StrChunk ..0000.104366!1 len:33 [1]
│                            ← StrChunk ..0000.104363!2 len:7 [2]
│                              ← StrChunk ..0000.217053!3 len:4 { " ``" }
│                                ← StrChunk ..0000.104362!1 len:1 { ":" }
│                              → StrChunk ..0000.217050!2 len:3 { "''" }
│                                ← StrChunk ..0000.104365!1 len:1 { "C" }
│                            → StrChunk ..0000.104368!1 len:26 [1]
│                              ← StrChunk ..0000.104367!1 len:2 { "}" }
│                                ← StrChunk ..0000.217048!1 len:1 { "\\" }
│                              → StrChunk ..0000.104411!22 len:24 { "\n\\node (left2)  at (0," }
│                                ← StrChunk ..0000.104369!2 len:2 { "};" }
│                      → StrChunk ..0000.104469!1 len:96 { "," }
│                        ← StrChunk ..0000.217084!2 len:38 [2]
│                          ← StrChunk ..0000.104444!5 len:29 [5]
│                            ← StrChunk ..0000.104440!1 len:21 { ")" }
│                              ← StrChunk ..0000.217340!1 len:0 [1]
│                                ← StrChunk ..0000.219785!2 len:0 [2]
│                                → StrChunk ..0000.104439!1 len:0 [1]
│                              → StrChunk ..0000.104441!3 len:20 { " {\\" }
│                                ← StrChunk ..0000.217514!17 len:17 { " [rectangle,draw]" }
│                            → StrChunk ..0000.104450!1 len:8 [1]
│                              ← StrChunk ..0000.217078!2 len:3 { "``" }
│                                ← StrChunk ..0000.104449!1 len:1 { "{" }
│                              → StrChunk ..0000.217088!2 len:5 { "''" }
│                                ← StrChunk ..0000.104702!3 len:3 { "key" }
│                          → StrChunk ..0000.104465!1 len:9 { "{" }
│                            ← StrChunk ..0000.217098!1 len:3 { " " }
│                              ← StrChunk ..0000.104457!1 len:1 { ":" }
│                                ← StrChunk ..0000.104451!6 len:0 [6]
│                              → StrChunk ..0000.104464!1 len:1 [1]
│                                ← StrChunk ..0000.217261!1 len:1 { "\\" }
│                            → StrChunk ..0000.104467!1 len:5 { "B" }
│                              ← StrChunk ..0000.104466!1 len:2 [1]
│                                ← StrChunk ..0000.217100!2 len:2 { "``" }
│                              → StrChunk ..0000.104468!1 len:2 [1]
│                                ← StrChunk ..0000.217106!2 len:2 { "''" }
│                        → StrChunk ..0000.217628!1 len:57 [1]
│                          ← StrChunk ..0000.104473!1 len:33 { "}" }
│                            ← StrChunk ..0000.104471!1 len:7 { "C" }
│                              ← StrChunk ..0000.104470!1 len:3 [1]
│                                ← StrChunk ..0000.217113!3 len:3 { " ``" }
│                              → StrChunk ..0000.104472!1 len:3 [1]
│                                ← StrChunk ..0000.217123!3 len:3 { "''\\" }
│                            → StrChunk ..0000.104475!1 len:25 [1]
│                              ← StrChunk ..0000.104474!1 len:2 { "}" }
│                                ← StrChunk ..0000.217126!1 len:1 { "\\" }
│                              → StrChunk ..0000.218591!1 len:23 { "8" }
│                                ← StrChunk ..0000.104476!22 len:22 { "};\n\\node (right2) at (" }
│                          → StrChunk ..0000.104500!1 len:24 [1]
│                            ← StrChunk ..0000.219788!1 len:2 { "0" }
│                              ← StrChunk ..0000.104499!1 len:1 { "," }
│                                ← StrChunk ..0000.104498!1 len:0 [1]
│                              → StrChunk ..0000.217338!1 len:0 [1]
│                                ← StrChunk ..0000.219789!2 len:0 [2]
│                            → StrChunk ..0000.104502!3 len:22 { " {\\" }
│                              ← StrChunk ..0000.217531!17 len:18 { " [rectangle,draw]" }
│                                ← StrChunk ..0000.104501!1 len:1 { ")" }
│                              → StrChunk ..0000.104510!1 len:1 { "{" }
│                                ← StrChunk ..0000.104505!5 len:0 [5]
│                    → StrChunk ..0000.104437!1 len:176 [1]
│                      ← StrChunk ..0000.104529!1 len:104 { "}" }
│                        ← StrChunk ..0000.104522!1 len:24 { "B" }
│                          ← StrChunk ..0000.217097!1 len:11 { " " }
│                            ← StrChunk ..0000.217095!2 len:6 { "''" }
│                              ← StrChunk ..0000.104511!1 len:3 [1]
│                                ← StrChunk ..0000.217081!2 len:0 [2]
│                                → StrChunk ..0000.104710!3 len:3 { "key" }
│                              → StrChunk ..0000.104518!1 len:1 { ":" }
│                                ← StrChunk ..0000.104512!6 len:0 [6]
│                            → StrChunk ..0000.104520!1 len:4 { "{" }
│                              ← StrChunk ..0000.104519!1 len:1 [1]
│                                ← StrChunk ..0000.217262!1 len:1 { "\\" }
│                              → StrChunk ..0000.104521!1 len:2 [1]
│                                ← StrChunk ..0000.217103!2 len:2 { "``" }
│                          → StrChunk ..0000.104526!1 len:12 { "C" }
│                            ← StrChunk ..0000.104524!1 len:6 { "," }
│                              ← StrChunk ..0000.104523!1 len:2 [1]
│                                ← StrChunk ..0000.217109!2 len:2 { "''" }
│                              → StrChunk ..0000.104525!1 len:3 [1]
│                                ← StrChunk ..0000.217116!3 len:3 { " ``" }
│                            → StrChunk ..0000.104527!1 len:5 [1]
│                              ← StrChunk ..0000.217130!1 len:3 { "\\" }
│                                ← StrChunk ..0000.217120!2 len:2 { "''" }
│                              → StrChunk ..0000.217129!1 len:2 { "\\" }
│                                ← StrChunk ..0000.104528!1 len:1 { "}" }
│                        → StrChunk ..0000.217787!1 len:79 [1]
│                          ← StrChunk ..0000.217736!1 len:27 { "," }
│                            ← StrChunk ..0000.217715!20 len:23 { "\n\\node (comms)  at (" }
│                              ← StrChunk ..0000.104531!2 len:2 { "};" }
│                                ← StrChunk ..0000.104530!1 len:0 [1]
│                              → StrChunk ..0000.217735!1 len:1 [1]
│                                ← StrChunk ..0000.218593!1 len:1 { "4" }
│                            → StrChunk ..0000.219809!1 len:3 [1]
│                              ← StrChunk ..0000.219985!1 len:3 { "6" }
│                                ← StrChunk ..0000.219807!2 len:2 { "1." }
│                              → StrChunk ..0000.219774!1 len:0 [1]
│                                ← StrChunk ..0000.217737!2 len:0 [2]
│                          → StrChunk ..0000.217743!7 len:52 { "network" }
│                            ← StrChunk ..0000.217798!12 len:29 { " [text=blue]" }
│                              ← StrChunk ..0000.217740!1 len:1 { ")" }
│                                ← StrChunk ..0000.217739!1 len:0 [1]
│                              → StrChunk ..0000.217769!14 len:16 { "\\footnotesize " }
│                                ← StrChunk ..0000.217741!2 len:2 { " {" }
│                            → StrChunk ..0000.217750!1 len:16 [1]
│                              ← StrChunk ..0000.217766!2 len:1 [2]
│                                ← StrChunk ..0000.217785!1 len:1 { " " }
│                              → StrChunk ..0000.104458!3 len:15 [3]
│                                ← StrChunk ..0000.217751!15 len:15 { "communication};" }
│                      → StrChunk ..0000.104954!5 len:72 [5]
│                        ← StrChunk ..0000.104792!4 len:53 [4]
│                          ← StrChunk ..0000.217245!5 len:28 { "left0" }
│                            ← StrChunk ..0000.105191!1 len:19 [1]
│                              ← StrChunk ..0000.104281!8 len:14 { "\n\\draw [" }
│                                ← StrChunk ..0000.104433!2 len:0 [2]
│                                → StrChunk ..0000.105193!6 len:6 { "thick," }
│                              → StrChunk ..0000.104289!5 len:5 { "->] (" }
│                                ← StrChunk ..0000.105185!3 len:0 [3]
│                            → StrChunk ..0000.104299!1 len:4 { ")" }
│                              ← StrChunk ..0000.217213!1 len:0 [1]
│                                ← StrChunk ..0000.104294!5 len:0 [5]
│                              → StrChunk ..0000.104950!2 len:3 { "to" }
│                                ← StrChunk ..0000.104791!1 len:1 { " " }
│                          → StrChunk ..0000.218765!13 len:25 { "inner sep=8pt" }
│                            ← StrChunk ..0000.108302!4 len:12 { "left" }
│                              ← StrChunk ..0000.104952!2 len:7 { " [" }
│                                ← StrChunk ..0000.104796!5 len:5 { " node" }
│                              → StrChunk ..0000.218764!1 len:1 [1]
│                                ← StrChunk ..0000.218763!1 len:1 { "," }
│                            → StrChunk ..0000.108370!3 len:0 [3]
│                              ← StrChunk ..0000.108376!3 len:0 [3]
│                                ← StrChunk ..0000.108333!11 len:0 [11]
│                              → StrChunk ..0000.108325!4 len:0 [4]
│                                ← StrChunk ..0000.108344!3 len:0 [3]
│                        → StrChunk ..0000.104818!2 len:19 { "do" }
│                          ← StrChunk ..0000.104984!14 len:3 [14]
│                            ← StrChunk ..0000.104300!1 len:3 [1]
│                              ← StrChunk ..0000.104959!1 len:1 { "]" }
│                                ← StrChunk ..0000.104968!7 len:0 [7]
│                              → StrChunk ..0000.104782!2 len:2 { " {" }
│                                ← StrChunk ..0000.104778!4 len:0 [4]
│                            → StrChunk ..0000.104877!4 len:0 [4]
│                              ← StrChunk ..0000.104810!1 len:0 [1]
│                                ← StrChunk ..0000.104843!1 len:0 [1]
│                              → StrChunk ..0000.104811!7 len:0 [7]
│                                ← StrChunk ..0000.104848!4 len:0 [4]
│                          → StrChunk ..0000.104821!1 len:14 [1]
│                            ← StrChunk ..0000.104820!1 len:6 [1]
│                              ← StrChunk ..0000.234318!5 len:6 { ".get(" }
│                                ← StrChunk ..0000.234316!1 len:1 { "c" }
│                              → StrChunk ..0000.104840!1 len:0 [1]
│                                ← StrChunk ..0000.104852!1 len:0 [1]
│                            → StrChunk ..0000.234324!1 len:8 { ")" }
│                              ← StrChunk ..0000.104822!7 len:7 { "``key''" }
│                                ← StrChunk ..0000.104854!6 len:0 [6]
│                              → StrChunk ..0000.104841!1 len:0 [1]
│                                ← StrChunk ..0000.104861!1 len:0 [1]
│                  → StrChunk ..0000.217270!7 len:942 { "dashed," }
│                    ← StrChunk ..0000.104919!2 len:251 [2]
│                      ← StrChunk ..0000.217255!6 len:94 { "right0" }
│                        ← StrChunk ..0000.104311!4 len:39 { "left" }
│                          ← StrChunk ..0000.104842!1 len:13 { "}" }
│                            ← StrChunk ..0000.104870!1 len:10 [1]
│                              ← StrChunk ..0000.104864!6 len:10 [6]
│                                ← StrChunk ..0000.104830!4 len:4 { " := " }
│                                → StrChunk ..0000.104834!6 len:6 { "``B'';" }
│                              → StrChunk ..0000.104784!2 len:0 [2]
│                                ← StrChunk ..0000.104863!1 len:0 [1]
│                            → StrChunk ..0000.104301!2 len:2 [2]
│                              ← StrChunk ..0000.104748!14 len:0 [14]
│                                ← StrChunk ..0000.104742!2 len:0 [2]
│                              → StrChunk ..0000.104305!6 len:2 [6]
│                                ← StrChunk ..0000.104303!2 len:2 { " (" }
│                          → StrChunk ..0000.104734!6 len:22 { "\\draw " }
│                            ← StrChunk ..0000.104733!1 len:4 { ";" }
│                              ← StrChunk ..0000.104315!1 len:2 { ")" }
│                                ← StrChunk ..0000.104546!1 len:1 { "1" }
│                              → StrChunk ..0000.104371!1 len:1 { "\n" }
│                                ← StrChunk ..0000.104316!1 len:0 [1]
│                            → StrChunk ..0000.104730!3 len:12 { "->]" }
│                              ← StrChunk ..0000.105199!6 len:7 { "thick," }
│                                ← StrChunk ..0000.104729!1 len:1 { "[" }
│                              → StrChunk ..0000.104382!2 len:2 { " (" }
│                                ← StrChunk ..0000.104372!10 len:0 [10]
│                        → StrChunk ..0000.108358!3 len:49 [3]
│                          ← StrChunk ..0000.104960!2 len:30 { " [" }
│                            ← StrChunk ..0000.104944!2 len:9 { "to" }
│                              ← StrChunk ..0000.104389!2 len:2 { ") " }
│                                ← StrChunk ..0000.104384!5 len:0 [5]
│                              → StrChunk ..0000.104887!5 len:5 { " node" }
│                                ← StrChunk ..0000.104883!4 len:0 [4]
│                            → StrChunk ..0000.108347!11 len:19 [11]
│                              ← StrChunk ..0000.218779!14 len:19 { ",inner sep=8pt" }
│                                ← StrChunk ..0000.108318!5 len:5 { "right" }
│                              → StrChunk ..0000.108364!3 len:0 [3]
│                                ← StrChunk ..0000.108382!3 len:0 [3]
│                          → StrChunk ..0000.104894!7 len:19 [7]
│                            ← StrChunk ..0000.104967!1 len:3 { "]" }
│                              ← StrChunk ..0000.104975!7 len:0 [7]
│                                ← StrChunk ..0000.104962!5 len:0 [5]
│                              → StrChunk ..0000.104998!14 len:2 [14]
│                                ← StrChunk ..0000.104892!2 len:2 { " {" }
│                            → StrChunk ..0000.104904!8 len:16 [8]
│                              ← StrChunk ..0000.234326!5 len:8 { ".get(" }
│                                ← StrChunk ..0000.104901!3 len:3 { "doc" }
│                              → StrChunk ..0000.234332!1 len:8 { ")" }
│                                ← StrChunk ..0000.104912!7 len:7 { "``key''" }
│                      → StrChunk ..0000.104576!10 len:157 { "->] (left1" }
│                        ← StrChunk ..0000.104541!5 len:84 { "->] (" }
│                          ← StrChunk ..0000.104391!2 len:35 [2]
│                            ← StrChunk ..0000.104937!2 len:11 [2]
│                              ← StrChunk ..0000.104925!6 len:10 [6]
│                                ← StrChunk ..0000.104921!4 len:4 { " := " }
│                                → StrChunk ..0000.104931!6 len:6 { "``C'';" }
│                              → StrChunk ..0000.104746!2 len:1 [2]
│                                ← StrChunk ..0000.104939!1 len:1 { "}" }
│                            → StrChunk ..0000.104400!2 len:24 { ");" }
│                              ← StrChunk ..0000.104547!1 len:8 { "1" }
│                                ← StrChunk ..0000.104393!7 len:7 { " (right" }
│                              → StrChunk ..0000.105205!6 len:14 { "thick," }
│                                ← StrChunk ..0000.104533!8 len:8 { "\n\\draw [" }
│                          → StrChunk ..0000.104555!3 len:44 [3]
│                            ← StrChunk ..0000.105014!7 len:10 [7]
│                              ← StrChunk ..0000.217658!2 len:9 { "--" }
│                                ← StrChunk ..0000.104548!7 len:7 { "left1) " }
│                              → StrChunk ..0000.105022!29 len:1 [29]
│                                ← StrChunk ..0000.105021!1 len:1 { " " }
│                            → StrChunk ..0000.217263!7 len:34 { ",dashed" }
│                              ← StrChunk ..0000.105211!5 len:21 { "thick" }
│                                ← StrChunk ..0000.104558!16 len:16 { "(left2);\n\\draw [" }
│                              → StrChunk ..0000.217788!5 len:6 { "blue," }
│                                ← StrChunk ..0000.105216!1 len:1 { "," }
│                        → StrChunk ..0000.219715!1 len:63 [1]
│                          ← StrChunk ..0000.219777!2 len:28 { "27" }
│                            ← StrChunk ..0000.104586!2 len:17 { ") " }
│                              ← StrChunk ..0000.217699!5 len:6 [5]
│                                ← StrChunk ..0000.217693!6 len:6 { ".south" }
│                              → StrChunk ..0000.219721!6 len:9 { " [out=" }
│                                ← StrChunk ..0000.219712!3 len:3 { " to" }
│                            → StrChunk ..0000.219759!7 len:9 { ",in=135" }
│                              ← StrChunk ..0000.219735!1 len:1 { "0" }
│                                ← StrChunk ..0000.219733!2 len:0 [2]
│                              → StrChunk ..0000.219727!3 len:1 [3]
│                                ← StrChunk ..0000.219736!1 len:1 { "]" }
│                          → StrChunk ..0000.104603!1 len:35 { "2" }
│                            ← StrChunk ..0000.104588!2 len:7 [2]
│                              ← StrChunk ..0000.105053!2 len:0 [2]
│                                ← StrChunk ..0000.217662!2 len:0 [2]
│                              → StrChunk ..0000.104593!6 len:7 { "(right" }
│                                ← StrChunk ..0000.104590!1 len:1 { " " }
│                            → StrChunk ..0000.217636!4 len:27 [4]
│                              ← StrChunk ..0000.217681!4 len:11 { "west" }
│                                ← StrChunk ..0000.217629!7 len:7 { ".north " }
│                              → StrChunk ..0000.105217!6 len:16 { "thick," }
│                                ← StrChunk ..0000.104604!10 len:10 { ");\n\\draw [" }
│                    → StrChunk ..0000.103963!10 len:684 [10]
│                      ← StrChunk ..0000.104646!10 len:211 { "->] (right" }
│                        ← StrChunk ..0000.219758!1 len:77 { "]" }
│                          ← StrChunk ..0000.219747!5 len:41 { " [out" }
│                            ← StrChunk ..0000.217710!5 len:26 [5]
│                              ← StrChunk ..0000.104614!11 len:22 { "->] (right1" }
│                                ← StrChunk ..0000.217793!5 len:5 { "blue," }
│                                → StrChunk ..0000.217704!6 len:6 { ".south" }
│                              → StrChunk ..0000.219719!2 len:4 { "to" }
│                                ← StrChunk ..0000.104625!2 len:2 { ") " }
│                            → StrChunk ..0000.219755!2 len:10 [2]
│                              ← StrChunk ..0000.219781!2 len:3 { "27" }
│                                ← StrChunk ..0000.219754!1 len:1 { "=" }
│                              → StrChunk ..0000.219766!6 len:7 { ",in=45" }
│                                ← StrChunk ..0000.219757!1 len:1 { "0" }
│                          → StrChunk ..0000.104629!7 len:35 { " (left2" }
│                            ← StrChunk ..0000.217666!2 len:1 [2]
│                              ← StrChunk ..0000.219752!1 len:1 [1]
│                                ← StrChunk ..0000.219772!1 len:1 { " " }
│                              → StrChunk ..0000.104627!2 len:0 [2]
│                                ← StrChunk ..0000.105057!38 len:0 [38]
│                            → StrChunk ..0000.217647!4 len:27 [4]
│                              ← StrChunk ..0000.217689!4 len:11 { "east" }
│                                ← StrChunk ..0000.217640!7 len:7 { ".north " }
│                              → StrChunk ..0000.105223!6 len:16 { "thick," }
│                                ← StrChunk ..0000.104636!10 len:10 { ");\n\\draw [" }
│                        → StrChunk ..0000.104574!1 len:124 [1]
│                          ← StrChunk ..0000.104661!3 len:15 [3]
│                            ← StrChunk ..0000.105097!7 len:6 [7]
│                              ← StrChunk ..0000.217675!2 len:5 { "--" }
│                                ← StrChunk ..0000.104658!3 len:3 { "1) " }
│                              → StrChunk ..0000.105105!30 len:1 [30]
│                                ← StrChunk ..0000.105104!1 len:1 { " " }
│                            → StrChunk ..0000.104656!1 len:9 [1]
│                              ← StrChunk ..0000.217291!1 len:9 [1]
│                                ← StrChunk ..0000.104664!9 len:9 { "(right2);" }
│                              → StrChunk ..0000.104591!1 len:0 [1]
│                                ← StrChunk ..0000.104599!2 len:0 [2]
│                          → StrChunk ..0000.223349!7 len:109 { "``key''" }
│                            ← StrChunk ..0000.223329!19 len:77 { "the register at doc" }
│                              ← StrChunk ..0000.103928!35 len:53 { "\n\\caption{Concurrent assignment " … }
│                                ← StrChunk ..0000.103908!18 len:18 { "\n\\end{tikzpicture}" }
│                              → StrChunk ..0000.223348!1 len:5 [1]
│                                ← StrChunk ..0000.241099!5 len:5 { ".get(" }
│                            → StrChunk ..0000.223357!6 len:25 { " by re" }
│                              ← StrChunk ..0000.223356!1 len:1 [1]
│                                ← StrChunk ..0000.241105!1 len:1 { ")" }
│                              → StrChunk ..0000.223363!6 len:18 [6]
│                                ← StrChunk ..0000.223375!18 len:18 { "plicas $p$ and $q$" }
│                      → StrChunk ..0000.239741!18 len:473 { "CRDT for JSON data" }
│                        ← StrChunk ..0000.103885!1 len:301 { "}" }
│                          ← StrChunk ..0000.103982!21 len:42 { "{fig:register-assign}" }
│                            ← StrChunk ..0000.223278!18 len:8 [18]
│                              ← StrChunk ..0000.223314!3 len:0 [3]
│                                ← StrChunk ..0000.223277!1 len:0 [1]
│                              → StrChunk ..0000.103973!7 len:8 { "}\\label" }
│                                ← StrChunk ..0000.154744!1 len:1 { "." }
│                            → StrChunk ..0000.103872!12 len:13 { "\n\\end{figure" }
│                              ← StrChunk ..0000.103926!1 len:0 [1]
│                                ← StrChunk ..0000.103980!1 len:0 [1]
│                              → StrChunk ..0000.103884!1 len:1 [1]
│                                ← StrChunk ..0000.217277!1 len:1 { "*" }
│                          → StrChunk ..0000.240030!10 len:258 { " However, " }
│                            ← StrChunk ..0000.239796!216 len:232 { "The sequential semantics of edit" … }
│                              ← StrChunk ..0000.239794!1 len:2 { "\n" }
│                                ← StrChunk ..0000.106194!1 len:1 { "\n" }
│                              → StrChunk ..0000.240012!3 len:14 { "})." }
│                                ← StrChunk ..0000.240019!11 len:11 { "sec:related" }
│                            → StrChunk ..0000.239657!1 len:16 [1]
│                              ← StrChunk ..0000.239795!1 len:4 [1]
│                                ← StrChunk ..0000.240059!4 len:4 { "when" }
│                              → StrChunk ..0000.239719!12 len:12 { " defining a " }
│                                ← StrChunk ..0000.239702!17 len:0 [17]
│                        → StrChunk ..0000.240142!24 len:154 { "e following examples we " }
│                          ← StrChunk ..0000.240086!39 len:99 { "concurrency and nested data stru" … }
│                            ← StrChunk ..0000.239762!23 len:53 { " due to the interaction" }
│                              ← StrChunk ..0000.239759!3 len:20 [3]
│                                ← StrChunk ..0000.240063!20 len:20 { ", difficulties arise" }
│                              → StrChunk ..0000.239785!9 len:10 { " between " }
│                                ← StrChunk ..0000.240339!1 len:1 { "s" }
│                            → StrChunk ..0000.239658!1 len:7 { "\n" }
│                              ← StrChunk ..0000.239731!5 len:0 [5]
│                                ← StrChunk ..0000.240125!1 len:0 [1]
│                              → StrChunk ..0000.240127!5 len:6 { "In th" }
│                                ← StrChunk ..0000.106195!1 len:1 { "\n" }
│                          → StrChunk ..0000.106297!25 len:31 [25]
│                            ← StrChunk ..0000.240132!5 len:5 [5]
│                              ← StrChunk ..0000.240166!10 len:5 [10]
│                                ← StrChunk ..0000.240186!5 len:5 { "show " }
│                              → StrChunk ..0000.106196!99 len:0 [99]
│                                ← StrChunk ..0000.153634!1 len:0 [1]
│                            → StrChunk ..0000.240343!1 len:26 { "m" }
│                              ← StrChunk ..0000.240205!17 len:21 { " situations that " }
│                                ← StrChunk ..0000.106322!4 len:4 { "some" }
│                              → StrChunk ..0000.240344!2 len:4 [2]
│                                ← StrChunk ..0000.240348!4 len:4 { "ight" }
│                → StrChunk ..0000.180969!3 len:2141 { " be" }
│                  ← StrChunk ..0000.223255!1 len:1004 [1]
│                    ← StrChunk ..0000.222504!11 len:548 { "olid arrows" }
│                      ← StrChunk ..0000.221436!1 len:370 [1]
│                        ← StrChunk ..0000.221340!21 len:229 [21]
│                          ← StrChunk ..0000.245787!52 len:187 { ", and explain the rationale for " … }
│                            ← StrChunk ..0000.240284!4 len:103 [4]
│                              ← StrChunk ..0000.106326!29 len:54 [29]
│                                ← StrChunk ..0000.240225!6 len:6 { " occur" }
│                                → StrChunk ..0000.153635!48 len:48 { " when JSON documents are concurr" … }
│                              → StrChunk ..0000.240323!16 len:49 { "by our algorithm" }
│                                ← StrChunk ..0000.240288!33 len:33 { "demonstrate how they are handled" … }
│                            → StrChunk ..0000.106355!1 len:32 { "." }
│                              ← StrChunk ..0000.153683!24 len:0 [24]
│                                ← StrChunk ..0000.240321!1 len:0 [1]
│                              → StrChunk ..0000.221943!4 len:31 { "two " }
│                                ← StrChunk ..0000.221313!27 len:27 { " In all examples we assume " }
│                          → StrChunk ..0000.221385!1 len:42 { " " }
│                            ← StrChunk ..0000.221376!8 len:9 { "replicas" }
│                              ← StrChunk ..0000.221370!6 len:0 [6]
│                                ← StrChunk ..0000.221363!5 len:0 [5]
│                              → StrChunk ..0000.221384!1 len:1 [1]
│                                ← StrChunk ..0000.221947!1 len:1 { "," }
│                            → StrChunk ..0000.221407!5 len:32 { " $p$ " }
│                              ← StrChunk ..0000.221404!3 len:8 [3]
│                                ← StrChunk ..0000.221396!8 len:8 { "labelled" }
│                              → StrChunk ..0000.225421!1 len:19 { "-" }
│                                ← StrChunk ..0000.221418!18 len:18 { "(drawn on the left" }
│                        → StrChunk ..0000.222443!1 len:141 { " " }
│                          ← StrChunk ..0000.221485!4 len:49 { "ide)" }
│                            ← StrChunk ..0000.225422!1 len:32 { "-" }
│                              ← StrChunk ..0000.221450!18 len:25 { "de) and $q$ (right" }
│                                ← StrChunk ..0000.221437!7 len:7 { "hand si" }
│                              → StrChunk ..0000.221469!6 len:6 { "hand s" }
│                                ← StrChunk ..0000.221468!1 len:0 [1]
│                            → StrChunk ..0000.222395!7 len:13 [7]
│                              ← StrChunk ..0000.222651!2 len:4 { "Lo" }
│                                ← StrChunk ..0000.222646!2 len:2 { ". " }
│                              → StrChunk ..0000.222430!9 len:9 { "cal state" }
│                                ← StrChunk ..0000.222428!2 len:0 [2]
│                          → StrChunk ..0000.222578!13 len:91 { "to local stat" }
│                            ← StrChunk ..0000.222459!1 len:51 { "s" }
│                              ← StrChunk ..0000.222444!13 len:30 { "drawn in boxe" }
│                                ← StrChunk ..0000.222653!17 len:17 { "for a replica is " }
│                              → StrChunk ..0000.222460!19 len:20 { " and modifications " }
│                                ← StrChunk ..0000.240352!1 len:1 { "," }
│                            → StrChunk ..0000.222594!1 len:27 { " " }
│                              ← StrChunk ..0000.240353!4 len:5 { " are" }
│                                ← StrChunk ..0000.222593!1 len:1 { "e" }
│                              → StrChunk ..0000.222479!21 len:21 { "shown with labelled s" }
│                                ← StrChunk ..0000.222591!1 len:0 [1]
│                      → StrChunk ..0000.222569!1 len:167 { " " }
│                        ← StrChunk ..0000.221489!1 len:53 [1]
│                          ← StrChunk ..0000.222552!5 len:26 { "page." }
│                            ← StrChunk ..0000.222604!1 len:21 { "s" }
│                              ← StrChunk ..0000.222515!4 len:10 [4]
│                                ← StrChunk ..0000.222599!1 len:1 { ";" }
│                                → StrChunk ..0000.222519!9 len:9 { " time run" }
│                              → StrChunk ..0000.222532!10 len:10 { " down the " }
│                                ← StrChunk ..0000.222528!4 len:0 [4]
│                            → StrChunk ..0000.222457!1 len:0 [1]
│                              ← StrChunk ..0000.222500!2 len:0 [2]
│                                ← StrChunk ..0000.222542!5 len:0 [5]
│                              → StrChunk ..0000.222402!13 len:0 [13]
│                                ← StrChunk ..0000.222439!2 len:0 [2]
│                          → StrChunk ..0000.221708!6 len:27 [6]
│                            ← StrChunk ..0000.221720!19 len:0 [19]
│                              ← StrChunk ..0000.221664!44 len:0 [44]
│                                ← StrChunk ..0000.221641!21 len:0 [21]
│                              → StrChunk ..0000.221739!13 len:0 [13]
│                                ← StrChunk ..0000.221765!14 len:0 [14]
│                            → StrChunk ..0000.222148!15 len:27 { "Since replicas " }
│                              ← StrChunk ..0000.221490!1 len:1 { " " }
│                                ← StrChunk ..0000.221662!1 len:0 [1]
│                              → StrChunk ..0000.222163!6 len:11 { "mutate" }
│                                ← StrChunk ..0000.222570!5 len:5 { "only " }
│                        → StrChunk ..0000.222619!17 len:113 [17]
│                          ← StrChunk ..0000.222605!14 len:68 { " communication" }
│                            ← StrChunk ..0000.222217!11 len:20 { "local state" }
│                              ← StrChunk ..0000.222206!11 len:0 [11]
│                                ← StrChunk ..0000.222169!1 len:0 [1]
│                              → StrChunk ..0000.223178!8 len:9 { " we make" }
│                                ← StrChunk ..0000.222576!1 len:1 { "," }
│                            → StrChunk ..0000.223200!7 len:34 { "hanges " }
│                              ← StrChunk ..0000.223186!10 len:11 { "of state c" }
│                                ← StrChunk ..0000.222914!1 len:1 { " " }
│                              → StrChunk ..0000.222915!16 len:16 { "between replicas" }
│                                ← StrChunk ..0000.223196!2 len:0 [2]
│                          → StrChunk ..0000.222670!2 len:45 { "ex" }
│                            ← StrChunk ..0000.222899!7 len:1 [7]
│                              ← StrChunk ..0000.222913!1 len:0 [1]
│                                ← StrChunk ..0000.222885!14 len:0 [14]
│                              → StrChunk ..0000.222639!1 len:1 { " " }
│                                ← StrChunk ..0000.222636!3 len:0 [3]
│                            → StrChunk ..0000.222707!1 len:42 { " " }
│                              ← StrChunk ..0000.223240!1 len:20 { "." }
│                                ← StrChunk ..0000.222688!19 len:19 { "plicit in our model" }
│                              → StrChunk ..0000.223257!18 len:21 { "work communication" }
│                                ← StrChunk ..0000.223252!3 len:3 { "Net" }
│                    → StrChunk ..0000.221481!2 len:456 [2]
│                      ← StrChunk ..0000.222230!2 len:32 [2]
│                        ← StrChunk ..0000.222294!19 len:32 [19]
│                          ← StrChunk ..0000.222678!5 len:32 [5]
│                            ← StrChunk ..0000.222737!28 len:32 { "depicted with dashed arrows." }
│                              ← StrChunk ..0000.222708!3 len:4 [3]
│                                ← StrChunk ..0000.223244!4 len:0 [4]
│                                → StrChunk ..0000.222711!4 len:4 { " is " }
│                              → StrChunk ..0000.222715!11 len:0 [11]
│                                ← StrChunk ..0000.222765!2 len:0 [2]
│                            → StrChunk ..0000.222228!2 len:0 [2]
│                              ← StrChunk ..0000.222577!1 len:0 [1]
│                                ← StrChunk ..0000.222672!3 len:0 [3]
│                              → StrChunk ..0000.222263!23 len:0 [23]
│                                ← StrChunk ..0000.222250!9 len:0 [9]
│                          → StrChunk ..0000.222313!1 len:0 [1]
│                            ← StrChunk ..0000.222378!16 len:0 [16]
│                              ← StrChunk ..0000.222320!44 len:0 [44]
│                                ← StrChunk ..0000.222315!1 len:0 [1]
│                              → StrChunk ..0000.222316!2 len:0 [2]
│                                ← StrChunk ..0000.222364!7 len:0 [7]
│                            → StrChunk ..0000.222287!2 len:0 [2]
│                              ← StrChunk ..0000.222291!1 len:0 [1]
│                                ← StrChunk ..0000.222286!1 len:0 [1]
│                              → StrChunk ..0000.222234!8 len:0 [8]
│                                ← StrChunk ..0000.222259!2 len:0 [2]
│                        → StrChunk ..0000.221565!3 len:0 [3]
│                          ← StrChunk ..0000.222051!3 len:0 [3]
│                            ← StrChunk ..0000.222171!1 len:0 [1]
│                              ← StrChunk ..0000.222173!16 len:0 [16]
│                                ← StrChunk ..0000.222170!1 len:0 [1]
│                              → StrChunk ..0000.221542!10 len:0 [10]
│                                ← StrChunk ..0000.221491!9 len:0 [9]
│                            → StrChunk ..0000.222071!5 len:0 [5]
│                              ← StrChunk ..0000.222054!15 len:0 [15]
│                                ← StrChunk ..0000.222096!15 len:0 [15]
│                              → StrChunk ..0000.221552!7 len:0 [7]
│                                ← StrChunk ..0000.222069!1 len:0 [1]
│                          → StrChunk ..0000.221887!23 len:0 [23]
│                            ← StrChunk ..0000.221577!19 len:0 [19]
│                              ← StrChunk ..0000.221568!1 len:0 [1]
│                                ← StrChunk ..0000.221879!8 len:0 [8]
│                              → StrChunk ..0000.221637!4 len:0 [4]
│                                ← StrChunk ..0000.221598!35 len:0 [35]
│                            → StrChunk ..0000.221569!4 len:0 [4]
│                              ← StrChunk ..0000.221596!1 len:0 [1]
│                                ← StrChunk ..0000.221633!2 len:0 [2]
│                              → StrChunk ..0000.221500!21 len:0 [21]
│                                ← StrChunk ..0000.221559!3 len:0 [3]
│                      → StrChunk ..0000.221055!4 len:424 [4]
│                        ← StrChunk ..0000.221067!15 len:65 [15]
│                          ← StrChunk ..0000.221361!1 len:65 [1]
│                            ← StrChunk ..0000.221412!3 len:0 [3]
│                              ← StrChunk ..0000.221444!3 len:0 [3]
│                                ← StrChunk ..0000.221475!3 len:0 [3]
│                              → StrChunk ..0000.221368!1 len:0 [1]
│                                ← StrChunk ..0000.221386!5 len:0 [5]
│                            → StrChunk ..0000.220967!4 len:65 [4]
│                              ← StrChunk ..0000.106356!65 len:65 { "\n\nOur first example is shown in " … }
│                                ← StrChunk ..0000.221311!1 len:0 [1]
│                              → StrChunk ..0000.221063!2 len:0 [2]
│                                ← StrChunk ..0000.221053!2 len:0 [2]
│                          → StrChunk ..0000.221150!46 len:0 [46]
│                            ← StrChunk ..0000.221098!20 len:0 [20]
│                              ← StrChunk ..0000.221201!7 len:0 [7]
│                                ← StrChunk ..0000.221092!6 len:0 [6]
│                              → StrChunk ..0000.221140!2 len:0 [2]
│                                ← StrChunk ..0000.221132!4 len:0 [4]
│                            → StrChunk ..0000.221118!7 len:0 [7]
│                              ← StrChunk ..0000.221136!2 len:0 [2]
│                                ← StrChunk ..0000.221142!4 len:0 [4]
│                              → StrChunk ..0000.221065!1 len:0 [1]
│                                ← StrChunk ..0000.221082!5 len:0 [5]
│                        → StrChunk ..0000.223156!4 len:359 { " $p$" }
│                          ← StrChunk ..0000.106423!20 len:72 { " document that maps " }
│                            ← StrChunk ..0000.106421!1 len:5 { " " }
│                              ← StrChunk ..0000.220971!28 len:0 [28]
│                                ← StrChunk ..0000.221027!13 len:0 [13]
│                              → StrChunk ..0000.106422!1 len:4 [1]
│                                ← StrChunk ..0000.106444!4 len:4 { "In a" }
│                            → StrChunk ..0000.106458!7 len:47 { " ``A''," }
│                              ← StrChunk ..0000.107058!22 len:32 { " a register with value" }
│                                ← StrChunk ..0000.106448!10 len:10 { "``key'' to" }
│                              → StrChunk ..0000.106469!8 len:8 { " replica" }
│                                ← StrChunk ..0000.106465!4 len:0 [4]
│                          → StrChunk ..0000.106520!7 len:283 [7]
│                            ← StrChunk ..0000.106500!3 len:59 [3]
│                              ← StrChunk ..0000.106612!8 len:31 { "register" }
│                                ← StrChunk ..0000.106477!23 len:23 { " sets the value of the " }
│                              → StrChunk ..0000.223167!11 len:28 { "replica $q$" }
│                                ← StrChunk ..0000.106503!17 len:17 { " to ``B'', while " }
│                            → StrChunk ..0000.106602!7 len:224 { ", they " }
│                              ← StrChunk ..0000.222931!26 len:101 { " via network communication" }
│                                ← StrChunk ..0000.106527!75 len:75 { " concurrently sets it to ``C''. " … }
│                              → StrChunk ..0000.106676!86 len:116 { "do not want to simply discard on" … }
│                                ← StrChunk ..0000.106620!30 len:30 { "detect the conflict. Since we " }
│                  → StrChunk ..0000.107342!1 len:1134 [1]
│                    ← StrChunk ..0000.223071!1 len:881 [1]
│                      ← StrChunk ..0000.114063!1 len:728 [1]
│                        ← StrChunk ..0000.240485!49 len:728 { "We use it only for primitive val" … }
│                          ← StrChunk ..0000.109504!26 len:399 { "multiple values that were " }
│                            ← StrChunk ..0000.106852!80 len:237 { " is known as a \\emph{multi-value" … }
│                              ← StrChunk ..0000.106776!3 len:85 [3]
│                                ← StrChunk ..0000.106762!14 len:14 { " meaningfully " }
│                                → StrChunk ..0000.106779!71 len:71 { "merged, the system must preserve" … }
│                              → StrChunk ..0000.106989!41 len:72 { "reading the register may return " … }
│                                ← StrChunk ..0000.106934!31 len:31 { " single value to the register, " }
│                            → StrChunk ..0000.107057!1 len:136 { "." }
│                              ← StrChunk ..0000.107050!7 len:20 [7]
│                                ← StrChunk ..0000.107030!20 len:20 { "concurrently written" }
│                              → StrChunk ..0000.240371!106 len:115 { "-value register is hardly an imp" … }
│                                ← StrChunk ..0000.240360!9 len:9 { "\n\nA multi" }
│                          → StrChunk ..0000.240562!86 len:280 { "function is defined. Other CRDTs" … }
│                            ← StrChunk ..0000.240557!1 len:16 [1]
│                              ← StrChunk ..0000.240559!3 len:9 { "tic" }
│                                ← StrChunk ..0000.240551!6 len:6 { "automa" }
│                              → StrChunk ..0000.240539!7 len:7 { " merge " }
│                                ← StrChunk ..0000.240534!5 len:0 [5]
│                            → StrChunk ..0000.240648!1 len:178 [1]
│                              ← StrChunk ..0000.240828!1 len:178 [1]
│                                ← StrChunk ..0000.240650!178 len:178 { "nter CRDT for a number that can " … }
│                              → StrChunk ..0000.240369!1 len:0 [1]
│                                ← StrChunk ..0000.240477!4 len:0 [4]
│                        → StrChunk ..0000.223151!1 len:0 [1]
│                          ← StrChunk ..0000.222957!51 len:0 [51]
│                            ← StrChunk ..0000.114186!1 len:0 [1]
│                              ← StrChunk ..0000.114064!108 len:0 [108]
│                                ← StrChunk ..0000.240357!2 len:0 [2]
│                              → StrChunk ..0000.114187!10 len:0 [10]
│                                ← StrChunk ..0000.114172!14 len:0 [14]
│                            → StrChunk ..0000.223107!32 len:0 [32]
│                              ← StrChunk ..0000.223019!2 len:0 [2]
│                                ← StrChunk ..0000.223012!3 len:0 [3]
│                              → StrChunk ..0000.223032!15 len:0 [15]
│                                ← StrChunk ..0000.223021!5 len:0 [5]
│                          → StrChunk ..0000.223058!3 len:0 [3]
│                            ← StrChunk ..0000.223015!2 len:0 [2]
│                              ← StrChunk ..0000.223026!3 len:0 [3]
│                                ← StrChunk ..0000.223047!7 len:0 [7]
│                              → StrChunk ..0000.114197!7 len:0 [7]
│                                ← StrChunk ..0000.223008!2 len:0 [2]
│                            → StrChunk ..0000.223061!3 len:0 [3]
│                              ← StrChunk ..0000.114232!6 len:0 [6]
│                                ← StrChunk ..0000.114204!5 len:0 [5]
│                              → StrChunk ..0000.223073!7 len:0 [7]
│                                ← StrChunk ..0000.223068!3 len:0 [3]
│                      → StrChunk ..0000.107310!8 len:153 { "\n\\node (" }
│                        ← StrChunk ..0000.218536!2 len:104 { ",-" }
│                          ← StrChunk ..0000.107113!36 len:90 { "\n\\centering\n\\begin{tikzpicture}[" … }
│                            ← StrChunk ..0000.107080!2 len:20 { "\n\n" }
│                              ← StrChunk ..0000.114238!3 len:0 [3]
│                                ← StrChunk ..0000.223064!2 len:0 [2]
│                                → StrChunk ..0000.114209!23 len:0 [23]
│                              → StrChunk ..0000.242327!3 len:18 { "[p]" }
│                                ← StrChunk ..0000.107084!15 len:15 { "\\begin{figure*}" }
│                            → StrChunk ..0000.218513!22 len:34 { "\n\\path [draw,dotted] (" }
│                              ← StrChunk ..0000.107149!1 len:11 { "]" }
│                                ← StrChunk ..0000.218564!10 len:10 { ",scale=0.8" }
│                              → StrChunk ..0000.218535!1 len:1 [1]
│                                ← StrChunk ..0000.218595!1 len:1 { "4" }
│                          → StrChunk ..0000.218548!1 len:12 { "," }
│                            ← StrChunk ..0000.218541!6 len:8 { ") -- (" }
│                              ← StrChunk ..0000.218538!3 len:1 [3]
│                                ← StrChunk ..0000.218601!1 len:1 { "1" }
│                              → StrChunk ..0000.218547!1 len:1 [1]
│                                ← StrChunk ..0000.218597!1 len:1 { "4" }
│                            → StrChunk ..0000.218603!3 len:3 [3]
│                              ← StrChunk ..0000.219709!1 len:1 [1]
│                                ← StrChunk ..0000.234695!1 len:1 { "8" }
│                              → StrChunk ..0000.218550!2 len:2 { ");" }
│                                ← StrChunk ..0000.218549!1 len:0 [1]
│                        → StrChunk ..0000.234693!1 len:41 [1]
│                          ← StrChunk ..0000.107325!4 len:17 { "at (" }
│                            ← StrChunk ..0000.107323!2 len:8 { ") " }
│                              ← StrChunk ..0000.107318!5 len:5 [5]
│                                ← StrChunk ..0000.218166!5 len:5 { "left0" }
│                              → StrChunk ..0000.107391!1 len:1 [1]
│                                ← StrChunk ..0000.218200!1 len:1 { " " }
│                            → StrChunk ..0000.107329!1 len:5 [1]
│                              ← StrChunk ..0000.107781!1 len:1 [1]
│                                ← StrChunk ..0000.218172!1 len:1 { "0" }
│                              → StrChunk ..0000.235073!3 len:4 { "7.5" }
│                                ← StrChunk ..0000.107330!1 len:1 { "," }
│                          → StrChunk ..0000.107332!1 len:24 { ")" }
│                            ← StrChunk ..0000.108948!1 len:0 [1]
│                              ← StrChunk ..0000.218561!1 len:0 [1]
│                                ← StrChunk ..0000.219707!1 len:0 [1]
│                              → StrChunk ..0000.107331!1 len:0 [1]
│                                ← StrChunk ..0000.108703!1 len:0 [1]
│                            → StrChunk ..0000.107336!5 len:23 [5]
│                              ← StrChunk ..0000.107333!3 len:20 { " {\\" }
│                                ← StrChunk ..0000.218342!17 len:17 { " [rectangle,draw]" }
│                              → StrChunk ..0000.218110!2 len:3 { "``" }
│                                ← StrChunk ..0000.107341!1 len:1 { "{" }
│                    → StrChunk ..0000.107399!1 len:253 { ")" }
│                      ← StrChunk ..0000.218173!20 len:160 { "\n\\node (right0) at (" }
│                        ← StrChunk ..0000.218101!2 len:40 { "``" }
│                          ← StrChunk ..0000.218107!2 len:22 { "``" }
│                            ← StrChunk ..0000.107350!2 len:12 { ": " }
│                              ← StrChunk ..0000.218113!2 len:8 { "''" }
│                                ← StrChunk ..0000.107343!6 len:6 { "colors" }
│                                → StrChunk ..0000.107349!1 len:0 [1]
│                              → StrChunk ..0000.107352!1 len:2 { "{" }
│                                ← StrChunk ..0000.218115!1 len:1 { "\\" }
│                            → StrChunk ..0000.218104!2 len:8 { "''" }
│                              ← StrChunk ..0000.107354!4 len:4 { "blue" }
│                                ← StrChunk ..0000.107353!1 len:0 [1]
│                              → StrChunk ..0000.107359!2 len:2 { ": " }
│                                ← StrChunk ..0000.107358!1 len:0 [1]
│                          → StrChunk ..0000.218096!1 len:16 { "\\" }
│                            ← StrChunk ..0000.107362!7 len:10 { "#0000ff" }
│                              ← StrChunk ..0000.107361!1 len:1 [1]
│                                ← StrChunk ..0000.218121!1 len:1 { "\\" }
│                              → StrChunk ..0000.107369!1 len:2 [1]
│                                ← StrChunk ..0000.218098!2 len:2 { "''" }
│                            → StrChunk ..0000.107371!1 len:5 { "}" }
│                              ← StrChunk ..0000.218095!1 len:2 { "\\" }
│                                ← StrChunk ..0000.107370!1 len:1 { "}" }
│                              → StrChunk ..0000.107373!2 len:2 { "};" }
│                                ← StrChunk ..0000.107372!1 len:0 [1]
│                        → StrChunk ..0000.218197!2 len:100 { " {" }
│                          ← StrChunk ..0000.234691!1 len:23 [1]
│                            ← StrChunk ..0000.218193!1 len:5 [1]
│                              ← StrChunk ..0000.218506!1 len:1 [1]
│                                ← StrChunk ..0000.218607!1 len:1 { "8" }
│                              → StrChunk ..0000.235077!3 len:4 { "7.5" }
│                                ← StrChunk ..0000.218194!1 len:1 { "," }
│                            → StrChunk ..0000.218195!1 len:18 [1]
│                              ← StrChunk ..0000.218559!1 len:0 [1]
│                                ← StrChunk ..0000.219705!1 len:0 [1]
│                              → StrChunk ..0000.218359!17 len:18 { " [rectangle,draw]" }
│                                ← StrChunk ..0000.218196!1 len:1 { ")" }
│                          → StrChunk ..0000.107389!1 len:75 [1]
│                            ← StrChunk ..0000.107375!6 len:67 { "\n\\node" }
│                              ← StrChunk ..0000.218199!1 len:44 [1]
│                                ← StrChunk ..0000.218202!44 len:44 { "\\{``colors'': \\{``blue'': ``\\#00" … }
│                              → StrChunk ..0000.107381!8 len:17 { " (left1)" }
│                                ← StrChunk ..0000.107485!9 len:9 { " [matrix]" }
│                            → StrChunk ..0000.219703!1 len:8 { "4" }
│                              ← StrChunk ..0000.107392!6 len:7 { "at (0," }
│                                ← StrChunk ..0000.107390!1 len:1 { " " }
│                              → StrChunk ..0000.107398!1 len:0 [1]
│                                ← StrChunk ..0000.218563!1 len:0 [1]
│                      → StrChunk ..0000.107627!1 len:92 [1]
│                        ← StrChunk ..0000.107609!1 len:60 [1]
│                          ← StrChunk ..0000.107596!5 len:43 [5]
│                            ← StrChunk ..0000.107516!5 len:32 { "\n    " }
│                              ← StrChunk ..0000.107400!2 len:19 { " {" }
│                                ← StrChunk ..0000.218376!17 len:17 { " [rectangle,draw]" }
│                              → StrChunk ..0000.107595!1 len:8 { "\\" }
│                                ← StrChunk ..0000.107501!7 len:7 { "\\node {" }
│                            → StrChunk ..0000.107602!1 len:11 [1]
│                              ← StrChunk ..0000.218075!2 len:3 { "``" }
│                                ← StrChunk ..0000.107601!1 len:1 { "{" }
│                              → StrChunk ..0000.218078!2 len:8 { "''" }
│                                ← StrChunk ..0000.107603!6 len:6 { "colors" }
│                          → StrChunk ..0000.107620!4 len:17 { "blue" }
│                            ← StrChunk ..0000.107612!1 len:6 { "{" }
│                              ← StrChunk ..0000.218080!1 len:3 { "\\" }
│                                ← StrChunk ..0000.107610!2 len:2 { ": " }
│                              → StrChunk ..0000.107613!1 len:2 [1]
│                                ← StrChunk ..0000.218082!2 len:2 { "``" }
│                            → StrChunk ..0000.107625!2 len:7 { ": " }
│                              ← StrChunk ..0000.107624!1 len:2 [1]
│                                ← StrChunk ..0000.218085!2 len:2 { "''" }
│                              → StrChunk ..0000.218122!1 len:3 { "\\" }
│                                ← StrChunk ..0000.218088!2 len:2 { "``" }
│                        → StrChunk ..0000.107508!1 len:32 { "}" }
│                          ← StrChunk ..0000.107614!3 len:10 [3]
│                            ← StrChunk ..0000.107635!1 len:10 [1]
│                              ← StrChunk ..0000.218091!2 len:9 { "''" }
│                                ← StrChunk ..0000.107628!7 len:7 { "#0000ff" }
│                              → StrChunk ..0000.107637!1 len:1 [1]
│                                ← StrChunk ..0000.107636!1 len:1 { "," }
│                            → StrChunk ..0000.107402!35 len:0 [35]
│                              ← StrChunk ..0000.107473!6 len:0 [6]
│                                ← StrChunk ..0000.107528!1 len:0 [1]
│                              → StrChunk ..0000.107437!1 len:0 [1]
│                                ← StrChunk ..0000.107440!1 len:0 [1]
│                          → StrChunk ..0000.107525!1 len:21 { " " }
│                            ← StrChunk ..0000.107521!4 len:14 { "\n   " }
│                              ← StrChunk ..0000.107441!3 len:4 { " \\\\" }
│                                ← StrChunk ..0000.107592!1 len:1 { ";" }
│                              → StrChunk ..0000.107509!5 len:6 { "\\node" }
│                                ← StrChunk ..0000.107444!1 len:1 { " " }
│                            → StrChunk ..0000.107639!6 len:6 [6]
│                              ← StrChunk ..0000.218064!2 len:3 { "``" }
│                                ← StrChunk ..0000.107514!1 len:1 { "{" }
│                              → StrChunk ..0000.107648!3 len:3 { "red" }
│                                ← StrChunk ..0000.107647!1 len:0 [1]
│              → StrChunk ..0000.108945!2 len:2087 { ");" }
│                ← StrChunk ..0000.108052!1 len:1184 [1]
│                  ← StrChunk ..0000.107777!1 len:442 [1]
│                    ← StrChunk ..0000.218041!2 len:179 { "''" }
│                      ← StrChunk ..0000.107499!1 len:81 [1]
│                        ← StrChunk ..0000.107667!1 len:24 [1]
│                          ← StrChunk ..0000.218052!2 len:18 { "''" }
│                            ← StrChunk ..0000.218123!1 len:12 { "\\" }
│                              ← StrChunk ..0000.107654!2 len:4 { ": " }
│                                ← StrChunk ..0000.107653!1 len:0 [1]
│                                → StrChunk ..0000.218055!2 len:2 { "``" }
│                              → StrChunk ..0000.107657!7 len:7 { "#ff0000" }
│                                ← StrChunk ..0000.107656!1 len:0 [1]
│                            → StrChunk ..0000.107665!1 len:4 { "}" }
│                              ← StrChunk ..0000.218050!1 len:1 { "\\" }
│                                ← StrChunk ..0000.107664!1 len:0 [1]
│                              → StrChunk ..0000.107666!1 len:2 { "}" }
│                                ← StrChunk ..0000.218049!1 len:1 { "\\" }
│                          → StrChunk ..0000.107450!17 len:6 [17]
│                            ← StrChunk ..0000.107591!1 len:0 [1]
│                              ← StrChunk ..0000.107645!1 len:0 [1]
│                                ← StrChunk ..0000.107651!1 len:0 [1]
│                              → StrChunk ..0000.107468!1 len:0 [1]
│                                ← StrChunk ..0000.107445!5 len:0 [5]
│                            → StrChunk ..0000.107593!1 len:6 { ";" }
│                              ← StrChunk ..0000.107515!1 len:1 { "}" }
│                                ← StrChunk ..0000.107469!3 len:0 [3]
│                              → StrChunk ..0000.107527!1 len:4 { "\n" }
│                                ← StrChunk ..0000.107496!3 len:3 { " \\\\" }
│                        → StrChunk ..0000.218557!1 len:57 [1]
│                          ← StrChunk ..0000.107784!1 len:27 [1]
│                            ← StrChunk ..0000.107668!20 len:23 { "\n\\node (right1) at (" }
│                              ← StrChunk ..0000.107438!2 len:2 { "};" }
│                                ← StrChunk ..0000.107472!1 len:0 [1]
│                              → StrChunk ..0000.218508!1 len:1 [1]
│                                ← StrChunk ..0000.218609!1 len:1 { "8" }
│                            → StrChunk ..0000.235081!3 len:4 { "5.5" }
│                              ← StrChunk ..0000.107690!1 len:1 { "," }
│                                ← StrChunk ..0000.107688!2 len:0 [2]
│                              → StrChunk ..0000.219701!1 len:0 [1]
│                                ← StrChunk ..0000.234689!1 len:0 [1]
│                          → StrChunk ..0000.107695!3 len:30 { " {\\" }
│                            ← StrChunk ..0000.107693!1 len:18 [1]
│                              ← StrChunk ..0000.108691!3 len:0 [3]
│                                ← StrChunk ..0000.108701!1 len:0 [1]
│                              → StrChunk ..0000.218393!17 len:18 { " [rectangle,draw]" }
│                                ← StrChunk ..0000.107694!1 len:1 { ")" }
│                            → StrChunk ..0000.218038!2 len:9 { "``" }
│                              ← StrChunk ..0000.107703!1 len:1 { "{" }
│                                ← StrChunk ..0000.107698!5 len:0 [5]
│                              → StrChunk ..0000.108966!6 len:6 { "colors" }
│                                ← StrChunk ..0000.108965!1 len:0 [1]
│                      → StrChunk ..0000.218012!2 len:96 { "``" }
│                        ← StrChunk ..0000.107787!1 len:55 [1]
│                          ← StrChunk ..0000.218034!1 len:31 { "\\" }
│                            ← StrChunk ..0000.108975!1 len:6 { "{" }
│                              ← StrChunk ..0000.108973!2 len:3 { ": " }
│                                ← StrChunk ..0000.108972!1 len:0 [1]
│                                → StrChunk ..0000.218036!1 len:1 { "\\" }
│                              → StrChunk ..0000.108976!1 len:2 { "}" }
│                                ← StrChunk ..0000.218035!1 len:1 { "\\" }
│                            → StrChunk ..0000.107706!22 len:24 { "};\n\\node (right2) at (" }
│                              ← StrChunk ..0000.107705!1 len:1 [1]
│                                ← StrChunk ..0000.107704!1 len:1 { "}" }
│                              → StrChunk ..0000.218510!1 len:1 [1]
│                                ← StrChunk ..0000.218611!1 len:1 { "8" }
│                          → StrChunk ..0000.107731!1 len:24 [1]
│                            ← StrChunk ..0000.219699!1 len:2 { "3" }
│                              ← StrChunk ..0000.107730!1 len:1 { "," }
│                                ← StrChunk ..0000.107728!2 len:0 [2]
│                              → StrChunk ..0000.108695!3 len:0 [3]
│                                ← StrChunk ..0000.218555!1 len:0 [1]
│                            → StrChunk ..0000.107733!3 len:22 { " {\\" }
│                              ← StrChunk ..0000.218410!17 len:18 { " [rectangle,draw]" }
│                                ← StrChunk ..0000.107732!1 len:1 { ")" }
│                              → StrChunk ..0000.107741!1 len:1 { "{" }
│                                ← StrChunk ..0000.107736!5 len:0 [5]
│                        → StrChunk ..0000.107763!1 len:39 [1]
│                          ← StrChunk ..0000.218017!1 len:21 { "\\" }
│                            ← StrChunk ..0000.218015!2 len:10 { "''" }
│                              ← StrChunk ..0000.107743!6 len:6 { "colors" }
│                                ← StrChunk ..0000.107742!1 len:0 [1]
│                              → StrChunk ..0000.107750!2 len:2 { ": " }
│                                ← StrChunk ..0000.107749!1 len:0 [1]
│                            → StrChunk ..0000.107757!1 len:10 [1]
│                              ← StrChunk ..0000.218019!2 len:3 { "``" }
│                                ← StrChunk ..0000.107756!1 len:1 { "{" }
│                              → StrChunk ..0000.218022!2 len:7 { "''" }
│                                ← StrChunk ..0000.107758!5 len:5 { "green" }
│                          → StrChunk ..0000.107767!7 len:18 { "#00ff00" }
│                            ← StrChunk ..0000.218124!1 len:5 { "\\" }
│                              ← StrChunk ..0000.218025!2 len:4 { "``" }
│                                ← StrChunk ..0000.107764!2 len:2 { ": " }
│                              → StrChunk ..0000.107766!1 len:0 [1]
│                                ← StrChunk ..0000.218125!1 len:0 [1]
│                            → StrChunk ..0000.107775!1 len:6 { "}" }
│                              ← StrChunk ..0000.107774!1 len:3 [1]
│                                ← StrChunk ..0000.218028!3 len:3 { "''\\" }
│                              → StrChunk ..0000.107776!1 len:2 { "}" }
│                                ← StrChunk ..0000.218031!1 len:1 { "\\" }
│                    → StrChunk ..0000.107859!7 len:263 { "#00ff00" }
│                      ← StrChunk ..0000.217986!2 len:134 { "``" }
│                        ← StrChunk ..0000.107821!6 len:90 { "colors" }
│                          ← StrChunk ..0000.107881!12 len:69 { "\n    \\node {" }
│                            ← StrChunk ..0000.107794!17 len:53 { " (left2) at (0,0)" }
│                              ← StrChunk ..0000.107788!6 len:17 { "\n\\node" }
│                                ← StrChunk ..0000.107778!2 len:2 { "};" }
│                                → StrChunk ..0000.107872!9 len:9 { " [matrix]" }
│                              → StrChunk ..0000.107811!2 len:19 { " {" }
│                                ← StrChunk ..0000.218427!17 len:17 { " [rectangle,draw]" }
│                            → StrChunk ..0000.107819!1 len:4 { "{" }
│                              ← StrChunk ..0000.107814!5 len:1 [5]
│                                ← StrChunk ..0000.107813!1 len:1 { "\\" }
│                              → StrChunk ..0000.107820!1 len:2 [1]
│                                ← StrChunk ..0000.217999!2 len:2 { "``" }
│                          → StrChunk ..0000.217992!2 len:15 { "``" }
│                            ← StrChunk ..0000.107828!2 len:6 { ": " }
│                              ← StrChunk ..0000.107827!1 len:2 [1]
│                                ← StrChunk ..0000.217996!2 len:2 { "''" }
│                              → StrChunk ..0000.107830!1 len:2 { "{" }
│                                ← StrChunk ..0000.217994!1 len:1 { "\\" }
│                            → StrChunk ..0000.217989!2 len:7 { "''" }
│                              ← StrChunk ..0000.107832!3 len:3 { "red" }
│                                ← StrChunk ..0000.107831!1 len:0 [1]
│                              → StrChunk ..0000.107836!2 len:2 { ": " }
│                                ← StrChunk ..0000.107835!1 len:0 [1]
│                        → StrChunk ..0000.107848!1 len:42 { " " }
│                          ← StrChunk ..0000.107846!1 len:26 [1]
│                            ← StrChunk ..0000.107838!1 len:10 [1]
│                              ← StrChunk ..0000.218128!1 len:1 [1]
│                                ← StrChunk ..0000.218127!1 len:1 { "\\" }
│                              → StrChunk ..0000.217983!2 len:9 { "''" }
│                                ← StrChunk ..0000.107839!7 len:7 { "#ff0000" }
│                            → StrChunk ..0000.107894!2 len:16 { "};" }
│                              ← StrChunk ..0000.107893!1 len:1 [1]
│                                ← StrChunk ..0000.107847!1 len:1 { "," }
│                              → StrChunk ..0000.107896!10 len:13 { "\n    \\node" }
│                                ← StrChunk ..0000.108055!3 len:3 { " \\\\" }
│                          → StrChunk ..0000.217970!2 len:15 { "''" }
│                            ← StrChunk ..0000.107907!6 len:8 [6]
│                              ← StrChunk ..0000.217967!2 len:3 { "``" }
│                                ← StrChunk ..0000.107906!1 len:1 { "{" }
│                              → StrChunk ..0000.107850!5 len:5 { "green" }
│                                ← StrChunk ..0000.107849!1 len:0 [1]
│                            → StrChunk ..0000.217973!2 len:5 { "``" }
│                              ← StrChunk ..0000.107856!2 len:2 { ": " }
│                                ← StrChunk ..0000.107855!1 len:0 [1]
│                              → StrChunk ..0000.107858!1 len:1 [1]
│                                ← StrChunk ..0000.218129!1 len:1 { "\\" }
│                      → StrChunk ..0000.107972!1 len:122 [1]
│                        ← StrChunk ..0000.218613!1 len:82 { "8" }
│                          ← StrChunk ..0000.107869!1 len:43 [1]
│                            ← StrChunk ..0000.107867!1 len:6 { "}" }
│                              ← StrChunk ..0000.107866!1 len:3 [1]
│                                ← StrChunk ..0000.217976!3 len:3 { "''\\" }
│                              → StrChunk ..0000.107868!1 len:2 { "}" }
│                                ← StrChunk ..0000.217979!1 len:1 { "\\" }
│                            → StrChunk ..0000.107913!4 len:37 { "\n};\n" }
│                              ← StrChunk ..0000.108058!3 len:5 { " \\\\" }
│                                ← StrChunk ..0000.107870!2 len:2 { "};" }
│                              → StrChunk ..0000.107917!28 len:28 { "\\node [matrix] (right3) at (" }
│                                ← StrChunk ..0000.108054!1 len:0 [1]
│                          → StrChunk ..0000.107951!3 len:38 { " {\n" }
│                            ← StrChunk ..0000.107946!1 len:20 { "," }
│                              ← StrChunk ..0000.107945!1 len:0 [1]
│                                ← StrChunk ..0000.218512!1 len:0 [1]
│                              → StrChunk ..0000.218444!17 len:19 { " [rectangle,draw]" }
│                                ← StrChunk ..0000.107949!2 len:2 { "0)" }
│                            → StrChunk ..0000.107966!5 len:15 [5]
│                              ← StrChunk ..0000.107954!12 len:12 { "    \\node {\\" }
│                                ← StrChunk ..0000.108053!1 len:0 [1]
│                              → StrChunk ..0000.217924!2 len:3 { "``" }
│                                ← StrChunk ..0000.107971!1 len:1 { "{" }
│                        → StrChunk ..0000.107988!2 len:40 { ": " }
│                          ← StrChunk ..0000.107982!1 len:19 { "{" }
│                            ← StrChunk ..0000.107979!1 len:11 [1]
│                              ← StrChunk ..0000.217933!2 len:8 { "''" }
│                                ← StrChunk ..0000.107973!6 len:6 { "colors" }
│                              → StrChunk ..0000.217935!1 len:3 { "\\" }
│                                ← StrChunk ..0000.107980!2 len:2 { ": " }
│                            → StrChunk ..0000.107984!3 len:7 { "red" }
│                              ← StrChunk ..0000.107983!1 len:2 [1]
│                                ← StrChunk ..0000.217937!2 len:2 { "``" }
│                              → StrChunk ..0000.107987!1 len:2 [1]
│                                ← StrChunk ..0000.217940!2 len:2 { "''" }
│                          → StrChunk ..0000.107998!1 len:19 [1]
│                            ← StrChunk ..0000.107990!1 len:12 [1]
│                              ← StrChunk ..0000.218131!1 len:3 { "\\" }
│                                ← StrChunk ..0000.217943!2 len:2 { "``" }
│                              → StrChunk ..0000.217946!2 len:9 { "''" }
│                                ← StrChunk ..0000.107991!7 len:7 { "#ff0000" }
│                            → StrChunk ..0000.108003!2 len:7 { "};" }
│                              ← StrChunk ..0000.108002!1 len:1 [1]
│                                ← StrChunk ..0000.107999!1 len:1 { "," }
│                              → StrChunk ..0000.108005!1 len:4 { "\n" }
│                                ← StrChunk ..0000.108072!3 len:3 { " \\\\" }
│                  → StrChunk ..0000.234350!5 len:742 { ".get(" }
│                    ← StrChunk ..0000.108385!1 len:314 [1]
│                      ← StrChunk ..0000.108051!1 len:212 [1]
│                        ← StrChunk ..0000.108033!7 len:44 { "#00ff00" }
│                          ← StrChunk ..0000.217930!2 len:25 { "''" }
│                            ← StrChunk ..0000.217927!2 len:18 { "``" }
│                              ← StrChunk ..0000.108017!1 len:11 [1]
│                                ← StrChunk ..0000.108006!11 len:11 { "    \\node {" }
│                                → StrChunk ..0000.217922!1 len:0 [1]
│                              → StrChunk ..0000.108024!5 len:5 { "green" }
│                                ← StrChunk ..0000.108018!6 len:0 [6]
│                            → StrChunk ..0000.217949!2 len:5 { "``" }
│                              ← StrChunk ..0000.108030!2 len:2 { ": " }
│                                ← StrChunk ..0000.108029!1 len:0 [1]
│                              → StrChunk ..0000.108032!1 len:1 [1]
│                                ← StrChunk ..0000.218132!1 len:1 { "\\" }
│                          → StrChunk ..0000.108043!1 len:12 [1]
│                            ← StrChunk ..0000.108041!1 len:6 { "}" }
│                              ← StrChunk ..0000.108040!1 len:3 [1]
│                                ← StrChunk ..0000.217952!3 len:3 { "''\\" }
│                              → StrChunk ..0000.108042!1 len:2 { "}" }
│                                ← StrChunk ..0000.217955!1 len:1 { "\\" }
│                            → StrChunk ..0000.108070!2 len:6 { "\\\\" }
│                              ← StrChunk ..0000.108065!1 len:3 { " " }
│                                ← StrChunk ..0000.108044!2 len:2 { "};" }
│                              → StrChunk ..0000.108046!1 len:1 { "\n" }
│                                ← StrChunk ..0000.108066!2 len:0 [2]
│                        → StrChunk ..0000.108094!5 len:168 [5]
│                          ← StrChunk ..0000.219896!2 len:102 { ".1" }
│                            ← StrChunk ..0000.219825!1 len:24 [1]
│                              ← StrChunk ..0000.219810!15 len:17 { "\n\\node (comms) " }
│                                ← StrChunk ..0000.108047!2 len:2 { "};" }
│                              → StrChunk ..0000.219891!1 len:7 { "2" }
│                                ← StrChunk ..0000.219826!6 len:6 { "at (4," }
│                            → StrChunk ..0000.219835!52 len:76 { ") [text=blue] {\\footnotesize net" … }
│                              ← StrChunk ..0000.219832!3 len:0 [3]
│                                ← StrChunk ..0000.219892!2 len:0 [2]
│                              → StrChunk ..0000.218251!5 len:24 { "left0" }
│                                ← StrChunk ..0000.108075!19 len:19 { "\n\\draw [thick,->] (" }
│                          → StrChunk ..0000.108200!4 len:66 { "left" }
│                            ← StrChunk ..0000.234590!15 len:24 { "-- (left1)\n    " }
│                              ← StrChunk ..0000.111184!1 len:3 { " " }
│                                ← StrChunk ..0000.108099!2 len:2 { ") " }
│                              → StrChunk ..0000.108104!6 len:6 { "node [" }
│                                ← StrChunk ..0000.108101!3 len:0 [3]
│                            → StrChunk ..0000.234686!2 len:38 { ".2" }
│                              ← StrChunk ..0000.234683!1 len:13 { "4" }
│                                ← StrChunk ..0000.234608!12 len:12 { ",text width=" }
│                              → StrChunk ..0000.234621!23 len:23 { "cm,text centered,midway" }
│                                ← StrChunk ..0000.234620!1 len:0 [1]
│                      → StrChunk ..0000.108259!4 len:102 [4]
│                        ← StrChunk ..0000.234334!5 len:53 { ".get(" }
│                          ← StrChunk ..0000.108110!12 len:7 [12]
│                            ← StrChunk ..0000.108392!4 len:0 [4]
│                              ← StrChunk ..0000.108386!6 len:0 [6]
│                                ← StrChunk ..0000.111185!1 len:0 [1]
│                                → StrChunk ..0000.110514!1 len:0 [1]
│                              → StrChunk ..0000.108396!3 len:0 [3]
│                                ← StrChunk ..0000.108400!2 len:0 [2]
│                            → StrChunk ..0000.108123!2 len:7 { " {" }
│                              ← StrChunk ..0000.218734!1 len:2 { " " }
│                                ← StrChunk ..0000.108122!1 len:1 { "]" }
│                              → StrChunk ..0000.108163!3 len:3 { "doc" }
│                                ← StrChunk ..0000.108125!14 len:0 [14]
│                          → StrChunk ..0000.108205!7 len:41 { "``red''" }
│                            ← StrChunk ..0000.234341!6 len:16 { ").get(" }
│                              ← StrChunk ..0000.108167!10 len:10 { "``colors''" }
│                                ← StrChunk ..0000.108166!1 len:0 [1]
│                              → StrChunk ..0000.108204!1 len:0 [1]
│                                ← StrChunk ..0000.108177!1 len:0 [1]
│                            → StrChunk ..0000.108213!17 len:18 { " := ``\\#ff0000'';" }
│                              ← StrChunk ..0000.108212!1 len:1 [1]
│                                ← StrChunk ..0000.234348!1 len:1 { ")" }
│                              → StrChunk ..0000.108267!11 len:0 [11]
│                                ← StrChunk ..0000.108236!1 len:0 [1]
│                        → StrChunk ..0000.108434!1 len:49 { ")" }
│                          ← StrChunk ..0000.108179!8 len:27 [8]
│                            ← StrChunk ..0000.108230!1 len:1 [1]
│                              ← StrChunk ..0000.108232!2 len:0 [2]
│                                ← StrChunk ..0000.108237!11 len:0 [11]
│                              → StrChunk ..0000.108402!3 len:1 [3]
│                                ← StrChunk ..0000.108178!1 len:1 { "}" }
│                            → StrChunk ..0000.108425!4 len:26 { ">] (" }
│                              ← StrChunk ..0000.108408!15 len:16 { "\n\\draw [thick,-" }
│                                ← StrChunk ..0000.108187!1 len:1 { ";" }
│                              → StrChunk ..0000.108429!5 len:6 [5]
│                                ← StrChunk ..0000.218261!6 len:6 { "right0" }
│                          → StrChunk ..0000.108457!5 len:21 [5]
│                            ← StrChunk ..0000.108436!14 len:15 { "to node [right" }
│                              ← StrChunk ..0000.111183!1 len:1 { " " }
│                                ← StrChunk ..0000.108435!1 len:0 [1]
│                              → StrChunk ..0000.110513!1 len:0 [1]
│                                ← StrChunk ..0000.108450!7 len:0 [7]
│                            → StrChunk ..0000.108465!3 len:6 { "] {" }
│                              ← StrChunk ..0000.108462!3 len:0 [3]
│                                ← StrChunk ..0000.108950!1 len:0 [1]
│                              → StrChunk ..0000.108482!3 len:3 { "doc" }
│                                ← StrChunk ..0000.108468!14 len:0 [14]
│                    → StrChunk ..0000.108718!2 len:423 [2]
│                      ← StrChunk ..0000.108600!2 len:193 [2]
│                        ← StrChunk ..0000.234582!2 len:60 { "--" }
│                          ← StrChunk ..0000.108959!6 len:58 { "= \\{\\}" }
│                            ← StrChunk ..0000.108496!1 len:13 [1]
│                              ← StrChunk ..0000.108486!10 len:11 { "``colors''" }
│                                ← StrChunk ..0000.108485!1 len:0 [1]
│                                → StrChunk ..0000.234356!1 len:1 { ")" }
│                              → StrChunk ..0000.234377!1 len:2 { ":" }
│                                ← StrChunk ..0000.108958!1 len:1 { " " }
│                            → StrChunk ..0000.108639!5 len:39 { "right" }
│                              ← StrChunk ..0000.108504!31 len:31 { ";} (right1);\n\\draw [thick,->] (" }
│                                ← StrChunk ..0000.108497!7 len:0 [7]
│                              → StrChunk ..0000.108539!3 len:3 { "1) " }
│                                ← StrChunk ..0000.108535!4 len:0 [4]
│                          → StrChunk ..0000.234369!1 len:0 [1]
│                            ← StrChunk ..0000.234363!4 len:0 [4]
│                              ← StrChunk ..0000.234358!1 len:0 [1]
│                                ← StrChunk ..0000.108542!34 len:0 [34]
│                              → StrChunk ..0000.108576!11 len:0 [11]
│                                ← StrChunk ..0000.234359!2 len:0 [2]
│                            → StrChunk ..0000.108587!1 len:0 [1]
│                              ← StrChunk ..0000.234370!1 len:0 [1]
│                                ← StrChunk ..0000.234373!4 len:0 [4]
│                              → StrChunk ..0000.234372!1 len:0 [1]
│                                ← StrChunk ..0000.108590!10 len:0 [10]
│                        → StrChunk ..0000.234672!8 len:133 { "centered" }
│                          ← StrChunk ..0000.234379!23 len:48 { "node [right,text width=" }
│                            ← StrChunk ..0000.108625!9 len:14 { " (right2)" }
│                              ← StrChunk ..0000.108613!12 len:0 [12]
│                                ← StrChunk ..0000.108606!5 len:0 [5]
│                              → StrChunk ..0000.234586!4 len:5 { "    " }
│                                ← StrChunk ..0000.234378!1 len:1 { "\n" }
│                            → StrChunk ..0000.234585!1 len:11 [1]
│                              ← StrChunk ..0000.234684!2 len:3 { ".2" }
│                                ← StrChunk ..0000.234681!1 len:1 { "4" }
│                              → StrChunk ..0000.234405!8 len:8 { "cm,text " }
│                                ← StrChunk ..0000.234404!1 len:0 [1]
│                          → StrChunk ..0000.234413!8 len:77 [8]
│                            ← StrChunk ..0000.234558!1 len:0 [1]
│                              ← StrChunk ..0000.234572!8 len:0 [8]
│                                ← StrChunk ..0000.234660!6 len:0 [6]
│                              → StrChunk ..0000.234559!1 len:0 [1]
│                                ← StrChunk ..0000.234561!5 len:0 [5]
│                            → StrChunk ..0000.234402!1 len:77 [1]
│                              ← StrChunk ..0000.234421!55 len:62 { "] {doc.get(``colors'').get(``gre" … }
│                                ← StrChunk ..0000.234543!7 len:7 { ",midway" }
│                              → StrChunk ..0000.108704!14 len:15 { "\n\\draw [thick," }
│                                ← StrChunk ..0000.108634!1 len:1 { ";" }
│                      → StrChunk ..0000.108877!10 len:230 { "->] (left1" }
│                        ← StrChunk ..0000.108774!22 len:89 { "(left2);\n\\draw [thick," }
│                          ← StrChunk ..0000.108730!3 len:16 { "to " }
│                            ← StrChunk ..0000.217907!2 len:13 { "->" }
│                              ← StrChunk ..0000.217906!1 len:0 [1]
│                                ← StrChunk ..0000.217876!12 len:0 [12]
│                              → StrChunk ..0000.111182!1 len:11 { " " }
│                                ← StrChunk ..0000.108720!10 len:10 { "] (left1) " }
│                            → StrChunk ..0000.111186!1 len:0 [1]
│                              ← StrChunk ..0000.108743!6 len:0 [6]
│                                ← StrChunk ..0000.108733!6 len:0 [6]
│                              → StrChunk ..0000.108772!2 len:0 [2]
│                                ← StrChunk ..0000.108749!21 len:0 [21]
│                          → StrChunk ..0000.108808!6 len:51 { "2) to " }
│                            ← StrChunk ..0000.217909!1 len:10 [1]
│                              ← StrChunk ..0000.217888!12 len:0 [12]
│                                ← StrChunk ..0000.108796!2 len:0 [2]
│                              → StrChunk ..0000.108798!8 len:10 { "] (right" }
│                                ← StrChunk ..0000.217910!2 len:2 { "->" }
│                            → StrChunk ..0000.108854!23 len:35 { "(right3);\n\\draw [thick," }
│                              ← StrChunk ..0000.108852!2 len:0 [2]
│                                ← StrChunk ..0000.108814!34 len:0 [34]
│                              → StrChunk ..0000.218290!1 len:12 [1]
│                                ← StrChunk ..0000.218278!12 len:12 { "dashed,blue," }
│                        → StrChunk ..0000.218472!6 len:131 { ".south" }
│                          ← StrChunk ..0000.219657!17 len:86 { " [out=270,in=135]" }
│                            ← StrChunk ..0000.108887!2 len:11 { ") " }
│                              ← StrChunk ..0000.218467!5 len:6 [5]
│                                ← StrChunk ..0000.218461!6 len:6 { ".south" }
│                              → StrChunk ..0000.108889!2 len:3 { "to" }
│                                ← StrChunk ..0000.111181!1 len:1 { " " }
│                            → StrChunk ..0000.108899!16 len:58 { ");\n\\draw [thick," }
│                              ← StrChunk ..0000.218483!11 len:19 { ".north west" }
│                                ← StrChunk ..0000.108891!8 len:8 { " (right3" }
│                              → StrChunk ..0000.108915!11 len:23 { "->] (right2" }
│                                ← StrChunk ..0000.218316!12 len:12 { "dashed,blue," }
│                          → StrChunk ..0000.219686!1 len:39 [1]
│                            ← StrChunk ..0000.219674!4 len:21 { " [ou" }
│                              ← StrChunk ..0000.108926!4 len:4 { ") to" }
│                                ← StrChunk ..0000.218478!5 len:0 [5]
│                              → StrChunk ..0000.219688!9 len:13 { "0,in=45] " }
│                                ← StrChunk ..0000.219682!4 len:4 { "t=27" }
│                            → StrChunk ..0000.108930!2 len:18 { " (" }
│                              ← StrChunk ..0000.219678!1 len:0 [1]
│                                ← StrChunk ..0000.219680!1 len:0 [1]
│                              → StrChunk ..0000.218494!11 len:16 { ".north east" }
│                                ← StrChunk ..0000.108940!5 len:5 { "left2" }
│                → StrChunk ..0000.109876!2 len:901 { "0," }
│                  ← StrChunk ..0000.235109!2 len:519 { "9." }
│                    ← StrChunk ..0000.242263!1 len:283 [1]
│                      ← StrChunk ..0000.107099!14 len:153 { "\n\\end{figure*}" }
│                        ← StrChunk ..0000.107947!1 len:139 [1]
│                          ← StrChunk ..0000.108611!1 len:0 [1]
│                            ← StrChunk ..0000.108806!1 len:0 [1]
│                              ← StrChunk ..0000.108850!1 len:0 [1]
│                                ← StrChunk ..0000.108932!4 len:0 [4]
│                                → StrChunk ..0000.108848!1 len:0 [1]
│                              → StrChunk ..0000.108739!2 len:0 [2]
│                                ← StrChunk ..0000.108770!1 len:0 [1]
│                            → StrChunk ..0000.108423!1 len:0 [1]
│                              ← StrChunk ..0000.108588!1 len:0 [1]
│                                ← StrChunk ..0000.108602!2 len:0 [2]
│                              → StrChunk ..0000.108000!1 len:0 [1]
│                                ← StrChunk ..0000.108139!12 len:0 [12]
│                          → StrChunk ..0000.107204!76 len:139 { "Modifying the contents of a nest" … }
│                            ← StrChunk ..0000.107150!1 len:28 { "\n" }
│                              ← StrChunk ..0000.107691!1 len:0 [1]
│                                ← StrChunk ..0000.107752!2 len:0 [2]
│                              → StrChunk ..0000.107151!27 len:27 { "\\end{tikzpicture}\n\\caption{" }
│                                ← StrChunk ..0000.108049!1 len:0 [1]
│                            → StrChunk ..0000.107280!7 len:35 [7]
│                              ← StrChunk ..0000.154745!1 len:12 { "." }
│                                ← StrChunk ..0000.108984!11 len:11 { "overwritten" }
│                              → StrChunk ..0000.107178!13 len:23 [13]
│                                ← StrChunk ..0000.107287!23 len:23 { "}\\label{fig:map-remove}" }
│                        → StrChunk ..0000.241526!515 len:0 [515]
│                          ← StrChunk ..0000.241260!12 len:0 [12]
│                            ← StrChunk ..0000.109052!19 len:0 [19]
│                              ← StrChunk ..0000.241134!69 len:0 [69]
│                                ← StrChunk ..0000.108995!57 len:0 [57]
│                              → StrChunk ..0000.109071!40 len:0 [40]
│                                ← StrChunk ..0000.241241!4 len:0 [4]
│                            → StrChunk ..0000.241203!34 len:0 [34]
│                              ← StrChunk ..0000.109182!26 len:0 [26]
│                                ← StrChunk ..0000.109111!69 len:0 [69]
│                              → StrChunk ..0000.241396!32 len:0 [32]
│                                ← StrChunk ..0000.241272!122 len:0 [122]
│                          → StrChunk ..0000.242145!3 len:0 [3]
│                            ← StrChunk ..0000.242151!41 len:0 [41]
│                              ← StrChunk ..0000.242064!81 len:0 [81]
│                                ← StrChunk ..0000.242047!5 len:0 [5]
│                              → StrChunk ..0000.242192!1 len:0 [1]
│                                ← StrChunk ..0000.242283!41 len:0 [41]
│                            → StrChunk ..0000.241394!2 len:0 [2]
│                              ← StrChunk ..0000.242041!3 len:0 [3]
│                                ← StrChunk ..0000.242052!6 len:0 [6]
│                              → StrChunk ..0000.109380!67 len:0 [67]
│                                ← StrChunk ..0000.109208!168 len:0 [168]
│                      → StrChunk ..0000.241429!1 len:130 { "\n" }
│                        ← StrChunk ..0000.56046!2 len:0 [2]
│                          ← StrChunk ..0000.106850!1 len:0 [1]
│                            ← StrChunk ..0000.107082!1 len:0 [1]
│                              ← StrChunk ..0000.109376!2 len:0 [2]
│                                ← StrChunk ..0000.109447!25 len:0 [25]
│                                → StrChunk ..0000.109180!1 len:0 [1]
│                              → StrChunk ..0000.106932!1 len:0 [1]
│                                ← StrChunk ..0000.106965!12 len:0 [12]
│                            → StrChunk ..0000.63591!1 len:0 [1]
│                              ← StrChunk ..0000.106295!1 len:0 [1]
│                                ← StrChunk ..0000.106650!13 len:0 [13]
│                              → StrChunk ..0000.56099!2 len:0 [2]
│                                ← StrChunk ..0000.57367!1 len:0 [1]
│                          → StrChunk ..0000.242265!2 len:0 [2]
│                            ← StrChunk ..0000.35890!1 len:0 [1]
│                              ← StrChunk ..0000.55880!3 len:0 [3]
│                                ← StrChunk ..0000.55994!3 len:0 [3]
│                              → StrChunk ..0000.241430!2 len:0 [2]
│                                ← StrChunk ..0000.241428!1 len:0 [1]
│                            → StrChunk ..0000.241443!10 len:0 [10]
│                              ← StrChunk ..0000.242280!3 len:0 [3]
│                                ← StrChunk ..0000.241432!11 len:0 [11]
│                              → StrChunk ..0000.241453!3 len:0 [3]
│                                ← StrChunk ..0000.241459!67 len:0 [67]
│                        → StrChunk ..0000.109723!8 len:129 { "\n\\node (" }
│                          ← StrChunk ..0000.109583!1 len:106 { "]" }
│                            ← StrChunk ..0000.242324!3 len:65 { "[p]" }
│                              ← StrChunk ..0000.109532!15 len:16 { "\\begin{figure*}" }
│                                ← StrChunk ..0000.109530!1 len:1 { "\n" }
│                              → StrChunk ..0000.218614!10 len:46 { ",scale=0.8" }
│                                ← StrChunk ..0000.109547!36 len:36 { "\n\\centering\n\\begin{tikzpicture}[" … }
│                            → StrChunk ..0000.235113!1 len:40 [1]
│                              ← StrChunk ..0000.235141!2 len:38 { "10" }
│                                ← StrChunk ..0000.219541!36 len:36 { "\n\\path [draw,dotted] (5,-0.5) --" … }
│                              → StrChunk ..0000.219580!2 len:2 { ");" }
│                                ← StrChunk ..0000.219577!3 len:0 [3]
│                          → StrChunk ..0000.219443!1 len:15 { " " }
│                            ← StrChunk ..0000.109736!2 len:11 { ") " }
│                              ← StrChunk ..0000.109731!5 len:5 [5]
│                                ← StrChunk ..0000.218638!5 len:5 { "left0" }
│                              → StrChunk ..0000.109738!3 len:4 { "at " }
│                                ← StrChunk ..0000.109822!1 len:1 { " " }
│                            → StrChunk ..0000.218678!1 len:3 { "0" }
│                              ← StrChunk ..0000.219428!1 len:1 [1]
│                                ← StrChunk ..0000.109741!1 len:1 { "(" }
│                              → StrChunk ..0000.109743!1 len:1 { "," }
│                                ← StrChunk ..0000.109742!1 len:0 [1]
│                    → StrChunk ..0000.225426!2 len:234 [2]
│                      ← StrChunk ..0000.218668!1 len:136 { ")" }
│                        ← StrChunk ..0000.109755!1 len:53 { "}" }
│                          ← StrChunk ..0000.219213!17 len:24 { " [rectangle,draw]" }
│                            ← StrChunk ..0000.111178!3 len:2 [3]
│                              ← StrChunk ..0000.235111!1 len:1 [1]
│                                ← StrChunk ..0000.235137!1 len:1 { "5" }
│                                → StrChunk ..0000.219424!1 len:0 [1]
│                              → StrChunk ..0000.109745!1 len:1 { ")" }
│                                ← StrChunk ..0000.109744!1 len:0 [1]
│                            → StrChunk ..0000.109748!6 len:5 [6]
│                              ← StrChunk ..0000.218630!1 len:3 { "\\" }
│                                ← StrChunk ..0000.109746!2 len:2 { " {" }
│                              → StrChunk ..0000.218631!1 len:2 { "\\" }
│                                ← StrChunk ..0000.109754!1 len:1 { "{" }
│                          → StrChunk ..0000.218664!1 len:28 { "," }
│                            ← StrChunk ..0000.218643!20 len:24 { "\n\\node (right0) at (" }
│                              ← StrChunk ..0000.109757!2 len:2 { "};" }
│                                ← StrChunk ..0000.109756!1 len:0 [1]
│                              → StrChunk ..0000.218663!1 len:2 [1]
│                                ← StrChunk ..0000.219426!2 len:2 { "10" }
│                            → StrChunk ..0000.235107!1 len:3 [1]
│                              ← StrChunk ..0000.235135!1 len:3 { "5" }
│                                ← StrChunk ..0000.235105!2 len:2 { "9." }
│                              → StrChunk ..0000.218665!3 len:0 [3]
│                                ← StrChunk ..0000.219420!1 len:0 [1]
│                        → StrChunk ..0000.235103!1 len:82 [1]
│                          ← StrChunk ..0000.219441!1 len:51 { " " }
│                            ← StrChunk ..0000.109759!15 len:44 { "\n\\node (left1) " }
│                              ← StrChunk ..0000.218669!8 len:25 { " {\\{\\}};" }
│                                ← StrChunk ..0000.219230!17 len:17 { " [rectangle,draw]" }
│                              → StrChunk ..0000.109774!3 len:4 { "at " }
│                                ← StrChunk ..0000.109821!1 len:1 { " " }
│                            → StrChunk ..0000.109778!2 len:6 { "0," }
│                              ← StrChunk ..0000.219429!1 len:1 [1]
│                                ← StrChunk ..0000.109777!1 len:1 { "(" }
│                              → StrChunk ..0000.235133!1 len:3 { "5" }
│                                ← StrChunk ..0000.235101!2 len:2 { "7." }
│                          → StrChunk ..0000.109782!3 len:31 { " {\\" }
│                            ← StrChunk ..0000.109780!1 len:18 [1]
│                              ← StrChunk ..0000.111174!3 len:0 [3]
│                                ← StrChunk ..0000.219416!1 len:0 [1]
│                              → StrChunk ..0000.219247!17 len:18 { " [rectangle,draw]" }
│                                ← StrChunk ..0000.109781!1 len:1 { ")" }
│                            → StrChunk ..0000.218799!2 len:10 { "``" }
│                              ← StrChunk ..0000.109790!1 len:1 { "{" }
│                                ← StrChunk ..0000.109785!5 len:0 [5]
│                              → StrChunk ..0000.227355!8 len:7 [8]
│                                ← StrChunk ..0000.227757!7 len:7 { "grocery" }
│                      → StrChunk ..0000.109830!1 len:98 [1]
│                        ← StrChunk ..0000.109803!1 len:36 [1]
│                          ← StrChunk ..0000.109792!5 len:8 [5]
│                            ← StrChunk ..0000.109791!1 len:2 [1]
│                              ← StrChunk ..0000.225428!1 len:0 [1]
│                                ← StrChunk ..0000.225430!7 len:0 [7]
│                              → StrChunk ..0000.218802!2 len:2 { "''" }
│                                ← StrChunk ..0000.109971!3 len:0 [3]
│                            → StrChunk ..0000.109798!2 len:6 { "[]" }
│                              ← StrChunk ..0000.218804!1 len:2 { " " }
│                                ← StrChunk ..0000.109797!1 len:1 { ":" }
│                              → StrChunk ..0000.109800!1 len:2 { "}" }
│                                ← StrChunk ..0000.218805!1 len:1 { "\\" }
│                          → StrChunk ..0000.109829!1 len:28 { "," }
│                            ← StrChunk ..0000.219435!2 len:24 { "10" }
│                              ← StrChunk ..0000.109823!5 len:22 { " at (" }
│                                ← StrChunk ..0000.109804!17 len:17 { "};\n\\node (right1)" }
│                              → StrChunk ..0000.109828!1 len:0 [1]
│                                ← StrChunk ..0000.219431!2 len:0 [2]
│                            → StrChunk ..0000.235099!1 len:3 [1]
│                              ← StrChunk ..0000.235131!1 len:3 { "5" }
│                                ← StrChunk ..0000.235097!2 len:2 { "7." }
│                              → StrChunk ..0000.111170!3 len:0 [3]
│                                ← StrChunk ..0000.219412!1 len:0 [1]
│                        → StrChunk ..0000.218810!2 len:62 { "''" }
│                          ← StrChunk ..0000.218813!2 len:31 { "``" }
│                            ← StrChunk ..0000.109832!3 len:22 { " {\\" }
│                              ← StrChunk ..0000.219264!17 len:18 { " [rectangle,draw]" }
│                                ← StrChunk ..0000.109831!1 len:1 { ")" }
│                              → StrChunk ..0000.109840!1 len:1 { "{" }
│                                ← StrChunk ..0000.109835!5 len:0 [5]
│                            → StrChunk ..0000.225440!9 len:7 [9]
│                              ← StrChunk ..0000.227372!8 len:7 [8]
│                                ← StrChunk ..0000.227742!7 len:7 { "grocery" }
│                              → StrChunk ..0000.109978!3 len:0 [3]
│                                ← StrChunk ..0000.109841!1 len:0 [1]
│                          → StrChunk ..0000.109852!1 len:29 { "}" }
│                            ← StrChunk ..0000.218808!1 len:5 { " " }
│                              ← StrChunk ..0000.109847!1 len:1 { ":" }
│                                ← StrChunk ..0000.109842!5 len:0 [5]
│                              → StrChunk ..0000.218807!1 len:3 { "\\" }
│                                ← StrChunk ..0000.109850!2 len:2 { "[]" }
│                            → StrChunk ..0000.219439!1 len:23 { " " }
│                              ← StrChunk ..0000.109854!21 len:21 { "};\n\\node (left2)  at " }
│                                ← StrChunk ..0000.109853!1 len:0 [1]
│                              → StrChunk ..0000.219437!1 len:1 [1]
│                                ← StrChunk ..0000.109875!1 len:1 { "(" }
│                  → StrChunk ..0000.110034!1 len:380 { "[" }
│                    ← StrChunk ..0000.109941!1 len:197 [1]
│                      ← StrChunk ..0000.218911!2 len:109 { "''" }
│                        ← StrChunk ..0000.227389!8 len:45 [8]
│                          ← StrChunk ..0000.219281!17 len:34 { " [rectangle,draw]" }
│                            ← StrChunk ..0000.111166!3 len:4 [3]
│                              ← StrChunk ..0000.219408!1 len:3 [1]
│                                ← StrChunk ..0000.235127!3 len:3 { "5.0" }
│                                → StrChunk ..0000.235094!2 len:0 [2]
│                              → StrChunk ..0000.109879!1 len:1 { ")" }
│                                ← StrChunk ..0000.109878!1 len:0 [1]
│                            → StrChunk ..0000.109888!1 len:13 { "{" }
│                              ← StrChunk ..0000.109883!5 len:3 [5]
│                                ← StrChunk ..0000.109880!3 len:3 { " {\\" }
│                              → StrChunk ..0000.227727!7 len:9 { "grocery" }
│                                ← StrChunk ..0000.218826!2 len:2 { "``" }
│                          → StrChunk ..0000.109895!1 len:11 { ":" }
│                            ← StrChunk ..0000.109985!3 len:2 [3]
│                              ← StrChunk ..0000.109889!1 len:0 [1]
│                                ← StrChunk ..0000.225452!9 len:0 [9]
│                              → StrChunk ..0000.109890!5 len:2 [5]
│                                ← StrChunk ..0000.218869!2 len:2 { "''" }
│                            → StrChunk ..0000.218893!2 len:8 { "``" }
│                              ← StrChunk ..0000.109896!1 len:2 { "[" }
│                                ← StrChunk ..0000.218886!1 len:1 { " " }
│                              → StrChunk ..0000.109898!4 len:4 { "eggs" }
│                                ← StrChunk ..0000.109897!1 len:0 [1]
│                        → StrChunk ..0000.235093!1 len:62 [1]
│                          ← StrChunk ..0000.109906!21 len:31 { "};\n\\node (left3)  at " }
│                            ← StrChunk ..0000.218997!1 len:3 { "\\" }
│                              ← StrChunk ..0000.109903!1 len:1 { "]" }
│                                ← StrChunk ..0000.109902!1 len:0 [1]
│                              → StrChunk ..0000.109905!1 len:1 [1]
│                                ← StrChunk ..0000.109904!1 len:1 { "}" }
│                            → StrChunk ..0000.219404!1 len:7 { "2" }
│                              ← StrChunk ..0000.109927!3 len:4 { "(0," }
│                                ← StrChunk ..0000.219444!1 len:1 { " " }
│                              → StrChunk ..0000.235123!1 len:2 { "5" }
│                                ← StrChunk ..0000.235092!1 len:1 { "." }
│                          → StrChunk ..0000.109935!5 len:31 [5]
│                            ← StrChunk ..0000.109931!1 len:21 { ")" }
│                              ← StrChunk ..0000.111163!2 len:0 [2]
│                                ← StrChunk ..0000.109930!1 len:0 [1]
│                              → StrChunk ..0000.109932!3 len:20 { " {\\" }
│                                ← StrChunk ..0000.219298!17 len:17 { " [rectangle,draw]" }
│                            → StrChunk ..0000.227712!7 len:10 { "grocery" }
│                              ← StrChunk ..0000.218858!2 len:3 { "``" }
│                                ← StrChunk ..0000.109940!1 len:1 { "{" }
│                              → StrChunk ..0000.225464!9 len:0 [9]
│                                ← StrChunk ..0000.227406!8 len:0 [8]
│                      → StrChunk ..0000.110018!1 len:88 { "(" }
│                        ← StrChunk ..0000.218916!1 len:46 { " " }
│                          ← StrChunk ..0000.218896!2 len:14 { "``" }
│                            ← StrChunk ..0000.109947!1 len:5 { ":" }
│                              ← StrChunk ..0000.218872!2 len:2 { "''" }
│                                ← StrChunk ..0000.109992!3 len:0 [3]
│                                → StrChunk ..0000.109942!5 len:0 [5]
│                              → StrChunk ..0000.109948!1 len:2 { "[" }
│                                ← StrChunk ..0000.218887!1 len:1 { " " }
│                            → StrChunk ..0000.218914!2 len:7 { "''" }
│                              ← StrChunk ..0000.109950!4 len:4 { "eggs" }
│                                ← StrChunk ..0000.109949!1 len:0 [1]
│                              → StrChunk ..0000.109955!1 len:1 { "," }
│                                ← StrChunk ..0000.109954!1 len:0 [1]
│                          → StrChunk ..0000.109962!1 len:31 { "]" }
│                            ← StrChunk ..0000.110046!3 len:7 { "ham" }
│                              ← StrChunk ..0000.109956!1 len:2 [1]
│                                ← StrChunk ..0000.218918!2 len:2 { "``" }
│                              → StrChunk ..0000.109957!5 len:2 [5]
│                                ← StrChunk ..0000.218921!2 len:2 { "''" }
│                            → StrChunk ..0000.109964!1 len:23 [1]
│                              ← StrChunk ..0000.109963!1 len:2 { "}" }
│                                ← StrChunk ..0000.218995!1 len:1 { "\\" }
│                              → StrChunk ..0000.109995!19 len:21 { "\n\\node (right2) at " }
│                                ← StrChunk ..0000.109965!2 len:2 { "};" }
│                        → StrChunk ..0000.110020!2 len:41 { "{\\" }
│                          ← StrChunk ..0000.235084!2 len:25 [2]
│                            ← StrChunk ..0000.110015!1 len:6 { "," }
│                              ← StrChunk ..0000.110014!1 len:2 [1]
│                                ← StrChunk ..0000.219446!2 len:2 { "10" }
│                              → StrChunk ..0000.219400!1 len:3 [1]
│                                ← StrChunk ..0000.235119!3 len:3 { "5.0" }
│                            → StrChunk ..0000.110017!1 len:19 { ")" }
│                              ← StrChunk ..0000.110016!1 len:0 [1]
│                                ← StrChunk ..0000.111160!3 len:0 [3]
│                              → StrChunk ..0000.219315!17 len:18 { "[rectangle,draw] " }
│                                ← StrChunk ..0000.110019!1 len:1 { " " }
│                          → StrChunk ..0000.225476!9 len:14 [9]
│                            ← StrChunk ..0000.218860!2 len:10 { "``" }
│                              ← StrChunk ..0000.110027!1 len:1 { "{" }
│                                ← StrChunk ..0000.110022!5 len:0 [5]
│                              → StrChunk ..0000.227423!8 len:7 [8]
│                                ← StrChunk ..0000.227697!7 len:7 { "grocery" }
│                            → StrChunk ..0000.110032!1 len:4 [1]
│                              ← StrChunk ..0000.218875!2 len:2 { "''" }
│                                ← StrChunk ..0000.110028!4 len:0 [4]
│                              → StrChunk ..0000.218888!1 len:2 { " " }
│                                ← StrChunk ..0000.110033!1 len:1 { ":" }
│                    → StrChunk ..0000.110112!1 len:182 [1]
│                      ← StrChunk ..0000.110083!3 len:94 { " {\\" }
│                        ← StrChunk ..0000.110079!1 len:57 [1]
│                          ← StrChunk ..0000.218993!1 len:35 { "\\" }
│                            ← StrChunk ..0000.218924!2 len:9 { "''" }
│                              ← StrChunk ..0000.110035!1 len:6 [1]
│                                ← StrChunk ..0000.218899!2 len:2 { "``" }
│                                → StrChunk ..0000.110052!4 len:4 { "milk" }
│                              → StrChunk ..0000.110040!1 len:1 { "]" }
│                                ← StrChunk ..0000.110036!4 len:0 [4]
│                            → StrChunk ..0000.110057!22 len:25 { "};\n\\node (right3) at (" }
│                              ← StrChunk ..0000.110056!1 len:1 [1]
│                                ← StrChunk ..0000.110041!1 len:1 { "}" }
│                              → StrChunk ..0000.219449!2 len:2 [2]
│                                ← StrChunk ..0000.219453!2 len:2 { "10" }
│                          → StrChunk ..0000.110081!1 len:22 [1]
│                            ← StrChunk ..0000.235086!1 len:4 { "." }
│                              ← StrChunk ..0000.219396!1 len:2 { "2" }
│                                ← StrChunk ..0000.110080!1 len:1 { "," }
│                              → StrChunk ..0000.235087!1 len:1 [1]
│                                ← StrChunk ..0000.235115!1 len:1 { "5" }
│                            → StrChunk ..0000.219332!6 len:18 { " [rect" }
│                              ← StrChunk ..0000.110082!1 len:1 { ")" }
│                                ← StrChunk ..0000.111153!2 len:0 [2]
│                              → StrChunk ..0000.219338!2 len:11 [2]
│                                ← StrChunk ..0000.219342!11 len:11 { "angle,draw]" }
│                        → StrChunk ..0000.110098!1 len:34 { "[" }
│                          ← StrChunk ..0000.225488!9 len:14 [9]
│                            ← StrChunk ..0000.218862!2 len:10 { "``" }
│                              ← StrChunk ..0000.110091!1 len:1 { "{" }
│                                ← StrChunk ..0000.110086!5 len:0 [5]
│                              → StrChunk ..0000.227440!8 len:7 [8]
│                                ← StrChunk ..0000.227682!7 len:7 { "grocery" }
│                            → StrChunk ..0000.110096!1 len:4 [1]
│                              ← StrChunk ..0000.218878!2 len:2 { "''" }
│                                ← StrChunk ..0000.110092!4 len:0 [4]
│                              → StrChunk ..0000.218889!1 len:2 { " " }
│                                ← StrChunk ..0000.110097!1 len:1 { ":" }
│                          → StrChunk ..0000.110105!1 len:19 { "," }
│                            ← StrChunk ..0000.110100!4 len:8 { "milk" }
│                              ← StrChunk ..0000.110099!1 len:2 [1]
│                                ← StrChunk ..0000.218902!2 len:2 { "``" }
│                              → StrChunk ..0000.110104!1 len:2 [1]
│                                ← StrChunk ..0000.218927!2 len:2 { "''" }
│                            → StrChunk ..0000.110106!1 len:10 [1]
│                              ← StrChunk ..0000.218931!2 len:3 { "``" }
│                                ← StrChunk ..0000.218929!1 len:1 { " " }
│                              → StrChunk ..0000.218934!2 len:7 { "''" }
│                                ← StrChunk ..0000.110107!5 len:5 { "flour" }
│                      → StrChunk ..0000.225506!9 len:88 [9]
│                        ← StrChunk ..0000.110147!4 len:62 { "(0,0" }
│                          ← StrChunk ..0000.110125!5 len:25 [5]
│                            ← StrChunk ..0000.110114!1 len:12 { "}" }
│                              ← StrChunk ..0000.218991!1 len:2 { "\\" }
│                                ← StrChunk ..0000.110113!1 len:1 { "]" }
│                              → StrChunk ..0000.110116!9 len:9 { "};\n\\node " }
│                                ← StrChunk ..0000.110115!1 len:0 [1]
│                            → StrChunk ..0000.111142!1 len:13 { " " }
│                              ← StrChunk ..0000.110136!8 len:8 { "(left4) " }
│                                ← StrChunk ..0000.110132!4 len:0 [4]
│                              → StrChunk ..0000.219455!1 len:4 { " " }
│                                ← StrChunk ..0000.110144!3 len:3 { "at " }
│                          → StrChunk ..0000.110188!2 len:33 { "{\\" }
│                            ← StrChunk ..0000.110151!2 len:21 { ") " }
│                              ← StrChunk ..0000.111155!2 len:2 [2]
│                                ← StrChunk ..0000.235088!2 len:2 { ".0" }
│                              → StrChunk ..0000.219353!1 len:17 [1]
│                                ← StrChunk ..0000.219355!17 len:17 { "[rectangle,draw] " }
│                            → StrChunk ..0000.218864!2 len:10 { "``" }
│                              ← StrChunk ..0000.110195!1 len:1 { "{" }
│                                ← StrChunk ..0000.110190!5 len:0 [5]
│                              → StrChunk ..0000.227457!8 len:7 [8]
│                                ← StrChunk ..0000.227667!7 len:7 { "grocery" }
│                        → StrChunk ..0000.110208!1 len:26 [1]
│                          ← StrChunk ..0000.218890!1 len:13 { " " }
│                            ← StrChunk ..0000.218881!2 len:3 { "''" }
│                              ← StrChunk ..0000.110196!4 len:0 [4]
│                                ← StrChunk ..0000.225500!3 len:0 [3]
│                              → StrChunk ..0000.110201!1 len:1 { ":" }
│                                ← StrChunk ..0000.110200!1 len:0 [1]
│                            → StrChunk ..0000.110203!1 len:9 [1]
│                              ← StrChunk ..0000.218905!2 len:3 { "``" }
│                                ← StrChunk ..0000.110202!1 len:1 { "[" }
│                              → StrChunk ..0000.218937!2 len:6 { "''" }
│                                ← StrChunk ..0000.110204!4 len:4 { "eggs" }
│                          → StrChunk ..0000.218944!2 len:13 { "''" }
│                            ← StrChunk ..0000.218941!2 len:7 { "``" }
│                              ← StrChunk ..0000.218939!1 len:2 { " " }
│                                ← StrChunk ..0000.110209!1 len:1 { "," }
│                              → StrChunk ..0000.110211!3 len:3 { "ham" }
│                                ← StrChunk ..0000.110210!1 len:0 [1]
│                            → StrChunk ..0000.218946!1 len:4 { " " }
│                              ← StrChunk ..0000.110215!1 len:1 { "," }
│                                ← StrChunk ..0000.110214!1 len:0 [1]
│                              → StrChunk ..0000.110216!1 len:2 [1]
│                                ← StrChunk ..0000.218948!2 len:2 { "``" }
│          → StrChunk ..0000.39500!4 len:24964 [4]
│            ← StrChunk ..0000.111736!2 len:12538 { "}]" }
│              ← StrChunk ..0000.236154!1 len:5176 { "5" }
│                ← StrChunk ..0000.110752!2 len:1873 [2]
│                  ← StrChunk ..0000.227637!7 len:696 { "grocery" }
│                    ← StrChunk ..0000.218972!1 len:255 { " " }
│                      ← StrChunk ..0000.218866!2 len:98 { "``" }
│                        ← StrChunk ..0000.110232!1 len:66 [1]
│                          ← StrChunk ..0000.110224!5 len:16 { "flour" }
│                            ← StrChunk ..0000.218953!1 len:6 { " " }
│                              ← StrChunk ..0000.110221!1 len:3 [1]
│                                ← StrChunk ..0000.218951!2 len:2 { "''" }
│                                → StrChunk ..0000.110222!1 len:1 { "," }
│                              → StrChunk ..0000.110223!1 len:2 [1]
│                                ← StrChunk ..0000.218955!2 len:2 { "``" }
│                            → StrChunk ..0000.110230!1 len:5 { "]" }
│                              ← StrChunk ..0000.110229!1 len:2 [1]
│                                ← StrChunk ..0000.218958!2 len:2 { "''" }
│                              → StrChunk ..0000.110231!1 len:2 { "}" }
│                                ← StrChunk ..0000.218987!1 len:1 { "\\" }
│                          → StrChunk ..0000.111157!2 len:50 [2]
│                            ← StrChunk ..0000.110255!1 len:28 [1]
│                              ← StrChunk ..0000.219457!2 len:24 { "10" }
│                                ← StrChunk ..0000.110233!22 len:22 { "};\n\\node (right4) at (" }
│                              → StrChunk ..0000.235090!2 len:4 { ".0" }
│                                ← StrChunk ..0000.110256!2 len:2 { ",0" }
│                            → StrChunk ..0000.110259!3 len:22 { " {\\" }
│                              ← StrChunk ..0000.219372!17 len:18 { " [rectangle,draw]" }
│                                ← StrChunk ..0000.110258!1 len:1 { ")" }
│                              → StrChunk ..0000.110267!1 len:1 { "{" }
│                                ← StrChunk ..0000.110262!5 len:0 [5]
│                        → StrChunk ..0000.110276!4 len:30 { "eggs" }
│                          ← StrChunk ..0000.110272!1 len:14 [1]
│                            ← StrChunk ..0000.225518!9 len:9 [9]
│                              ← StrChunk ..0000.227474!8 len:7 [8]
│                                ← StrChunk ..0000.227652!7 len:7 { "grocery" }
│                              → StrChunk ..0000.218884!2 len:2 { "''" }
│                                ← StrChunk ..0000.110268!4 len:0 [4]
│                            → StrChunk ..0000.110274!1 len:5 { "[" }
│                              ← StrChunk ..0000.218891!1 len:2 { " " }
│                                ← StrChunk ..0000.110273!1 len:1 { ":" }
│                              → StrChunk ..0000.110275!1 len:2 [1]
│                                ← StrChunk ..0000.218908!2 len:2 { "``" }
│                          → StrChunk ..0000.110282!1 len:12 [1]
│                            ← StrChunk ..0000.110281!1 len:6 { "," }
│                              ← StrChunk ..0000.110280!1 len:2 [1]
│                                ← StrChunk ..0000.218961!2 len:2 { "''" }
│                              → StrChunk ..0000.218965!2 len:3 { "``" }
│                                ← StrChunk ..0000.218963!1 len:1 { " " }
│                            → StrChunk ..0000.218970!1 len:6 [1]
│                              ← StrChunk ..0000.218968!2 len:5 { "''" }
│                                ← StrChunk ..0000.110283!3 len:3 { "ham" }
│                              → StrChunk ..0000.110287!1 len:1 { "," }
│                                ← StrChunk ..0000.110286!1 len:0 [1]
│                      → StrChunk ..0000.219928!52 len:156 { ") [text=blue] {\\footnotesize net" … }
│                        ← StrChunk ..0000.110302!1 len:50 { "]" }
│                          ← StrChunk ..0000.218979!1 len:19 { " " }
│                            ← StrChunk ..0000.218977!2 len:9 { "''" }
│                              ← StrChunk ..0000.110288!1 len:6 [1]
│                                ← StrChunk ..0000.218974!2 len:2 { "``" }
│                                → StrChunk ..0000.110289!4 len:4 { "milk" }
│                              → StrChunk ..0000.110294!1 len:1 { "," }
│                                ← StrChunk ..0000.110293!1 len:0 [1]
│                            → StrChunk ..0000.110296!5 len:9 { "flour" }
│                              ← StrChunk ..0000.110295!1 len:2 [1]
│                                ← StrChunk ..0000.218981!2 len:2 { "``" }
│                              → StrChunk ..0000.110301!1 len:2 [1]
│                                ← StrChunk ..0000.218984!2 len:2 { "''" }
│                          → StrChunk ..0000.219919!1 len:30 { " " }
│                            ← StrChunk ..0000.110304!1 len:19 [1]
│                              ← StrChunk ..0000.110303!1 len:2 { "}" }
│                                ← StrChunk ..0000.218986!1 len:1 { "\\" }
│                              → StrChunk ..0000.219898!15 len:17 { "\n\\node (comms) " }
│                                ← StrChunk ..0000.110305!2 len:2 { "};" }
│                            → StrChunk ..0000.219983!1 len:10 { "4" }
│                              ← StrChunk ..0000.219921!6 len:9 { " (5,1." }
│                                ← StrChunk ..0000.219913!3 len:3 { "at " }
│                              → StrChunk ..0000.219927!1 len:0 [1]
│                                ← StrChunk ..0000.219981!1 len:0 [1]
│                        → StrChunk ..0000.110512!1 len:54 [1]
│                          ← StrChunk ..0000.110331!2 len:40 { ") " }
│                            ← StrChunk ..0000.110307!19 len:24 { "\n\\draw [thick,->] (" }
│                              ← StrChunk ..0000.219916!1 len:0 [1]
│                                ← StrChunk ..0000.219918!1 len:0 [1]
│                              → StrChunk ..0000.110326!5 len:5 [5]
│                                ← StrChunk ..0000.218684!5 len:5 { "left0" }
│                            → StrChunk ..0000.110346!1 len:14 [1]
│                              ← StrChunk ..0000.110333!13 len:14 { "to node [left" }
│                                ← StrChunk ..0000.111143!1 len:1 { " " }
│                              → StrChunk ..0000.110347!6 len:0 [6]
│                                ← StrChunk ..0000.111152!1 len:0 [1]
│                          → StrChunk ..0000.110363!1 len:14 { "{" }
│                            ← StrChunk ..0000.110358!3 len:3 [3]
│                              ← StrChunk ..0000.110516!1 len:0 [1]
│                                ← StrChunk ..0000.110353!5 len:0 [5]
│                              → StrChunk ..0000.219032!1 len:3 { " " }
│                                ← StrChunk ..0000.110361!2 len:2 { "] " }
│                            → StrChunk ..0000.234697!5 len:10 { ".get(" }
│                              ← StrChunk ..0000.110378!3 len:3 { "doc" }
│                                ← StrChunk ..0000.110364!14 len:0 [14]
│                              → StrChunk ..0000.110382!2 len:2 { "``" }
│                                ← StrChunk ..0000.110381!1 len:0 [1]
│                    → StrChunk ..0000.110577!3 len:434 { "doc" }
│                      ← StrChunk ..0000.110485!2 len:194 { "``" }
│                        ← StrChunk ..0000.110433!14 len:72 { "to node [right" }
│                          ← StrChunk ..0000.110390!36 len:47 { " := [];} (left1);\n\\draw [thick,-" … }
│                            ← StrChunk ..0000.110387!2 len:3 { "''" }
│                              ← StrChunk ..0000.225530!9 len:0 [9]
│                                ← StrChunk ..0000.227491!8 len:0 [8]
│                                → StrChunk ..0000.110384!3 len:0 [3]
│                              → StrChunk ..0000.110389!1 len:1 [1]
│                                ← StrChunk ..0000.234721!1 len:1 { ")" }
│                            → StrChunk ..0000.110431!1 len:8 { ")" }
│                              ← StrChunk ..0000.110426!5 len:6 [5]
│                                ← StrChunk ..0000.218694!6 len:6 { "right0" }
│                              → StrChunk ..0000.111144!1 len:1 { " " }
│                                ← StrChunk ..0000.110432!1 len:0 [1]
│                          → StrChunk ..0000.110461!3 len:11 [3]
│                            ← StrChunk ..0000.110511!1 len:0 [1]
│                              ← StrChunk ..0000.110450!6 len:0 [6]
│                                ← StrChunk ..0000.110447!1 len:0 [1]
│                              → StrChunk ..0000.110518!1 len:0 [1]
│                                ← StrChunk ..0000.110456!5 len:0 [5]
│                            → StrChunk ..0000.110481!3 len:11 { "doc" }
│                              ← StrChunk ..0000.110467!14 len:3 [14]
│                                ← StrChunk ..0000.110464!3 len:3 { "] {" }
│                              → StrChunk ..0000.110484!1 len:5 [1]
│                                ← StrChunk ..0000.234703!5 len:5 { ".get(" }
│                        → StrChunk ..0000.234814!14 len:120 { "-- (left2)\n   " }
│                          ← StrChunk ..0000.234723!1 len:55 { ")" }
│                            ← StrChunk ..0000.225542!9 len:9 [9]
│                              ← StrChunk ..0000.227508!8 len:7 [8]
│                                ← StrChunk ..0000.227622!7 len:7 { "grocery" }
│                              → StrChunk ..0000.110490!2 len:2 { "''" }
│                                ← StrChunk ..0000.110487!3 len:0 [3]
│                            → StrChunk ..0000.110519!16 len:45 { "\n\\draw [thick,->" }
│                              ← StrChunk ..0000.110493!18 len:18 { " := [];} (right1);" }
│                                ← StrChunk ..0000.110492!1 len:0 [1]
│                              → StrChunk ..0000.111145!1 len:11 { " " }
│                                ← StrChunk ..0000.110537!10 len:10 { "] (left1) " }
│                          → StrChunk ..0000.110560!1 len:51 { "]" }
│                            ← StrChunk ..0000.234828!9 len:47 { ",text wid" }
│                              ← StrChunk ..0000.110549!11 len:11 { " node [left" }
│                                ← StrChunk ..0000.110547!2 len:0 [2]
│                              → StrChunk ..0000.234837!1 len:27 [1]
│                                ← StrChunk ..0000.234839!27 len:27 { "th=4cm,text centered,midway" }
│                            → StrChunk ..0000.111151!1 len:3 { " " }
│                              ← StrChunk ..0000.110561!1 len:1 [1]
│                                ← StrChunk ..0000.234867!1 len:1 { " " }
│                              → StrChunk ..0000.110563!14 len:1 [14]
│                                ← StrChunk ..0000.110562!1 len:1 { "{" }
│                      → StrChunk ..0000.110666!14 len:237 [14]
│                        ← StrChunk ..0000.234868!1 len:143 { " " }
│                          ← StrChunk ..0000.110583!3 len:24 [3]
│                            ← StrChunk ..0000.227607!7 len:14 { "grocery" }
│                              ← StrChunk ..0000.110580!1 len:7 [1]
│                                ← StrChunk ..0000.234709!5 len:5 { ".get(" }
│                                → StrChunk ..0000.110581!2 len:2 { "``" }
│                              → StrChunk ..0000.225554!9 len:0 [9]
│                                ← StrChunk ..0000.227525!8 len:0 [8]
│                            → StrChunk ..0000.110588!1 len:10 [1]
│                              ← StrChunk ..0000.234725!1 len:3 { ")" }
│                                ← StrChunk ..0000.110586!2 len:2 { "''" }
│                              → StrChunk ..0000.234731!5 len:7 { "dx(0)" }
│                                ← StrChunk ..0000.110589!2 len:2 { ".i" }
│                          → StrChunk ..0000.110621!28 len:118 { ";\n\\draw [thick,->] (right1) " }
│                            ← StrChunk ..0000.248892!5 len:24 { "After" }
│                              ← StrChunk ..0000.110594!7 len:7 { ".insert" }
│                                ← StrChunk ..0000.110591!3 len:0 [3]
│                              → StrChunk ..0000.110613!8 len:12 [8]
│                                ← StrChunk ..0000.110601!12 len:12 { "(``eggs'');}" }
│                            → StrChunk ..0000.110652!11 len:66 { "node [right" }
│                              ← StrChunk ..0000.110649!3 len:16 [3]
│                                ← StrChunk ..0000.234877!16 len:16 { "-- (right2)\n    " }
│                              → StrChunk ..0000.110663!3 len:39 { "] {" }
│                                ← StrChunk ..0000.234896!36 len:36 { ",text width=4cm,text centered,mi" … }
│                        → StrChunk ..0000.110692!2 len:94 { ".i" }
│                          ← StrChunk ..0000.227542!8 len:20 [8]
│                            ← StrChunk ..0000.110683!1 len:17 [1]
│                              ← StrChunk ..0000.234715!5 len:8 { ".get(" }
│                                ← StrChunk ..0000.110680!3 len:3 { "doc" }
│                              → StrChunk ..0000.227592!7 len:9 { "grocery" }
│                                ← StrChunk ..0000.110684!2 len:2 { "``" }
│                            → StrChunk ..0000.110689!2 len:3 { "''" }
│                              ← StrChunk ..0000.110686!3 len:0 [3]
│                                ← StrChunk ..0000.225566!9 len:0 [9]
│                              → StrChunk ..0000.110691!1 len:1 [1]
│                                ← StrChunk ..0000.234727!1 len:1 { ")" }
│                          → StrChunk ..0000.110704!12 len:72 { "(``milk'');}" }
│                            ← StrChunk ..0000.110694!3 len:18 [3]
│                              ← StrChunk ..0000.234995!1 len:6 { " " }
│                                ← StrChunk ..0000.234739!5 len:5 { "dx(0)" }
│                              → StrChunk ..0000.248897!5 len:12 { "After" }
│                                ← StrChunk ..0000.110697!7 len:7 { ".insert" }
│                            → StrChunk ..0000.111146!1 len:42 { " " }
│                              ← StrChunk ..0000.110725!27 len:27 { ";\n\\draw [thick,->] (left2) " }
│                                ← StrChunk ..0000.110716!9 len:0 [9]
│                              → StrChunk ..0000.234954!3 len:14 { "   " }
│                                ← StrChunk ..0000.234941!11 len:11 { "-- (left3)\n" }
│                  → StrChunk ..0000.110976!1 len:1177 [1]
│                    ← StrChunk ..0000.111080!2 len:496 { ") " }
│                      ← StrChunk ..0000.234797!1 len:369 [1]
│                        ← StrChunk ..0000.110793!11 len:224 { "(``ham'');}" }
│                          ← StrChunk ..0000.110767!1 len:91 { "{" }
│                            ← StrChunk ..0000.234969!1 len:50 [1]
│                              ← StrChunk ..0000.234957!12 len:47 { ",text width=" }
│                                ← StrChunk ..0000.110754!11 len:11 { " node [left" }
│                                → StrChunk ..0000.234971!24 len:24 { "4cm,text centered,midway" }
│                              → StrChunk ..0000.111150!1 len:3 { " " }
│                                ← StrChunk ..0000.110765!2 len:2 { "] " }
│                            → StrChunk ..0000.110768!18 len:40 [18]
│                              ← StrChunk ..0000.234996!1 len:28 { " " }
│                                ← StrChunk ..0000.234748!27 len:27 { "doc.get(``grocery'').idx(1)" }
│                              → StrChunk ..0000.248902!5 len:12 { "After" }
│                                ← StrChunk ..0000.110786!7 len:7 { ".insert" }
│                          → StrChunk ..0000.235024!36 len:122 { ",text width=4cm,text centered,mi" … }
│                            ← StrChunk ..0000.235005!16 len:55 { "-- (right3)\n    " }
│                              ← StrChunk ..0000.110812!28 len:28 { ";\n\\draw [thick,->] (right2) " }
│                                ← StrChunk ..0000.110804!8 len:0 [8]
│                              → StrChunk ..0000.110843!11 len:11 { "node [right" }
│                                ← StrChunk ..0000.110840!3 len:0 [3]
│                            → StrChunk ..0000.234791!6 len:31 { "``groc" }
│                              ← StrChunk ..0000.234779!8 len:11 { "doc.get(" }
│                                ← StrChunk ..0000.110854!3 len:3 { "] {" }
│                              → StrChunk ..0000.235060!1 len:14 { " " }
│                                ← StrChunk ..0000.234799!13 len:13 { "ery'').idx(1)" }
│                        → StrChunk ..0000.110946!21 len:145 [21]
│                          ← StrChunk ..0000.110895!9 len:56 [9]
│                            ← StrChunk ..0000.110875!7 len:25 { ".insert" }
│                              ← StrChunk ..0000.110857!18 len:0 [18]
│                                ← StrChunk ..0000.234787!2 len:0 [2]
│                              → StrChunk ..0000.110882!13 len:18 { "(``flour'');}" }
│                                ← StrChunk ..0000.248907!5 len:5 { "After" }
│                            → StrChunk ..0000.110931!3 len:31 { "to " }
│                              ← StrChunk ..0000.111147!1 len:28 { " " }
│                                ← StrChunk ..0000.110904!27 len:27 { ";\n\\draw [thick,->] (left3) " }
│                              → StrChunk ..0000.111149!1 len:0 [1]
│                                ← StrChunk ..0000.110934!12 len:0 [12]
│                          → StrChunk ..0000.111011!36 len:89 [36]
│                            ← StrChunk ..0000.110978!4 len:38 { "4);\n" }
│                              ← StrChunk ..0000.110971!5 len:5 { "(left" }
│                                ← StrChunk ..0000.110969!2 len:0 [2]
│                              → StrChunk ..0000.110982!29 len:29 { "\\draw [thick,->] (right3) to " }
│                                ← StrChunk ..0000.242342!4 len:0 [4]
│                            → StrChunk ..0000.111070!10 len:51 { "->] (left3" }
│                              ← StrChunk ..0000.219189!12 len:35 { "dashed,blue," }
│                                ← StrChunk ..0000.111047!23 len:23 { "(right4);\n\\draw [thick," }
│                              → StrChunk ..0000.219465!5 len:6 [5]
│                                ← StrChunk ..0000.219459!6 len:6 { ".south" }
│                      → StrChunk ..0000.219482!6 len:125 [6]
│                        ← StrChunk ..0000.111093!1 len:84 { "4" }
│                          ← StrChunk ..0000.219600!1 len:27 { "0" }
│                            ← StrChunk ..0000.219622!2 len:11 { "27" }
│                              ← StrChunk ..0000.111082!2 len:9 { "to" }
│                                ← StrChunk ..0000.111148!1 len:1 { " " }
│                                → StrChunk ..0000.219592!6 len:6 { " [out=" }
│                              → StrChunk ..0000.219598!2 len:0 [2]
│                                ← StrChunk ..0000.219614!1 len:0 [1]
│                            → StrChunk ..0000.219628!2 len:15 [2]
│                              ← StrChunk ..0000.219639!3 len:7 { "135" }
│                                ← StrChunk ..0000.219624!4 len:4 { ",in=" }
│                              → StrChunk ..0000.111084!7 len:8 { " (right" }
│                                ← StrChunk ..0000.219601!1 len:1 { "]" }
│                          → StrChunk ..0000.219201!12 len:56 { "dashed,blue," }
│                            ← StrChunk ..0000.219471!5 len:27 [5]
│                              ← StrChunk ..0000.219508!5 len:6 { "north" }
│                                ← StrChunk ..0000.219470!1 len:1 { "." }
│                              → StrChunk ..0000.111094!16 len:21 { ");\n\\draw [thick," }
│                                ← StrChunk ..0000.219476!5 len:5 { " west" }
│                            → StrChunk ..0000.219481!1 len:17 { "." }
│                              ← StrChunk ..0000.111114!9 len:11 { "] (right3" }
│                                ← StrChunk ..0000.111110!2 len:2 { "->" }
│                              → StrChunk ..0000.219523!5 len:5 [5]
│                                ← StrChunk ..0000.219518!5 len:5 { "south" }
│                        → StrChunk ..0000.219611!1 len:41 { "]" }
│                          ← StrChunk ..0000.219617!1 len:19 [1]
│                            ← StrChunk ..0000.111125!4 len:12 { ") to" }
│                              ← StrChunk ..0000.219488!4 len:0 [4]
│                                ← StrChunk ..0000.219496!4 len:0 [4]
│                              → StrChunk ..0000.219619!2 len:8 { "27" }
│                                ← StrChunk ..0000.219602!6 len:6 { " [out=" }
│                            → StrChunk ..0000.219630!4 len:7 { ",in=" }
│                              ← StrChunk ..0000.219610!1 len:1 { "0" }
│                                ← StrChunk ..0000.219608!2 len:0 [2]
│                              → StrChunk ..0000.219634!3 len:2 [3]
│                                ← StrChunk ..0000.219645!2 len:2 { "45" }
│                          → StrChunk ..0000.219533!8 len:21 { "rth east" }
│                            ← StrChunk ..0000.111130!5 len:11 { "(left" }
│                              ← StrChunk ..0000.219697!1 len:2 { " " }
│                                ← StrChunk ..0000.111129!1 len:1 { " " }
│                              → StrChunk ..0000.219500!3 len:4 { ".no" }
│                                ← StrChunk ..0000.111139!1 len:1 { "4" }
│                            → StrChunk ..0000.111123!1 len:2 [1]
│                              ← StrChunk ..0000.111135!2 len:2 [2]
│                                ← StrChunk ..0000.111140!2 len:2 { ");" }
│                              → StrChunk ..0000.111091!1 len:0 [1]
│                                ← StrChunk ..0000.111112!1 len:0 [1]
│                    → StrChunk ..0000.236502!40 len:681 { ") {Replica $p$:};\n\\node (rightR)" … }
│                      ← StrChunk ..0000.225597!11 len:265 [11]
│                        ← StrChunk ..0000.112232!2 len:136 { "\n\n" }
│                          ← StrChunk ..0000.109848!1 len:134 [1]
│                            ← StrChunk ..0000.110186!1 len:0 [1]
│                              ← StrChunk ..0000.110535!1 len:0 [1]
│                                ← StrChunk ..0000.110967!1 len:0 [1]
│                                → StrChunk ..0000.110448!1 len:0 [1]
│                              → StrChunk ..0000.110130!1 len:0 [1]
│                                ← StrChunk ..0000.110153!12 len:0 [12]
│                            → StrChunk ..0000.109651!36 len:134 { "ordered lists under the same map" … }
│                              ← StrChunk ..0000.109584!61 len:61 { "\n\\end{tikzpicture}\n\\caption{Two " … }
│                                ← StrChunk ..0000.109801!1 len:0 [1]
│                              → StrChunk ..0000.109687!36 len:37 { "}\\label{fig:two-lists}\n\\end{figu" … }
│                                ← StrChunk ..0000.154746!1 len:1 { "." }
│                          → StrChunk ..0000.227575!8 len:0 [8]
│                            ← StrChunk ..0000.112347!8 len:0 [8]
│                              ← StrChunk ..0000.112362!8 len:0 [8]
│                                ← StrChunk ..0000.112234!89 len:0 [89]
│                              → StrChunk ..0000.112370!6 len:0 [6]
│                                ← StrChunk ..0000.112323!24 len:0 [24]
│                            → StrChunk ..0000.112376!46 len:0 [46]
│                              ← StrChunk ..0000.225578!9 len:0 [9]
│                                ← StrChunk ..0000.227559!8 len:0 [8]
│                              → StrChunk ..0000.112422!9 len:0 [9]
│                                ← StrChunk ..0000.225628!26 len:0 [26]
│                        → StrChunk ..0000.231317!2 len:129 [2]
│                          ← StrChunk ..0000.112681!28 len:0 [28]
│                            ← StrChunk ..0000.112518!57 len:0 [57]
│                              ← StrChunk ..0000.112472!32 len:0 [32]
│                                ← StrChunk ..0000.112431!39 len:0 [39]
│                              → StrChunk ..0000.112617!48 len:0 [48]
│                                ← StrChunk ..0000.112577!38 len:0 [38]
│                            → StrChunk ..0000.112837!24 len:0 [24]
│                              ← StrChunk ..0000.112800!33 len:0 [33]
│                                ← StrChunk ..0000.112725!69 len:0 [69]
│                              → StrChunk ..0000.112950!27 len:0 [27]
│                                ← StrChunk ..0000.112865!77 len:0 [77]
│                          → StrChunk ..0000.236458!10 len:129 { ".5) -- (4," }
│                            ← StrChunk ..0000.231334!47 len:91 { "\n\\centering\n\\begin{tikzpicture}[" … }
│                              ← StrChunk ..0000.242333!3 len:18 { "[p]" }
│                                ← StrChunk ..0000.231319!15 len:15 { "\\begin{figure*}" }
│                              → StrChunk ..0000.236432!24 len:26 { "path [draw,dotted] (4,-0" }
│                                ← StrChunk ..0000.236410!2 len:2 { "\n\\" }
│                            → StrChunk ..0000.236468!3 len:28 [3]
│                              ← StrChunk ..0000.236501!1 len:3 [1]
│                                ← StrChunk ..0000.236658!3 len:3 { "8.5" }
│                              → StrChunk ..0000.236496!2 len:25 [2]
│                                ← StrChunk ..0000.236471!25 len:25 { ");\n\\node (leftR)  at (0,8" }
│                      → StrChunk ..0000.231578!2 len:376 { "};" }
│                        ← StrChunk ..0000.231542!12 len:81 [12]
│                          ← StrChunk ..0000.235173!1 len:60 { " " }
│                            ← StrChunk ..0000.236456!1 len:32 [1]
│                              ← StrChunk ..0000.236544!17 len:17 { ") {Replica $q$:};" }
│                                ← StrChunk ..0000.236542!2 len:0 [2]
│                              → StrChunk ..0000.231500!15 len:15 { "\n\\node (left1) " }
│                                ← StrChunk ..0000.236412!10 len:0 [10]
│                            → StrChunk ..0000.235227!1 len:27 [1]
│                              ← StrChunk ..0000.236162!1 len:7 { "7" }
│                                ← StrChunk ..0000.231515!6 len:6 { "at (0," }
│                              → StrChunk ..0000.231522!20 len:20 { ") [rectangle,draw] {" }
│                                ← StrChunk ..0000.231521!1 len:0 [1]
│                          → StrChunk ..0000.231583!1 len:21 { "b" }
│                            ← StrChunk ..0000.231581!1 len:10 { "a" }
│                              ← StrChunk ..0000.231559!2 len:3 { "``" }
│                                ← StrChunk ..0000.231554!1 len:1 { "[" }
│                              → StrChunk ..0000.231562!6 len:6 { "'', ``" }
│                                ← StrChunk ..0000.231561!1 len:0 [1]
│                            → StrChunk ..0000.231584!7 len:10 { ", ``c''" }
│                              ← StrChunk ..0000.231569!2 len:2 { "''" }
│                                ← StrChunk ..0000.231568!1 len:0 [1]
│                              → StrChunk ..0000.231572!2 len:1 [2]
│                                ← StrChunk ..0000.231571!1 len:1 { "]" }
│                        → StrChunk ..0000.235457!1 len:293 [1]
│                          ← StrChunk ..0000.235230!22 len:82 { "\n\\node (left2)  at (0," }
│                            ← StrChunk ..0000.235181!1 len:0 [1]
│                              ← StrChunk ..0000.235174!5 len:0 [5]
│                                ← StrChunk ..0000.235157!16 len:0 [16]
│                              → StrChunk ..0000.235182!44 len:0 [44]
│                                ← StrChunk ..0000.235229!1 len:0 [1]
│                            → StrChunk ..0000.235253!44 len:60 { ") [rectangle,draw] {[``a'', ``c'" … }
│                              ← StrChunk ..0000.235252!1 len:1 [1]
│                                ← StrChunk ..0000.236160!1 len:1 { "5" }
│                              → StrChunk ..0000.236158!1 len:15 { "3" }
│                                ← StrChunk ..0000.235443!14 len:14 { "left3)  at (0," }
│                          → StrChunk ..0000.235319!2 len:211 { "8," }
│                            ← StrChunk ..0000.235710!38 len:143 { "{[``y'', ``a'', ``x'', ``z'', ``" … }
│                              ← StrChunk ..0000.235666!42 len:85 { "\n\\node (left4)  at (0,0) [rectan" … }
│                                ← StrChunk ..0000.235458!43 len:43 { ") [rectangle,draw] {[``a'', ``x'" … }
│                              → StrChunk ..0000.235297!20 len:20 { "\n\\node (right1) at (" }
│                                ← StrChunk ..0000.235708!1 len:0 [1]
│                            → StrChunk ..0000.235322!28 len:66 { ") [rectangle,draw] {[``a'', " }
│                              ← StrChunk ..0000.235321!1 len:1 [1]
│                                ← StrChunk ..0000.236156!1 len:1 { "7" }
│                              → StrChunk ..0000.235501!22 len:37 { "\n\\node (right2) at (8," }
│                                ← StrChunk ..0000.235362!15 len:15 { "``b'', ``c'']};" }
│                → StrChunk ..0000.111412!1 len:3302 [1]
│                  ← StrChunk ..0000.237233!3 len:2676 [3]
│                    ← StrChunk ..0000.235647!1 len:1430 [1]
│                      ← StrChunk ..0000.236041!9 len:860 { "0).insert" }
│                        ← StrChunk ..0000.236650!1 len:496 { "4" }
│                          ← StrChunk ..0000.235607!40 len:230 { ") [rectangle,draw] {[``y'', ``a'" … }
│                            ← StrChunk ..0000.235589!15 len:73 { "(right3) at (8," }
│                              ← StrChunk ..0000.235524!28 len:57 { ") [rectangle,draw] {[``y'', " }
│                                ← StrChunk ..0000.235523!1 len:0 [1]
│                                → StrChunk ..0000.235556!29 len:29 { "``a'', ``b'', ``c'']};\n\\node " }
│                              → StrChunk ..0000.235606!1 len:1 [1]
│                                ← StrChunk ..0000.236152!1 len:1 { "3" }
│                            → StrChunk ..0000.235765!38 len:117 { "4) at (8,0) [rectangle,draw] {[`" … }
│                              ← StrChunk ..0000.235748!13 len:30 { "\n\\node (right" }
│                                ← StrChunk ..0000.235649!17 len:17 { ", ``b'', ``c'']};" }
│                              → StrChunk ..0000.236332!20 len:49 { "\n\\node (comms)  at (" }
│                                ← StrChunk ..0000.235805!29 len:29 { "``a'', ``x'', ``z'', ``c'']};" }
│                          → StrChunk ..0000.235834!96 len:265 { "\n\\draw [thick,->] (left1)  to no" … }
│                            ← StrChunk ..0000.236652!1 len:57 { "5" }
│                              ← StrChunk ..0000.236353!4 len:4 { ", 1." }
│                                ← StrChunk ..0000.236352!1 len:0 [1]
│                              → StrChunk ..0000.236358!52 len:52 { ") [text=blue] {\\footnotesize net" … }
│                                ← StrChunk ..0000.236357!1 len:0 [1]
│                            → StrChunk ..0000.248921!4 len:112 { "fter" }
│                              ← StrChunk ..0000.248912!1 len:38 { "A" }
│                                ← StrChunk ..0000.235932!37 len:37 { ")  to node [left]  {doc.idx(1).i" … }
│                              → StrChunk ..0000.235969!70 len:70 { "(``x'');} (left3);\n\\draw [thick," … }
│                                ← StrChunk ..0000.248913!4 len:0 [4]
│                        → StrChunk ..0000.236747!1 len:355 [1]
│                          ← StrChunk ..0000.236669!16 len:186 { "\n\\draw [thick,->" }
│                            ← StrChunk ..0000.236077!55 len:109 { " [thick,->] (right2) to node [ri" … }
│                              ← StrChunk ..0000.236050!25 len:30 { "(``y'');} (right2);\n\\draw" }
│                                ← StrChunk ..0000.248925!5 len:5 { "After" }
│                              → StrChunk ..0000.236132!19 len:24 { "(``z'');} (right3);" }
│                                ← StrChunk ..0000.248930!5 len:5 { "After" }
│                            → StrChunk ..0000.236699!3 len:61 { "to " }
│                              ← StrChunk ..0000.236702!1 len:11 { " " }
│                                ← StrChunk ..0000.236689!10 len:10 { "] (left3) " }
│                              → StrChunk ..0000.236749!3 len:47 { "4);" }
│                                ← StrChunk ..0000.236703!44 len:44 { "(left4);\n\\draw [thick,->] (right" … }
│                          → StrChunk ..0000.236661!4 len:169 [4]
│                            ← StrChunk ..0000.236288!1 len:169 { "]" }
│                              ← StrChunk ..0000.236163!113 len:113 { "\n\\draw [thick,dashed,blue,->] (l" … }
│                                ← StrChunk ..0000.236685!2 len:0 [2]
│                              → StrChunk ..0000.236289!43 len:55 { "th) to [out=270,in=45]  (left4.n" … }
│                                ← StrChunk ..0000.236276!12 len:12 { " (right3.sou" }
│                            → StrChunk ..0000.235930!1 len:0 [1]
│                              ← StrChunk ..0000.236039!1 len:0 [1]
│                                ← StrChunk ..0000.236075!1 len:0 [1]
│                              → StrChunk ..0000.235761!2 len:0 [2]
│                                ← StrChunk ..0000.235803!1 len:0 [1]
│                      → StrChunk ..0000.237073!9 len:570 { "] {\\{\\}};" }
│                        ← StrChunk ..0000.239606!21 len:286 { "\\label{fig:text-edit}" }
│                          ← StrChunk ..0000.235317!1 len:105 [1]
│                            ← StrChunk ..0000.235360!1 len:0 [1]
│                              ← StrChunk ..0000.235585!2 len:0 [2]
│                                ← StrChunk ..0000.235604!1 len:0 [1]
│                                → StrChunk ..0000.235552!2 len:0 [2]
│                              → StrChunk ..0000.235350!2 len:0 [2]
│                                ← StrChunk ..0000.235354!3 len:0 [3]
│                            → StrChunk ..0000.231574!1 len:105 [1]
│                              ← StrChunk ..0000.231576!1 len:0 [1]
│                                ← StrChunk ..0000.235179!1 len:0 [1]
│                              → StrChunk ..0000.231381!105 len:105 { "\n\\end{tikzpicture}\n\\caption{Conc" … }
│                                ← StrChunk ..0000.231555!2 len:0 [2]
│                          → StrChunk ..0000.238313!1 len:160 { "1" }
│                            ← StrChunk ..0000.242336!3 len:106 { "[p]" }
│                              ← StrChunk ..0000.236814!17 len:31 { "\n\n\\begin{figure*}" }
│                                ← StrChunk ..0000.231486!14 len:14 { "\n\\end{figure*}" }
│                              → StrChunk ..0000.236990!25 len:72 { "\n\\path [draw,dotted] (4,-" }
│                                ← StrChunk ..0000.236831!47 len:47 { "\n\\centering\n\\begin{tikzpicture}[" … }
│                            → StrChunk ..0000.238309!1 len:53 { "7" }
│                              ← StrChunk ..0000.237018!8 len:8 { ") -- (4," }
│                                ← StrChunk ..0000.237015!3 len:0 [3]
│                              → StrChunk ..0000.237027!44 len:44 { ".5);\n\\node (left1)  at (0,7) [re" … }
│                                ← StrChunk ..0000.237026!1 len:0 [1]
│                        → StrChunk ..0000.237450!1 len:275 { "{" }
│                          ← StrChunk ..0000.237408!6 len:196 { " (left" }
│                            ← StrChunk ..0000.237239!34 len:147 { "aw] {\\{``a'': \\{``x'': ``y''\\}\\}" … }
│                              ← StrChunk ..0000.237217!16 len:98 { "3) [rectangle,dr" }
│                                ← StrChunk ..0000.237133!82 len:82 { "\n\\node (left2)  at (0,5) [rectan" … }
│                              → StrChunk ..0000.237509!9 len:15 { " [matrix]" }
│                                ← StrChunk ..0000.237402!6 len:6 { "\n\\node" }
│                            → StrChunk ..0000.237420!27 len:43 { "at (0,0) [rectangle,draw] {" }
│                              ← StrChunk ..0000.237419!1 len:3 [1]
│                                ← StrChunk ..0000.237416!3 len:3 { "4) " }
│                              → StrChunk ..0000.237447!1 len:13 { "\\" }
│                                ← StrChunk ..0000.237519!12 len:12 { "\n    \\node {" }
│                          → StrChunk ..0000.237482!10 len:78 { "listT(``a'" }
│                            ← StrChunk ..0000.237460!21 len:47 { "'): \\{``x'': ``y''\\}," }
│                              ← StrChunk ..0000.237451!4 len:9 { "``a'" }
│                                ← StrChunk ..0000.237455!5 len:5 { "mapT(" }
│                              → StrChunk ..0000.237481!1 len:17 [1]
│                                ← StrChunk ..0000.237531!17 len:17 { "}; \\\\\n    \\node {" }
│                            → StrChunk ..0000.237492!1 len:21 [1]
│                              ← StrChunk ..0000.237549!6 len:21 { " \\\\\n};" }
│                                ← StrChunk ..0000.237494!15 len:15 { "'): [``z'']\\}};" }
│                              → StrChunk ..0000.237414!1 len:0 [1]
│                                ← StrChunk ..0000.237448!1 len:0 [1]
│                    → StrChunk ..0000.236878!98 len:1246 { "\n\\end{tikzpicture}\n\\caption{Conc" … }
│                      ← StrChunk ..0000.237895!27 len:975 { "] (right1) to node [right] " }
│                        ← StrChunk ..0000.237640!65 len:573 { "\\{``x'': ``y''\\},}; \\\\\n    \\node" … }
│                          ← StrChunk ..0000.237401!1 len:249 { "}" }
│                            ← StrChunk ..0000.237273!42 len:168 { "\n\\node (right2) at (8,5) [rectan" … }
│                              ← StrChunk ..0000.237082!20 len:49 { "\n\\node (right1) at (" }
│                                ← StrChunk ..0000.237215!1 len:0 [1]
│                                → StrChunk ..0000.237104!29 len:29 { "8,7) [rectangle,draw] {\\{\\}};" }
│                              → StrChunk ..0000.237357!39 len:77 { "3) [rectangle,draw] {\\{``a'': [`" … }
│                                ← StrChunk ..0000.237317!38 len:38 { "{\\{``a'': []\\}};\n\\node (right3) " … }
│                            → StrChunk ..0000.237397!1 len:80 { ";" }
│                              ← StrChunk ..0000.237396!1 len:0 [1]
│                                ← StrChunk ..0000.237399!1 len:0 [1]
│                              → StrChunk ..0000.237580!56 len:79 { ") at (8,0) [rectangle,draw] {\n  " … }
│                                ← StrChunk ..0000.237555!23 len:23 { "\n\\node [matrix] (right4" }
│                          → StrChunk ..0000.237723!24 len:259 { "] (left1)  to node [left" }
│                            ← StrChunk ..0000.238336!3 len:93 [3]
│                              ← StrChunk ..0000.238394!3 len:25 { "2.0" }
│                                ← StrChunk ..0000.238314!22 len:22 { "\n\\node (comms)  at (4," }
│                              → StrChunk ..0000.237705!16 len:68 { "\n\\draw [thick,->" }
│                                ← StrChunk ..0000.238339!52 len:52 { ") [text=blue] {\\footnotesize net" … }
│                            → StrChunk ..0000.237923!1 len:142 { "{" }
│                              ← StrChunk ..0000.237804!27 len:80 { "] (left2)  to node [left]  " }
│                                ← StrChunk ..0000.237749!53 len:53 { "]  {doc.get(``a'') := \\{\\};} (le" … }
│                              → StrChunk ..0000.237832!61 len:61 { "doc.get(``a'').get(``x'') := ``y" … }
│                                ← StrChunk ..0000.237831!1 len:0 [1]
│                        → StrChunk ..0000.238019!1 len:375 [1]
│                          ← StrChunk ..0000.238086!27 len:375 { "(left4);\n\\draw [thick,->] (" }
│                            ← StrChunk ..0000.238021!14 len:159 { ".idx(0).insert" }
│                              ← StrChunk ..0000.237977!42 len:91 { "] (right2) to node [right] {doc." … }
│                                ← StrChunk ..0000.237924!49 len:49 { "{doc.get(``a'') := [];} (right2)" … }
│                              → StrChunk ..0000.238035!49 len:54 { "(``z'');} (right3);\n\\draw [thick" … }
│                                ← StrChunk ..0000.248935!5 len:5 { "After" }
│                            → StrChunk ..0000.238248!2 len:189 [2]
│                              ← StrChunk ..0000.238252!56 len:189 { "] (right3.south) to [out=270,in=" … }
│                                ← StrChunk ..0000.238115!133 len:133 { "right3) to (right4);\n\\draw [thic" … }
│                              → StrChunk ..0000.238084!1 len:0 [1]
│                                ← StrChunk ..0000.238113!1 len:0 [1]
│                          → StrChunk ..0000.237636!2 len:0 [2]
│                            ← StrChunk ..0000.237802!1 len:0 [1]
│                              ← StrChunk ..0000.237893!1 len:0 [1]
│                                ← StrChunk ..0000.237973!2 len:0 [2]
│                              → StrChunk ..0000.237721!1 len:0 [1]
│                                ← StrChunk ..0000.237747!1 len:0 [1]
│                            → StrChunk ..0000.237315!1 len:0 [1]
│                              ← StrChunk ..0000.237355!1 len:0 [1]
│                                ← StrChunk ..0000.237578!1 len:0 [1]
│                              → StrChunk ..0000.237071!1 len:0 [1]
│                                ← StrChunk ..0000.237102!1 len:0 [1]
│                      → StrChunk ..0000.220883!1 len:173 [1]
│                        ← StrChunk ..0000.112615!1 len:142 [1]
│                          ← StrChunk ..0000.112861!2 len:36 [2]
│                            ← StrChunk ..0000.239637!4 len:36 [4]
│                              ← StrChunk ..0000.239645!12 len:22 { ":type-clash}" }
│                                ← StrChunk ..0000.239627!10 len:10 { "\\label{fig" }
│                              → StrChunk ..0000.112942!4 len:14 [4]
│                                ← StrChunk ..0000.236976!14 len:14 { "\n\\end{figure*}" }
│                            → StrChunk ..0000.112723!1 len:0 [1]
│                              ← StrChunk ..0000.112794!3 len:0 [3]
│                                ← StrChunk ..0000.112833!2 len:0 [2]
│                              → StrChunk ..0000.112665!8 len:0 [8]
│                                ← StrChunk ..0000.112709!7 len:0 [7]
│                          → StrChunk ..0000.111220!36 len:106 { "\n\\centering\n\\begin{tikzpicture}[" … }
│                            ← StrChunk ..0000.112470!1 len:20 [1]
│                              ← StrChunk ..0000.112504!7 len:0 [7]
│                                ← StrChunk ..0000.112575!1 len:0 [1]
│                              → StrChunk ..0000.242339!3 len:20 { "[p]" }
│                                ← StrChunk ..0000.111187!17 len:17 { "\n\n\\begin{figure*}" }
│                            → StrChunk ..0000.220847!36 len:50 { "\n\\path [draw,dotted] (4,-0.5) --" … }
│                              ← StrChunk ..0000.111256!1 len:11 { "]" }
│                                ← StrChunk ..0000.219986!10 len:10 { ",scale=0.8" }
│                              → StrChunk ..0000.236562!3 len:3 [3]
│                                ← StrChunk ..0000.236755!3 len:3 { "7.0" }
│                        → StrChunk ..0000.220843!2 len:31 [2]
│                          ← StrChunk ..0000.220775!1 len:2 [1]
│                            ← StrChunk ..0000.220810!1 len:2 [1]
│                              ← StrChunk ..0000.220751!15 len:2 [15]
│                                ← StrChunk ..0000.220884!2 len:2 { ");" }
│                              → StrChunk ..0000.220771!2 len:0 [2]
│                                ← StrChunk ..0000.220766!3 len:0 [3]
│                            → StrChunk ..0000.220811!6 len:0 [6]
│                              ← StrChunk ..0000.220776!34 len:0 [34]
│                                ← StrChunk ..0000.220840!3 len:0 [3]
│                              → StrChunk ..0000.220817!18 len:0 [18]
│                                ← StrChunk ..0000.220836!3 len:0 [3]
│                          → StrChunk ..0000.220476!5 len:29 { "left0" }
│                            ← StrChunk ..0000.111392!6 len:17 { "\n\\node" }
│                              ← StrChunk ..0000.220769!1 len:0 [1]
│                                ← StrChunk ..0000.220773!1 len:0 [1]
│                              → StrChunk ..0000.111398!2 len:11 { " (" }
│                                ← StrChunk ..0000.220597!9 len:9 { " [matrix]" }
│                            → StrChunk ..0000.111406!1 len:7 [1]
│                              ← StrChunk ..0000.111405!1 len:1 { ")" }
│                                ← StrChunk ..0000.111400!5 len:0 [5]
│                              → StrChunk ..0000.220453!1 len:6 { "0" }
│                                ← StrChunk ..0000.111407!5 len:5 { " at (" }
│                  → StrChunk ..0000.220706!9 len:626 { " [matrix]" }
│                    ← StrChunk ..0000.111471!7 len:333 { ": false" }
│                      ← StrChunk ..0000.111436!1 len:98 { "{" }
│                        ← StrChunk ..0000.111418!1 len:48 { "\\" }
│                          ← StrChunk ..0000.111484!1 len:34 [1]
│                            ← StrChunk ..0000.220455!1 len:2 [1]
│                              ← StrChunk ..0000.220705!1 len:2 { "6" }
│                                ← StrChunk ..0000.111413!1 len:1 { "," }
│                                → StrChunk ..0000.220697!1 len:0 [1]
│                              → StrChunk ..0000.111751!3 len:0 [3]
│                                ← StrChunk ..0000.219999!1 len:0 [1]
│                            → StrChunk ..0000.220367!17 len:32 { " [rectangle,draw]" }
│                              ← StrChunk ..0000.111415!1 len:1 { ")" }
│                                ← StrChunk ..0000.111414!1 len:0 [1]
│                              → StrChunk ..0000.220616!12 len:14 { "\n    \\node {" }
│                                ← StrChunk ..0000.111416!2 len:2 { " {" }
│                          → StrChunk ..0000.220053!2 len:13 { "''" }
│                            ← StrChunk ..0000.220038!2 len:7 { "``" }
│                              ← StrChunk ..0000.111427!1 len:1 { "{" }
│                                ← StrChunk ..0000.111419!5 len:0 [5]
│                              → StrChunk ..0000.111429!4 len:4 { "todo" }
│                                ← StrChunk ..0000.111428!1 len:0 [1]
│                            → StrChunk ..0000.111482!1 len:4 { " " }
│                              ← StrChunk ..0000.111434!1 len:1 { ":" }
│                                ← StrChunk ..0000.111433!1 len:0 [1]
│                              → StrChunk ..0000.220067!1 len:2 { "\\" }
│                                ← StrChunk ..0000.111435!1 len:1 { "[" }
│                        → StrChunk ..0000.220078!2 len:49 { "''" }
│                          ← StrChunk ..0000.111449!1 len:21 [1]
│                            ← StrChunk ..0000.111438!1 len:9 { "t" }
│                              ← StrChunk ..0000.111437!1 len:2 [1]
│                                ← StrChunk ..0000.220069!2 len:2 { "``" }
│                              → StrChunk ..0000.220072!2 len:6 { "''" }
│                                ← StrChunk ..0000.111445!4 len:4 { "itle" }
│                            → StrChunk ..0000.220075!2 len:12 { "``" }
│                              ← StrChunk ..0000.111481!1 len:2 { " " }
│                                ← StrChunk ..0000.111450!1 len:1 { ":" }
│                              → StrChunk ..0000.111452!8 len:8 { "buy milk" }
│                                ← StrChunk ..0000.111451!1 len:0 [1]
│                          → StrChunk ..0000.111462!1 len:26 [1]
│                            ← StrChunk ..0000.220628!11 len:18 { "}; \\\\\n    \\" }
│                              ← StrChunk ..0000.111461!1 len:1 { "," }
│                                ← StrChunk ..0000.111460!1 len:0 [1]
│                              → StrChunk ..0000.220639!4 len:6 [4]
│                                ← StrChunk ..0000.220647!6 len:6 { "node {" }
│                            → StrChunk ..0000.111464!4 len:8 { "done" }
│                              ← StrChunk ..0000.111463!1 len:2 [1]
│                                ← StrChunk ..0000.220081!2 len:2 { "``" }
│                              → StrChunk ..0000.111470!1 len:2 [1]
│                                ← StrChunk ..0000.220084!2 len:2 { "''" }
│                      → StrChunk ..0000.220574!1 len:228 { ";" }
│                        ← StrChunk ..0000.220481!7 len:154 { " at (8," }
│                          ← StrChunk ..0000.111424!1 len:37 [1]
│                            ← StrChunk ..0000.111480!1 len:5 { "}" }
│                              ← StrChunk ..0000.111478!2 len:4 { "}]" }
│                                ← StrChunk ..0000.220086!1 len:1 { "\\" }
│                                → StrChunk ..0000.220087!1 len:1 { "\\" }
│                              → StrChunk ..0000.111439!3 len:0 [3]
│                                ← StrChunk ..0000.111468!1 len:0 [1]
│                            → StrChunk ..0000.220456!6 len:32 { "\n\\node" }
│                              ← StrChunk ..0000.220654!6 len:8 { " \\\\\n};" }
│                                ← StrChunk ..0000.111425!2 len:2 { "};" }
│                              → StrChunk ..0000.220462!9 len:18 { " (right0)" }
│                                ← StrChunk ..0000.220606!9 len:9 { " [matrix]" }
│                          → StrChunk ..0000.220509!39 len:110 { "\\{``todo'': [\\{``title'': ``buy " … }
│                            ← StrChunk ..0000.220488!1 len:33 [1]
│                              ← StrChunk ..0000.220695!1 len:1 [1]
│                                ← StrChunk ..0000.220703!1 len:1 { "6" }
│                              → StrChunk ..0000.220660!12 len:32 { "\n    \\node {" }
│                                ← StrChunk ..0000.220489!20 len:20 { ") [rectangle,draw] {" }
│                            → StrChunk ..0000.220680!8 len:38 { " \\node {" }
│                              ← StrChunk ..0000.220548!1 len:9 { " " }
│                                ← StrChunk ..0000.220672!8 len:8 { "}; \\\\\n  " }
│                              → StrChunk ..0000.220571!1 len:21 { "}" }
│                                ← StrChunk ..0000.220549!20 len:20 { "``done'': false\\}]\\}" }
│                        → StrChunk ..0000.111512!5 len:73 [5]
│                          ← StrChunk ..0000.220003!1 len:50 [1]
│                            ← StrChunk ..0000.220569!1 len:29 [1]
│                              ← StrChunk ..0000.220572!1 len:6 [1]
│                                ← StrChunk ..0000.220688!6 len:6 { " \\\\\n};" }
│                              → StrChunk ..0000.220701!1 len:23 { "3" }
│                                ← StrChunk ..0000.111485!22 len:22 { "\n\\node (left1)  at (0," }
│                            → StrChunk ..0000.111508!1 len:21 { ")" }
│                              ← StrChunk ..0000.111507!1 len:0 [1]
│                                ← StrChunk ..0000.111747!3 len:0 [3]
│                              → StrChunk ..0000.111509!3 len:20 { " {\\" }
│                                ← StrChunk ..0000.220384!17 len:17 { " [rectangle,draw]" }
│                          → StrChunk ..0000.111523!1 len:23 [1]
│                            ← StrChunk ..0000.111518!1 len:9 [1]
│                              ← StrChunk ..0000.220041!2 len:3 { "``" }
│                                ← StrChunk ..0000.111517!1 len:1 { "{" }
│                              → StrChunk ..0000.220056!2 len:6 { "''" }
│                                ← StrChunk ..0000.111519!4 len:4 { "todo" }
│                            → StrChunk ..0000.111528!1 len:14 { "}" }
│                              ← StrChunk ..0000.220090!1 len:5 { "\\" }
│                                ← StrChunk ..0000.111524!4 len:4 { ": []" }
│                              → StrChunk ..0000.111530!8 len:8 { "};\n\\node" }
│                                ← StrChunk ..0000.111529!1 len:0 [1]
│                    → StrChunk ..0000.111754!2 len:284 [2]
│                      ← StrChunk ..0000.111581!1 len:155 [1]
│                        ← StrChunk ..0000.220044!2 len:73 { "``" }
│                          ← StrChunk ..0000.220401!17 len:51 { " [rectangle,draw]" }
│                            ← StrChunk ..0000.111743!3 len:18 [3]
│                              ← StrChunk ..0000.220699!1 len:17 { "3" }
│                                ← StrChunk ..0000.111538!16 len:16 { " (right1) at (8," }
│                                → StrChunk ..0000.220007!1 len:0 [1]
│                              → StrChunk ..0000.111555!1 len:1 { ")" }
│                                ← StrChunk ..0000.111554!1 len:0 [1]
│                            → StrChunk ..0000.111558!1 len:16 { "\\" }
│                              ← StrChunk ..0000.220715!12 len:14 { "\n    \\node {" }
│                                ← StrChunk ..0000.111556!2 len:2 { " {" }
│                              → StrChunk ..0000.111564!1 len:1 { "{" }
│                                ← StrChunk ..0000.111559!5 len:0 [5]
│                          → StrChunk ..0000.220091!1 len:20 { "\\" }
│                            ← StrChunk ..0000.220059!2 len:9 { "''" }
│                              ← StrChunk ..0000.111566!4 len:4 { "todo" }
│                                ← StrChunk ..0000.111565!1 len:0 [1]
│                              → StrChunk ..0000.111571!3 len:3 { ": [" }
│                                ← StrChunk ..0000.111570!1 len:0 [1]
│                            → StrChunk ..0000.111575!1 len:10 [1]
│                              ← StrChunk ..0000.220093!2 len:3 { "``" }
│                                ← StrChunk ..0000.111574!1 len:1 { "{" }
│                              → StrChunk ..0000.220096!2 len:7 { "''" }
│                                ← StrChunk ..0000.111576!5 len:5 { "title" }
│                        → StrChunk ..0000.111597!4 len:82 { "done" }
│                          ← StrChunk ..0000.111593!1 len:34 [1]
│                            ← StrChunk ..0000.111584!1 len:14 [1]
│                              ← StrChunk ..0000.220099!2 len:4 { "``" }
│                                ← StrChunk ..0000.111582!2 len:2 { ": " }
│                              → StrChunk ..0000.220102!2 len:10 { "''" }
│                                ← StrChunk ..0000.111585!8 len:8 { "buy milk" }
│                            → StrChunk ..0000.111595!1 len:20 [1]
│                              ← StrChunk ..0000.220728!17 len:18 { "}; \\\\\n    \\node {" }
│                                ← StrChunk ..0000.111594!1 len:1 { "," }
│                              → StrChunk ..0000.111596!1 len:2 [1]
│                                ← StrChunk ..0000.220105!2 len:2 { "``" }
│                          → StrChunk ..0000.220111!1 len:44 { "\\" }
│                            ← StrChunk ..0000.111602!6 len:11 { ": true" }
│                              ← StrChunk ..0000.111601!1 len:2 [1]
│                                ← StrChunk ..0000.220108!2 len:2 { "''" }
│                              → StrChunk ..0000.111608!2 len:3 { "}]" }
│                                ← StrChunk ..0000.220110!1 len:1 { "\\" }
│                            → StrChunk ..0000.111612!2 len:32 { "};" }
│                              ← StrChunk ..0000.111611!1 len:1 [1]
│                                ← StrChunk ..0000.111610!1 len:1 { "}" }
│                              → StrChunk ..0000.111614!23 len:29 { "\n\\node (left2)  at (0,0" }
│                                ← StrChunk ..0000.220745!6 len:6 { " \\\\\n};" }
│                      → StrChunk ..0000.111676!1 len:129 [1]
│                        ← StrChunk ..0000.220113!1 len:54 { "\\" }
│                          ← StrChunk ..0000.220047!2 len:33 { "``" }
│                            ← StrChunk ..0000.111638!3 len:22 { " {\\" }
│                              ← StrChunk ..0000.220418!17 len:18 { " [rectangle,draw]" }
│                                ← StrChunk ..0000.111637!1 len:1 { ")" }
│                              → StrChunk ..0000.111650!1 len:1 { "{" }
│                                ← StrChunk ..0000.111641!5 len:0 [5]
│                            → StrChunk ..0000.220062!2 len:9 { "''" }
│                              ← StrChunk ..0000.111652!4 len:4 { "todo" }
│                                ← StrChunk ..0000.111651!1 len:0 [1]
│                              → StrChunk ..0000.111657!3 len:3 { ": [" }
│                                ← StrChunk ..0000.111656!1 len:0 [1]
│                          → StrChunk ..0000.111666!1 len:20 [1]
│                            ← StrChunk ..0000.111661!1 len:9 [1]
│                              ← StrChunk ..0000.220116!2 len:3 { "``" }
│                                ← StrChunk ..0000.111660!1 len:1 { "{" }
│                              → StrChunk ..0000.220122!2 len:6 { "''" }
│                                ← StrChunk ..0000.111662!4 len:4 { "done" }
│                            → StrChunk ..0000.111673!2 len:11 { "}]" }
│                              ← StrChunk ..0000.220129!1 len:7 { "\\" }
│                                ← StrChunk ..0000.111667!6 len:6 { ": true" }
│                              → StrChunk ..0000.111675!1 len:2 { "}" }
│                                ← StrChunk ..0000.220131!1 len:1 { "\\" }
│                        → StrChunk ..0000.111717!1 len:75 [1]
│                          ← StrChunk ..0000.111706!5 len:55 [5]
│                            ← StrChunk ..0000.111702!1 len:46 { ")" }
│                              ← StrChunk ..0000.111756!2 len:25 [2]
│                                ← StrChunk ..0000.111677!25 len:25 { "};\n\\node (right2) at (8,0" }
│                              → StrChunk ..0000.111703!3 len:20 { " {\\" }
│                                ← StrChunk ..0000.220435!17 len:17 { " [rectangle,draw]" }
│                            → StrChunk ..0000.111712!1 len:9 [1]
│                              ← StrChunk ..0000.220050!2 len:3 { "``" }
│                                ← StrChunk ..0000.111711!1 len:1 { "{" }
│                              → StrChunk ..0000.220065!2 len:6 { "''" }
│                                ← StrChunk ..0000.111713!4 len:4 { "todo" }
│                          → StrChunk ..0000.111725!4 len:20 { "done" }
│                            ← StrChunk ..0000.111723!1 len:7 { "{" }
│                              ← StrChunk ..0000.220114!1 len:4 { "\\" }
│                                ← StrChunk ..0000.111718!3 len:3 { ": [" }
│                              → StrChunk ..0000.111724!1 len:2 [1]
│                                ← StrChunk ..0000.220119!2 len:2 { "``" }
│                            → StrChunk ..0000.220124!1 len:9 [1]
│                              ← StrChunk ..0000.111729!1 len:2 [1]
│                                ← StrChunk ..0000.220127!2 len:2 { "''" }
│                              → StrChunk ..0000.220130!1 len:7 { "\\" }
│                                ← StrChunk ..0000.111730!6 len:6 { ": true" }
│              → StrChunk ..0000.36775!4 len:7360 [4]
│                ← StrChunk ..0000.223615!13 len:6403 { " future work." }
│                  ← StrChunk ..0000.243992!74 len:4652 { "no user input should be lost due" … }
│                    ← StrChunk ..0000.112034!36 len:1618 [36]
│                      ← StrChunk ..0000.220590!6 len:299 { "right0" }
│                        ← StrChunk ..0000.111798!17 len:186 [17]
│                          ← StrChunk ..0000.220910!1 len:121 [1]
│                            ← StrChunk ..0000.111740!2 len:29 { "};" }
│                              ← StrChunk ..0000.111738!1 len:2 { "}" }
│                                ← StrChunk ..0000.220132!1 len:1 { "\\" }
│                                → StrChunk ..0000.111739!1 len:0 [1]
│                              → StrChunk ..0000.220964!1 len:25 { "6" }
│                                ← StrChunk ..0000.220886!24 len:24 { "\n\\node (comms)  at (4,1." }
│                            → StrChunk ..0000.220580!5 len:92 { "left0" }
│                              ← StrChunk ..0000.111758!19 len:71 { "\n\\draw [thick,->] (" }
│                                ← StrChunk ..0000.220911!52 len:52 { ") [text=blue] {\\footnotesize net" … }
│                              → StrChunk ..0000.111782!16 len:16 { ")  to node [left" }
│                                ← StrChunk ..0000.111777!5 len:0 [5]
│                          → StrChunk ..0000.236759!5 len:65 { ".get(" }
│                            ← StrChunk ..0000.111816!2 len:7 { " {" }
│                              ← StrChunk ..0000.220152!1 len:2 { " " }
│                                ← StrChunk ..0000.111815!1 len:1 { "]" }
│                              → StrChunk ..0000.111832!3 len:3 { "doc" }
│                                ← StrChunk ..0000.111818!14 len:0 [14]
│                            → StrChunk ..0000.236771!8 len:53 { ").idx(1)" }
│                              ← StrChunk ..0000.111836!8 len:8 { "``todo''" }
│                                ← StrChunk ..0000.111835!1 len:0 [1]
│                              → StrChunk ..0000.111855!37 len:37 { ".delete;} (left1);\n\\draw [thick," … }
│                                ← StrChunk ..0000.111844!11 len:0 [11]
│                        → StrChunk ..0000.236795!1 len:107 { ")" }
│                          ← StrChunk ..0000.111930!3 len:35 { "] {" }
│                            ← StrChunk ..0000.111898!1 len:16 [1]
│                              ← StrChunk ..0000.111897!1 len:1 { ")" }
│                                ← StrChunk ..0000.111892!5 len:0 [5]
│                              → StrChunk ..0000.111914!16 len:15 [16]
│                                ← StrChunk ..0000.111899!15 len:15 { " to node [right" }
│                            → StrChunk ..0000.236765!5 len:16 { ".get(" }
│                              ← StrChunk ..0000.111947!3 len:3 { "doc" }
│                                ← StrChunk ..0000.111933!14 len:0 [14]
│                              → StrChunk ..0000.111951!8 len:8 { "``todo''" }
│                                ← StrChunk ..0000.111950!1 len:0 [1]
│                          → StrChunk ..0000.111968!5 len:71 [5]
│                            ← StrChunk ..0000.111967!1 len:12 { "." }
│                              ← StrChunk ..0000.111962!5 len:0 [5]
│                                ← StrChunk ..0000.111959!1 len:0 [1]
│                              → StrChunk ..0000.236808!4 len:11 { "get(" }
│                                ← StrChunk ..0000.236796!7 len:7 { "idx(1)." }
│                            → StrChunk ..0000.111981!1 len:59 [1]
│                              ← StrChunk ..0000.236813!1 len:9 { ")" }
│                                ← StrChunk ..0000.111973!8 len:8 { "``done''" }
│                              → StrChunk ..0000.112001!33 len:50 { "1);\n\\draw [thick,->] (left1)  to" … }
│                                ← StrChunk ..0000.111982!17 len:17 { " := true;} (right" }
│                      → StrChunk ..0000.111999!1 len:1319 [1]
│                        ← StrChunk ..0000.112184!8 len:216 { " (right2" }
│                          ← StrChunk ..0000.112179!5 len:111 { ")  to" }
│                            ← StrChunk ..0000.220269!12 len:89 { "dashed,blue," }
│                              ← StrChunk ..0000.112110!36 len:61 [36]
│                                ← StrChunk ..0000.112072!38 len:38 { "(left2);\n\\draw [thick,->] (right" … }
│                                → StrChunk ..0000.112146!23 len:23 { "(right2);\n\\draw [thick," }
│                              → StrChunk ..0000.220293!6 len:16 { ".south" }
│                                ← StrChunk ..0000.112169!10 len:10 { "->] (left1" }
│                            → StrChunk ..0000.220320!8 len:17 { ",in=135]" }
│                              ← StrChunk ..0000.220316!2 len:9 { "70" }
│                                ← StrChunk ..0000.220305!7 len:7 { " [out=2" }
│                              → StrChunk ..0000.220312!2 len:0 [2]
│                                ← StrChunk ..0000.220318!1 len:0 [1]
│                          → StrChunk ..0000.112219!4 len:97 { ") to" }
│                            ← StrChunk ..0000.220281!12 len:56 { "dashed,blue," }
│                              ← StrChunk ..0000.112192!16 len:27 { ");\n\\draw [thick," }
│                                ← StrChunk ..0000.220345!11 len:11 { ".north west" }
│                              → StrChunk ..0000.220299!6 len:17 { ".south" }
│                                ← StrChunk ..0000.112208!11 len:11 { "->] (right1" }
│                            → StrChunk ..0000.220356!11 len:37 { ".north east" }
│                              ← StrChunk ..0000.112223!7 len:24 { " (left2" }
│                                ← StrChunk ..0000.220328!17 len:17 { " [out=270,in=45] " }
│                              → StrChunk ..0000.112070!1 len:2 [1]
│                                ← StrChunk ..0000.112230!2 len:2 { ");" }
│                        → StrChunk ..0000.111219!1 len:1103 { "}" }
│                          ← StrChunk ..0000.154747!1 len:147 { "." }
│                            ← StrChunk ..0000.111646!2 len:111 [2]
│                              ← StrChunk ..0000.111721!1 len:0 [1]
│                                ← StrChunk ..0000.111960!1 len:0 [1]
│                              → StrChunk ..0000.111283!87 len:111 { "ion{One replica removes a list e" … }
│                                ← StrChunk ..0000.111257!24 len:24 { "\n\\end{tikzpicture}\n\\capt" }
│                            → StrChunk ..0000.111204!1 len:35 { "\n" }
│                              ← StrChunk ..0000.111281!1 len:22 [1]
│                                ← StrChunk ..0000.111370!22 len:22 { "}\\label{fig:todo-item}" }
│                              → StrChunk ..0000.111205!12 len:12 { "\\end{figure*" }
│                                ← StrChunk ..0000.243013!1 len:0 [1]
│                          → StrChunk ..0000.243254!18 len:955 { "``green''. Instead" }
│                            ← StrChunk ..0000.243017!220 len:237 { "Figure~\\ref{fig:map-remove} give" … }
│                              ← StrChunk ..0000.243015!1 len:2 { "\n" }
│                                ← StrChunk ..0000.112977!1 len:1 { "\n" }
│                              → StrChunk ..0000.243238!15 len:15 { " and then adds " }
│                                ← StrChunk ..0000.243237!1 len:0 [1]
│                            → StrChunk ..0000.243985!7 len:700 { "violate" }
│                              ← StrChunk ..0000.243404!543 len:671 { "pty map to that key. The difficu" … }
│                                ← StrChunk ..0000.243274!128 len:128 { " of assigning an empty map, $q$ " … }
│                              → StrChunk ..0000.243955!22 len:22 { " our requirement that " }
│                                ← StrChunk ..0000.243947!8 len:0 [8]
│                    → StrChunk ..0000.112979!5 len:2960 [5]
│                      ← StrChunk ..0000.247408!61 len:2109 { " merged, so we preserve both val" … }
│                        ← StrChunk ..0000.247082!20 len:1858 { "``a'' and ``c''; and" }
│                          ← StrChunk ..0000.246866!49 len:1519 { "by treating the document as a li" … }
│                            ← StrChunk ..0000.246750!13 len:1352 { " items in the" }
│                              ← StrChunk ..0000.244294!117 len:1240 { ", since they were explicitly add" … }
│                                ← StrChunk ..0000.244068!224 len:224 { "define merge semantics that pres" … }
│                                → StrChunk ..0000.245839!899 len:899 { "\n\nFigure~\\ref{fig:two-lists} ill" … }
│                              → StrChunk ..0000.246763!87 len:99 { "\n\nFigure~\\ref{fig:text-edit} sho" … }
│                                ← StrChunk ..0000.246738!12 len:12 { " same order." }
│                            → StrChunk ..0000.246971!1 len:118 { ";" }
│                              ← StrChunk ..0000.246915!31 len:79 { " ``y'' is inserted before ``a''" }
│                                ← StrChunk ..0000.246972!48 len:48 { " All changes are preserved in th" … }
│                              → StrChunk ..0000.247068!10 len:38 { "d between " }
│                                ← StrChunk ..0000.247036!28 len:28 { " ``x'' and ``z'' are inserte" }
│                          → StrChunk ..0000.247212!103 len:319 { "two replicas concurrently insert" … }
│                            ← StrChunk ..0000.246946!1 len:125 [1]
│                              ← StrChunk ..0000.247064!2 len:0 [2]
│                                ← StrChunk ..0000.247078!2 len:0 [2]
│                              → StrChunk ..0000.247102!108 len:125 { ".\n\nFigure~\\ref{fig:type-clash} d" … }
│                                ← StrChunk ..0000.246947!17 len:17 { " ``b'' is deleted" }
│                            → StrChunk ..0000.248977!1 len:91 [1]
│                              ← StrChunk ..0000.248979!3 len:78 { " be" }
│                                ← StrChunk ..0000.247317!75 len:75 { "p$ inserts a nested map, whereas" … }
│                              → StrChunk ..0000.247405!3 len:13 [3]
│                                ← StrChunk ..0000.247392!13 len:13 { " meaningfully" }
│                        → StrChunk ..0000.247021!1 len:190 [1]
│                          ← StrChunk ..0000.247592!112 len:187 { ", or \\textsf{regT} for a map, li" … }
│                            ← StrChunk ..0000.247566!3 len:75 [3]
│                              ← StrChunk ..0000.247591!1 len:60 { "," }
│                                ← StrChunk ..0000.247507!59 len:59 { " tagging each map key with a typ" … }
│                              → StrChunk ..0000.247582!6 len:15 { "listT}" }
│                                ← StrChunk ..0000.247569!9 len:9 { " \\textsf{" }
│                            → StrChunk ..0000.247469!19 len:0 [19]
│                              ← StrChunk ..0000.247578!2 len:0 [2]
│                                ← StrChunk ..0000.247704!8 len:0 [8]
│                              → StrChunk ..0000.247210!1 len:0 [1]
│                                ← StrChunk ..0000.247315!1 len:0 [1]
│                          → StrChunk ..0000.244066!1 len:3 [1]
│                            ← StrChunk ..0000.247022!2 len:0 [2]
│                              ← StrChunk ..0000.247026!2 len:0 [2]
│                                ← StrChunk ..0000.246964!6 len:0 [6]
│                              → StrChunk ..0000.244292!1 len:0 [1]
│                                ← StrChunk ..0000.246850!8 len:0 [8]
│                            → StrChunk ..0000.243016!1 len:3 { "\n" }
│                              ← StrChunk ..0000.243272!1 len:0 [1]
│                                ← StrChunk ..0000.243402!1 len:0 [1]
│                              → StrChunk ..0000.227804!1 len:2 { "F" }
│                                ← StrChunk ..0000.112978!1 len:1 { "\n" }
│                      → StrChunk ..0000.223691!25 len:851 { " of developer expectation" }
│                        ← StrChunk ..0000.113391!7 len:780 [7]
│                          ← StrChunk ..0000.113112!253 len:378 { "a to-do list application, one re" … }
│                            ← StrChunk ..0000.112988!1 len:104 { " " }
│                              ← StrChunk ..0000.227805!3 len:7 { "ly," }
│                                ← StrChunk ..0000.112984!4 len:4 { "inal" }
│                              → StrChunk ..0000.113000!96 len:96 { "Figure~\\ref{fig:todo-item} shows" … }
│                                ← StrChunk ..0000.112989!11 len:0 [11]
│                            → StrChunk ..0000.227773!4 len:21 { " $p$" }
│                              ← StrChunk ..0000.113374!8 len:8 { " replica" }
│                                ← StrChunk ..0000.113365!9 len:0 [9]
│                              → StrChunk ..0000.227784!4 len:9 { "ving" }
│                                ← StrChunk ..0000.113386!5 len:5 { ", lea" }
│                          → StrChunk ..0000.227795!4 len:402 { "case" }
│                            ← StrChunk ..0000.113553!49 len:210 { "ref{fig:map-remove}, but it is p" … }
│                              ← StrChunk ..0000.113408!143 len:151 { " item without a title (since the" … }
│                                ← StrChunk ..0000.113398!8 len:8 { " a to-do" }
│                              → StrChunk ..0000.113611!10 len:10 { ". In this " }
│                                ← StrChunk ..0000.113602!9 len:0 [9]
│                            → StrChunk ..0000.223542!11 len:188 { " We leave t" }
│                              ← StrChunk ..0000.113628!166 len:166 { " it may be more desirable to dis" … }
│                                ← StrChunk ..0000.113621!7 len:0 [7]
│                              → StrChunk ..0000.223628!9 len:11 { " analysis" }
│                                ← StrChunk ..0000.223555!2 len:2 { "he" }
│                        → StrChunk ..0000.223738!4 len:46 { "the " }
│                          ← StrChunk ..0000.223638!13 len:6 [13]
│                            ← StrChunk ..0000.223686!3 len:5 { "and" }
│                              ← StrChunk ..0000.223637!1 len:2 { " " }
│                                ← StrChunk ..0000.223755!1 len:1 { "s" }
│                              → StrChunk ..0000.223689!1 len:0 [1]
│                                ← StrChunk ..0000.223716!4 len:0 [4]
│                            → StrChunk ..0000.223657!2 len:1 [2]
│                              ← StrChunk ..0000.223661!5 len:0 [5]
│                                ← StrChunk ..0000.223655!2 len:0 [2]
│                              → StrChunk ..0000.223557!1 len:1 { " " }
│                                ← StrChunk ..0000.223651!2 len:0 [2]
│                          → StrChunk ..0000.223570!4 len:36 [4]
│                            ← StrChunk ..0000.223756!15 len:14 [15]
│                              ← StrChunk ..0000.223742!4 len:14 [4]
│                                ← StrChunk ..0000.225682!14 len:14 { "development of" }
│                              → StrChunk ..0000.223558!10 len:0 [10]
│                                ← StrChunk ..0000.223746!9 len:0 [9]
│                            → StrChunk ..0000.223605!6 len:22 { "guage " }
│                              ← StrChunk ..0000.223589!10 len:13 { "schema lan" }
│                                ← StrChunk ..0000.223574!3 len:3 { " a " }
│                              → StrChunk ..0000.223613!2 len:3 [2]
│                                ← StrChunk ..0000.227821!3 len:3 { "for" }
│                  → StrChunk ..0000.115679!5 len:1738 { " the " }
│                    ← StrChunk ..0000.114835!31 len:1095 { " that can be arbitrarily nested" }
│                      ← StrChunk ..0000.114331!6 len:423 { "ersus " }
│                        ← StrChunk ..0000.113551!1 len:20 [1]
│                          ← StrChunk ..0000.113798!42 len:0 [42]
│                            ← StrChunk ..0000.223568!1 len:0 [1]
│                              ← StrChunk ..0000.223599!3 len:0 [3]
│                                ← StrChunk ..0000.223611!1 len:0 [1]
│                                → StrChunk ..0000.223577!6 len:0 [6]
│                              → StrChunk ..0000.113794!2 len:0 [2]
│                                ← StrChunk ..0000.223553!1 len:0 [1]
│                            → StrChunk ..0000.113886!3 len:0 [3]
│                              ← StrChunk ..0000.113892!171 len:0 [171]
│                                ← StrChunk ..0000.113842!44 len:0 [44]
│                              → StrChunk ..0000.113796!1 len:0 [1]
│                                ← StrChunk ..0000.113840!1 len:0 [1]
│                          → StrChunk ..0000.111217!1 len:20 [1]
│                            ← StrChunk ..0000.113096!1 len:0 [1]
│                              ← StrChunk ..0000.113382!2 len:0 [2]
│                                ← StrChunk ..0000.113406!1 len:0 [1]
│                              → StrChunk ..0000.113097!4 len:0 [4]
│                                ← StrChunk ..0000.113105!3 len:0 [3]
│                            → StrChunk ..0000.114312!18 len:20 { "\n\\subsection{JSON " }
│                              ← StrChunk ..0000.109531!1 len:1 { "\n" }
│                                ← StrChunk ..0000.109645!3 len:0 [3]
│                              → StrChunk ..0000.114330!1 len:1 [1]
│                                ← StrChunk ..0000.252339!1 len:1 { "V" }
│                        → StrChunk ..0000.124015!1 len:397 { "}" }
│                          ← StrChunk ..0000.114508!10 len:184 { "previously" }
│                            ← StrChunk ..0000.114349!1 len:122 { "}" }
│                              ← StrChunk ..0000.114337!12 len:3 [12]
│                                ← StrChunk ..0000.114519!3 len:3 { "XML" }
│                              → StrChunk ..0000.114350!98 len:118 { "\n\nThe most common alternative to" … }
│                                ← StrChunk ..0000.144768!20 len:20 { "\\label{sec:json-xml}" }
│                            → StrChunk ..0000.123971!43 len:52 { "~\\cite{Davis:2002iv,Ignat:2003jy" … }
│                              ← StrChunk ..0000.114459!8 len:8 { " studied" }
│                                ← StrChunk ..0000.114448!11 len:0 [11]
│                              → StrChunk ..0000.124014!1 len:1 [1]
│                                ← StrChunk ..0000.124134!1 len:1 { "o" }
│                          → StrChunk ..0000.114561!29 len:212 { "Besides the superficial synta" }
│                            ← StrChunk ..0000.114493!2 len:2 [2]
│                              ← StrChunk ..0000.114496!1 len:0 [1]
│                                ← StrChunk ..0000.114471!22 len:0 [22]
│                              → StrChunk ..0000.114518!1 len:2 { " " }
│                                ← StrChunk ..0000.114495!1 len:1 { "." }
│                            → StrChunk ..0000.114534!9 len:181 [9]
│                              ← StrChunk ..0000.114590!1 len:20 [1]
│                                ← StrChunk ..0000.114592!20 len:20 { "ctical differences, " }
│                              → StrChunk ..0000.114621!143 len:161 { " of XML and JSON appears quite s" … }
│                                ← StrChunk ..0000.114543!18 len:18 { "the tree structure" }
│                      → StrChunk ..0000.115400!24 len:641 { " In this regard, XML is " }
│                        ← StrChunk ..0000.115248!1 len:387 { "L" }
│                          ← StrChunk ..0000.114942!8 len:331 { "form an " }
│                            ← StrChunk ..0000.115014!2 len:106 { "L," }
│                              ← StrChunk ..0000.115016!3 len:76 { "In " }
│                                ← StrChunk ..0000.114764!71 len:71 { ": maps for unordered key-value p" … }
│                                → StrChunk ..0000.114866!2 len:2 { "XM" }
│                              → StrChunk ..0000.114904!28 len:28 { " the children of an element " }
│                                ← StrChunk ..0000.114868!36 len:0 [36]
│                            → StrChunk ..0000.115019!77 len:217 { ", while the attributes of an ele" … }
│                              ← StrChunk ..0000.114950!16 len:16 { "ordered sequence" }
│                                ← StrChunk ..0000.114966!6 len:0 [6]
│                              → StrChunk ..0000.115138!98 len:124 { "elements inside attributes -- th" … }
│                                ← StrChunk ..0000.115108!26 len:26 { "XML does not allow nested " }
│                          → StrChunk ..0000.115281!1 len:55 [1]
│                            ← StrChunk ..0000.115249!32 len:43 { "maps within lists, but not lists" }
│                              ← StrChunk ..0000.115237!10 len:10 { " supports " }
│                                ← StrChunk ..0000.115236!1 len:0 [1]
│                              → StrChunk ..0000.115298!7 len:1 [7]
│                                ← StrChunk ..0000.115297!1 len:1 { " " }
│                            → StrChunk ..0000.115306!5 len:12 [5]
│                              ← StrChunk ..0000.115305!1 len:7 { " " }
│                                ← StrChunk ..0000.115282!6 len:6 { "within" }
│                              → StrChunk ..0000.115289!5 len:5 { "maps." }
│                                ← StrChunk ..0000.115288!1 len:0 [1]
│                        → StrChunk ..0000.247721!1 len:230 { "s" }
│                          ← StrChunk ..0000.115312!1 len:50 [1]
│                            ← StrChunk ..0000.115424!11 len:28 [11]
│                              ← StrChunk ..0000.115474!1 len:28 { "t" }
│                                ← StrChunk ..0000.115446!27 len:27 { "less expressive than JSON: " }
│                              → StrChunk ..0000.115389!5 len:0 [5]
│                                ← StrChunk ..0000.115311!1 len:0 [1]
│                            → StrChunk ..0000.115316!7 len:22 [7]
│                              ← StrChunk ..0000.247755!9 len:12 { "scenarios" }
│                                ← StrChunk ..0000.115313!3 len:3 { "he " }
│                              → StrChunk ..0000.115323!10 len:10 { " in Figure" }
│                                ← StrChunk ..0000.247720!1 len:0 [1]
│                          → StrChunk ..0000.115373!16 len:179 [16]
│                            ← StrChunk ..0000.115353!20 len:66 { " cannot occur in XML" }
│                              ← StrChunk ..0000.247722!25 len:45 { " and~\\ref{fig:type-clash}" }
│                                ← StrChunk ..0000.115333!20 len:20 { "~\\ref{fig:two-lists}" }
│                              → StrChunk ..0000.115475!1 len:1 { "." }
│                                ← StrChunk ..0000.115573!70 len:0 [70]
│                            → StrChunk ..0000.115657!17 len:113 { ", for example by " }
│                              ← StrChunk ..0000.115492!81 len:84 { "ome applications may attach map-" … }
│                                ← StrChunk ..0000.115294!3 len:3 { "\n\nS" }
│                              → StrChunk ..0000.115674!5 len:12 [5]
│                                ← StrChunk ..0000.115723!12 len:12 { "interpreting" }
│                    → StrChunk ..0000.144805!5 len:638 { "-api}" }
│                      ← StrChunk ..0000.116245!1 len:416 { "c" }
│                        ← StrChunk ..0000.116022!1 len:276 { " " }
│                          ← StrChunk ..0000.115771!17 len:167 [17]
│                            ← StrChunk ..0000.180565!13 len:63 { "is key-value " }
│                              ← StrChunk ..0000.115684!13 len:38 { "element name " }
│                                ← StrChunk ..0000.115712!6 len:6 { "child " }
│                                → StrChunk ..0000.115752!19 len:19 { "as key. However, th" }
│                              → StrChunk ..0000.180578!1 len:12 [1]
│                                ← StrChunk ..0000.180580!12 len:12 { "structure is" }
│                            → StrChunk ..0000.115811!26 len:104 { " and would not be enforced" }
│                              ← StrChunk ..0000.180592!1 len:24 { "," }
│                                ← StrChunk ..0000.115788!23 len:23 { " not part of XML itself" }
│                              → StrChunk ..0000.115899!1 len:54 [1]
│                                ← StrChunk ..0000.116050!54 len:54 { " by existing collaborative editi" … }
│                          → StrChunk ..0000.116188!1 len:108 [1]
│                            ← StrChunk ..0000.116024!2 len:85 { "f " }
│                              ← StrChunk ..0000.116023!1 len:1 [1]
│                                ← StrChunk ..0000.116106!1 len:1 { "I" }
│                              → StrChunk ..0000.116190!3 len:82 { "ms " }
│                                ← StrChunk ..0000.116109!79 len:79 { "multiple children with the same " … }
│                            → StrChunk ..0000.115900!1 len:23 [1]
│                              ← StrChunk ..0000.116026!11 len:0 [11]
│                                ← StrChunk ..0000.116048!2 len:0 [2]
│                              → StrChunk ..0000.115959!23 len:23 { "would create duplicate " }
│                                ← StrChunk ..0000.115909!50 len:0 [50]
│                        → StrChunk ..0000.115134!2 len:139 [2]
│                          ← StrChunk ..0000.124055!78 len:88 [78]
│                            ← StrChunk ..0000.116316!47 len:88 { "erging them like in Figure~\\ref{" … }
│                              ← StrChunk ..0000.115983!39 len:39 { "hildren with the same key rather" … }
│                                ← StrChunk ..0000.115982!1 len:0 [1]
│                              → StrChunk ..0000.124018!11 len:2 [11]
│                                ← StrChunk ..0000.124016!2 len:2 { "\n\n" }
│                            → StrChunk ..0000.115837!31 len:0 [31]
│                              ← StrChunk ..0000.115901!4 len:0 [4]
│                                ← StrChunk ..0000.124029!13 len:0 [13]
│                              → StrChunk ..0000.115735!1 len:0 [1]
│                                ← StrChunk ..0000.115697!15 len:0 [15]
│                          → StrChunk ..0000.252341!1 len:51 { "E" }
│                            ← StrChunk ..0000.114467!2 len:21 [2]
│                              ← StrChunk ..0000.114932!5 len:0 [5]
│                                ← StrChunk ..0000.115096!6 len:0 [6]
│                              → StrChunk ..0000.114278!21 len:21 { "\\subsection{Document " }
│                                ← StrChunk ..0000.114276!2 len:0 [2]
│                            → StrChunk ..0000.144788!11 len:29 { "\\label{sec:" }
│                              ← StrChunk ..0000.114300!11 len:11 { "diting API}" }
│                                ← StrChunk ..0000.114299!1 len:0 [1]
│                              → StrChunk ..0000.144799!6 len:7 [6]
│                                ← StrChunk ..0000.144816!7 len:7 { "editing" }
│                      → StrChunk ..0000.36145!4 len:217 { "EXPR" }
│                        ← StrChunk ..0000.224287!8 len:138 { "\\texttt{" }
│                          ← StrChunk ..0000.36064!13 len:79 { "\nCMD & ::= & " }
│                            ← StrChunk ..0000.38814!11 len:49 { "\n\\centering" }
│                              ← StrChunk ..0000.35891!15 len:16 { "\n\\begin{figure}" }
│                                ← StrChunk ..0000.114311!1 len:1 { "\n" }
│                              → StrChunk ..0000.36129!6 len:22 { "{rcll}" }
│                                ← StrChunk ..0000.36034!16 len:16 { "\n\\begin{tabular}" }
│                            → StrChunk ..0000.224069!2 len:17 { "tt" }
│                              ← StrChunk ..0000.36084!4 len:5 { "text" }
│                                ← StrChunk ..0000.36079!1 len:1 { "\\" }
│                              → StrChunk ..0000.36090!10 len:10 { "{let} $x$ " }
│                                ← StrChunk ..0000.36088!2 len:0 [2]
│                          → StrChunk ..0000.36183!1 len:51 [1]
│                            ← StrChunk ..0000.36101!28 len:37 { " EXPR & $x \\in \\mathrm{VAR}$" }
│                              ← StrChunk ..0000.224295!1 len:2 { "}" }
│                                ← StrChunk ..0000.36100!1 len:1 { "=" }
│                              → StrChunk ..0000.36185!1 len:7 { "$" }
│                                ← StrChunk ..0000.36135!6 len:6 { " \\\\\n& " }
│                            → StrChunk ..0000.36186!1 len:14 { "$" }
│                              ← StrChunk ..0000.36141!1 len:1 { "|" }
│                                ← StrChunk ..0000.36181!1 len:0 [1]
│                              → StrChunk ..0000.36829!9 len:12 { "$\\mathrm{" }
│                                ← StrChunk ..0000.36142!3 len:3 { " & " }
│                        → StrChunk ..0000.36168!8 len:75 { "\\mathrm{" }
│                          ← StrChunk ..0000.36150!1 len:28 { "=" }
│                            ← StrChunk ..0000.36149!1 len:12 { " " }
│                              ← StrChunk ..0000.224296!1 len:2 { "$" }
│                                ← StrChunk ..0000.36838!1 len:1 { "}" }
│                              → StrChunk ..0000.39898!1 len:9 { ":" }
│                                ← StrChunk ..0000.224071!8 len:8 { "\\texttt{" }
│                            → StrChunk ..0000.224297!1 len:15 { "$" }
│                              ← StrChunk ..0000.36151!1 len:2 { " " }
│                                ← StrChunk ..0000.224079!1 len:1 { "}" }
│                              → StrChunk ..0000.36153!12 len:12 { "v$ & $v \\in " }
│                                ← StrChunk ..0000.36152!1 len:0 [1]
│                          → StrChunk ..0000.36770!1 len:39 { "}" }
│                            ← StrChunk ..0000.36717!9 len:30 { "\n& $|$ & " }
│                              ← StrChunk ..0000.36176!5 len:8 { "}$ \\\\" }
│                                ← StrChunk ..0000.36165!3 len:3 { "VAL" }
│                              → StrChunk ..0000.36726!4 len:13 { "EXPR" }
│                                ← StrChunk ..0000.36761!9 len:9 { "$\\mathrm{" }
│                            → StrChunk ..0000.224080!1 len:8 [1]
│                              ← StrChunk ..0000.36730!1 len:1 [1]
│                                ← StrChunk ..0000.224098!1 len:1 { "$" }
│                              → StrChunk ..0000.224087!6 len:7 { "texttt" }
│                                ← StrChunk ..0000.36731!1 len:1 { "\\" }
│                → StrChunk ..0000.36612!12 len:957 { "\nVAL & ::= &" }
│                  ← StrChunk ..0000.93210!3 len:502 [3]
│                    ← StrChunk ..0000.36201!1 len:284 { ";" }
│                      ← StrChunk ..0000.36847!1 len:143 { "\\" }
│                        ← StrChunk ..0000.224300!8 len:78 { "\\texttt{" }
│                          ← StrChunk ..0000.36749!5 len:18 [5]
│                            ← StrChunk ..0000.36743!6 len:14 { "insert" }
│                              ← StrChunk ..0000.36742!1 len:2 { "{" }
│                                ← StrChunk ..0000.36736!6 len:0 [6]
│                                → StrChunk ..0000.224099!1 len:1 { "." }
│                              → StrChunk ..0000.224298!1 len:6 { "(" }
│                                ← StrChunk ..0000.248940!5 len:5 { "After" }
│                            → StrChunk ..0000.224093!1 len:4 { "$" }
│                              ← StrChunk ..0000.36755!1 len:1 [1]
│                                ← StrChunk ..0000.36754!1 len:1 { "}" }
│                              → StrChunk ..0000.224094!1 len:2 { "$" }
│                                ← StrChunk ..0000.36779!1 len:1 { "v" }
│                          → StrChunk ..0000.36828!1 len:52 { "$" }
│                            ← StrChunk ..0000.36781!1 len:37 [1]
│                              ← StrChunk ..0000.224308!1 len:2 { "}" }
│                                ← StrChunk ..0000.36780!1 len:1 { ")" }
│                              → StrChunk ..0000.36813!6 len:35 { "$|$ & " }
│                                ← StrChunk ..0000.36782!29 len:29 { " & $v \\in \\mathrm{VAL}$ \\\\\n& " }
│                            → StrChunk ..0000.36840!6 len:14 { "{EXPR}" }
│                              ← StrChunk ..0000.36819!7 len:7 { "\\mathrm" }
│                                ← StrChunk ..0000.36826!1 len:0 [1]
│                              → StrChunk ..0000.36846!1 len:1 [1]
│                                ← StrChunk ..0000.224101!1 len:1 { "$" }
│                        → StrChunk ..0000.36386!1 len:64 { "\n" }
│                          ← StrChunk ..0000.36875!1 len:18 [1]
│                            ← StrChunk ..0000.36854!1 len:15 { "{" }
│                              ← StrChunk ..0000.36848!6 len:6 [6]
│                                ← StrChunk ..0000.224108!6 len:6 { "texttt" }
│                              → StrChunk ..0000.36865!7 len:8 { "delete}" }
│                                ← StrChunk ..0000.224114!1 len:1 { "." }
│                            → StrChunk ..0000.36855!5 len:3 [5]
│                              ← StrChunk ..0000.37058!65 len:3 [65]
│                                ← StrChunk ..0000.36872!3 len:3 { " \\\\" }
│                              → StrChunk ..0000.36732!2 len:0 [2]
│                                ← StrChunk ..0000.36811!1 len:0 [1]
│                          → StrChunk ..0000.36387!2 len:45 [2]
│                            ← StrChunk ..0000.224118!2 len:25 { "tt" }
│                              ← StrChunk ..0000.36420!4 len:13 { "text" }
│                                ← StrChunk ..0000.36391!9 len:9 { "& $|$ & \\" }
│                              → StrChunk ..0000.36406!10 len:10 { "{yield} \\\\" }
│                                ← StrChunk ..0000.36400!6 len:0 [6]
│                            → StrChunk ..0000.224334!2 len:20 { "\\t" }
│                              ← StrChunk ..0000.36190!11 len:12 { "& $|$ & CMD" }
│                                ← StrChunk ..0000.36187!1 len:1 { "\n" }
│                              → StrChunk ..0000.224336!2 len:6 [2]
│                                ← StrChunk ..0000.224340!6 len:6 { "exttt{" }
│                      → StrChunk ..0000.36249!2 len:140 [2]
│                        ← StrChunk ..0000.224123!1 len:115 { "t" }
│                          ← StrChunk ..0000.36446!2 len:42 { "em" }
│                            ← StrChunk ..0000.36430!8 len:17 { "\\vspace{" }
│                              ← StrChunk ..0000.36202!5 len:6 { " CMD " }
│                                ← StrChunk ..0000.224346!1 len:1 { "}" }
│                                → StrChunk ..0000.36207!2 len:0 [2]
│                              → StrChunk ..0000.36438!1 len:3 [1]
│                                ← StrChunk ..0000.36710!3 len:3 { "0.5" }
│                            → StrChunk ..0000.36448!2 len:23 { "\\\\" }
│                              ← StrChunk ..0000.36442!1 len:1 { "}" }
│                                ← StrChunk ..0000.36439!3 len:0 [3]
│                              → StrChunk ..0000.224121!1 len:20 { "t" }
│                                ← StrChunk ..0000.36209!19 len:19 { "\nEXPR & ::= & \\text" }
│                          → StrChunk ..0000.36238!7 len:72 { "\n& $|$ " }
│                            ← StrChunk ..0000.36941!34 len:46 { "\n& $|$ & $x$ & $x \\in \\mathrm{VA" … }
│                              ← StrChunk ..0000.36230!8 len:8 { "{doc} \\\\" }
│                                ← StrChunk ..0000.36228!2 len:0 [2]
│                              → StrChunk ..0000.36975!2 len:4 [2]
│                                ← StrChunk ..0000.36979!4 len:4 { "$ \\\\" }
│                            → StrChunk ..0000.224310!8 len:19 { "\\texttt{" }
│                              ← StrChunk ..0000.36245!4 len:6 { "EXPR" }
│                                ← StrChunk ..0000.36424!2 len:2 { "& " }
│                              → StrChunk ..0000.93170!1 len:5 [1]
│                                ← StrChunk ..0000.231660!5 len:5 { ".get(" }
│                        → StrChunk ..0000.224047!2 len:25 [2]
│                          ← StrChunk ..0000.224040!1 len:9 [1]
│                            ← StrChunk ..0000.36271!1 len:0 [1]
│                              ← StrChunk ..0000.36251!12 len:0 [12]
│                                ← StrChunk ..0000.36267!4 len:0 [4]
│                              → StrChunk ..0000.102219!1 len:0 [1]
│                                ← StrChunk ..0000.93192!5 len:0 [5]
│                            → StrChunk ..0000.224042!5 len:9 { "\\math" }
│                              ← StrChunk ..0000.224318!2 len:2 { "}$" }
│                                ← StrChunk ..0000.224061!1 len:0 [1]
│                              → StrChunk ..0000.224126!2 len:2 [2]
│                                ← StrChunk ..0000.225698!2 len:2 { "it" }
│                          → StrChunk ..0000.224325!1 len:16 [1]
│                            ← StrChunk ..0000.224322!3 len:15 { "\\te" }
│                              ← StrChunk ..0000.224320!1 len:6 { "$" }
│                                ← StrChunk ..0000.224049!5 len:5 { "{key}" }
│                              → StrChunk ..0000.231671!1 len:6 { ")" }
│                                ← StrChunk ..0000.224327!5 len:5 { "xttt{" }
│                            → StrChunk ..0000.224062!1 len:1 [1]
│                              ← StrChunk ..0000.224332!1 len:1 { "}" }
│                                ← StrChunk ..0000.224066!1 len:0 [1]
│                              → StrChunk ..0000.93197!1 len:0 [1]
│                                ← StrChunk ..0000.224041!1 len:0 [1]
│                    → StrChunk ..0000.36344!3 len:218 [3]
│                      ← StrChunk ..0000.224137!1 len:95 { "." }
│                        ← StrChunk ..0000.36299!17 len:61 { "{key} \\in \\mathrm" }
│                          ← StrChunk ..0000.36284!3 len:11 { " & " }
│                            ← StrChunk ..0000.36272!11 len:0 [11]
│                              ← StrChunk ..0000.102220!1 len:0 [1]
│                                ← StrChunk ..0000.93198!4 len:0 [4]
│                                → StrChunk ..0000.93202!1 len:0 [1]
│                              → StrChunk ..0000.36283!1 len:0 [1]
│                                ← StrChunk ..0000.93172!1 len:0 [1]
│                            → StrChunk ..0000.224130!2 len:8 [2]
│                              ← StrChunk ..0000.225702!2 len:8 { "it" }
│                                ← StrChunk ..0000.36291!6 len:6 { "$\\math" }
│                              → StrChunk ..0000.36297!2 len:0 [2]
│                                ← StrChunk ..0000.93205!2 len:0 [2]
│                          → StrChunk ..0000.42381!13 len:33 { "\n& $|$ & EXPR" }
│                            ← StrChunk ..0000.36319!3 len:12 [3]
│                              ← StrChunk ..0000.37052!6 len:7 { "String" }
│                                ← StrChunk ..0000.36318!1 len:1 { "{" }
│                              → StrChunk ..0000.36908!1 len:5 { "\\" }
│                                ← StrChunk ..0000.36322!4 len:4 { "}$ \\" }
│                            → StrChunk ..0000.224135!2 len:8 { "tt" }
│                              ← StrChunk ..0000.42395!5 len:5 { "\\text" }
│                                ← StrChunk ..0000.42394!1 len:0 [1]
│                              → StrChunk ..0000.42402!1 len:1 { "{" }
│                                ← StrChunk ..0000.42400!2 len:0 [2]
│                        → StrChunk ..0000.231616!1 len:33 { " " }
│                          ← StrChunk ..0000.231598!1 len:23 { "$" }
│                            ← StrChunk ..0000.231597!1 len:5 { "(" }
│                              ← StrChunk ..0000.231595!2 len:3 [2]
│                                ← StrChunk ..0000.231667!3 len:3 { "idx" }
│                              → StrChunk ..0000.42407!1 len:1 { "}" }
│                                ← StrChunk ..0000.42403!4 len:0 [4]
│                            → StrChunk ..0000.231600!15 len:17 { "$\\texttt{)} & $" }
│                              ← StrChunk ..0000.231599!1 len:1 [1]
│                                ← StrChunk ..0000.232731!1 len:1 { "i" }
│                              → StrChunk ..0000.231615!1 len:1 [1]
│                                ← StrChunk ..0000.232733!1 len:1 { "i" }
│                          → StrChunk ..0000.36512!2 len:9 [2]
│                            ← StrChunk ..0000.42408!3 len:9 { " \\\\" }
│                              ← StrChunk ..0000.231617!3 len:6 [3]
│                                ← StrChunk ..0000.231623!6 len:6 { "\\ge 0$" }
│                              → StrChunk ..0000.36452!22 len:0 [22]
│                                ← StrChunk ..0000.36326!1 len:0 [1]
│                            → StrChunk ..0000.36426!2 len:0 [2]
│                              ← StrChunk ..0000.36327!7 len:0 [7]
│                                ← StrChunk ..0000.36474!10 len:0 [10]
│                              → StrChunk ..0000.224142!2 len:0 [2]
│                                ← StrChunk ..0000.36334!10 len:0 [10]
│                      → StrChunk ..0000.36374!2 len:123 [2]
│                        ← StrChunk ..0000.224145!2 len:50 [2]
│                          ← StrChunk ..0000.36355!1 len:20 { "\n" }
│                            ← StrChunk ..0000.36484!22 len:0 [22]
│                              ← StrChunk ..0000.36347!8 len:0 [8]
│                                ← StrChunk ..0000.224138!1 len:0 [1]
│                              → StrChunk ..0000.36506!3 len:0 [3]
│                                ← StrChunk ..0000.36517!10 len:0 [10]
│                            → StrChunk ..0000.93140!5 len:19 { "\\text" }
│                              ← StrChunk ..0000.93139!1 len:12 [1]
│                                ← StrChunk ..0000.93127!12 len:12 { "& $|$ & EXPR" }
│                              → StrChunk ..0000.93145!1 len:2 [1]
│                                ← StrChunk ..0000.224150!2 len:2 { "tt" }
│                          → StrChunk ..0000.36356!6 len:30 { "& $|$ " }
│                            ← StrChunk ..0000.224139!1 len:11 { "." }
│                              ← StrChunk ..0000.93147!1 len:1 { "{" }
│                                ← StrChunk ..0000.93146!1 len:0 [1]
│                              → StrChunk ..0000.93126!1 len:9 { "\n" }
│                                ← StrChunk ..0000.93148!8 len:8 { "keys} \\\\" }
│                            → StrChunk ..0000.36366!1 len:13 [1]
│                              ← StrChunk ..0000.36362!4 len:6 { "EXPR" }
│                                ← StrChunk ..0000.36428!2 len:2 { "& " }
│                              → StrChunk ..0000.224154!2 len:7 { "tt" }
│                                ← StrChunk ..0000.36369!5 len:5 { "\\text" }
│                        → StrChunk ..0000.36595!1 len:73 { "x" }
│                          ← StrChunk ..0000.36528!3 len:40 { "\\\\\n" }
│                            ← StrChunk ..0000.36377!7 len:24 { "values}" }
│                              ← StrChunk ..0000.224333!1 len:2 { "." }
│                                ← StrChunk ..0000.36376!1 len:1 { "{" }
│                              → StrChunk ..0000.37035!14 len:15 { "\\vspace{0.5em}" }
│                                ← StrChunk ..0000.36527!1 len:1 { " " }
│                            → StrChunk ..0000.36574!7 len:13 [7]
│                              ← StrChunk ..0000.36706!3 len:0 [3]
│                                ← StrChunk ..0000.36531!43 len:0 [43]
│                              → StrChunk ..0000.36594!1 len:13 [1]
│                                ← StrChunk ..0000.36581!13 len:13 { "VAR & ::= & $" }
│                          → StrChunk ..0000.224220!3 len:32 { "Var" }
│                            ← StrChunk ..0000.36658!1 len:19 { " " }
│                              ← StrChunk ..0000.36611!1 len:1 { "$" }
│                                ← StrChunk ..0000.36596!15 len:0 [15]
│                              → StrChunk ..0000.224199!14 len:17 { "x \\in \\mathrm{" }
│                                ← StrChunk ..0000.224173!3 len:3 { "& $" }
│                            → StrChunk ..0000.224179!1 len:10 { "$" }
│                              ← StrChunk ..0000.224176!3 len:7 [3]
│                                ← StrChunk ..0000.224213!7 len:7 { "String}" }
│                              → StrChunk ..0000.36659!2 len:2 { "\\\\" }
│                                ← StrChunk ..0000.36691!14 len:0 [14]
│                  → StrChunk ..0000.37163!1 len:443 [1]
│                    ← StrChunk ..0000.224243!2 len:190 [2]
│                      ← StrChunk ..0000.37160!3 len:67 { "\n& " }
│                        ← StrChunk ..0000.36630!2 len:33 [2]
│                          ← StrChunk ..0000.36632!1 len:21 { "$" }
│                            ← StrChunk ..0000.37173!1 len:7 { "$" }
│                              ← StrChunk ..0000.37172!1 len:3 { "$" }
│                                ← StrChunk ..0000.37123!1 len:1 { " " }
│                                → StrChunk ..0000.37124!1 len:1 { "n" }
│                              → StrChunk ..0000.36624!1 len:3 { " " }
│                                ← StrChunk ..0000.37125!2 len:2 { " &" }
│                            → StrChunk ..0000.37130!1 len:13 [1]
│                              ← StrChunk ..0000.37132!3 len:6 { "in " }
│                                ← StrChunk ..0000.37127!3 len:3 { "n \\" }
│                              → StrChunk ..0000.63764!2 len:7 { "rm" }
│                                ← StrChunk ..0000.36625!5 len:5 { "\\math" }
│                          → StrChunk ..0000.36713!2 len:12 [2]
│                            ← StrChunk ..0000.36634!1 len:8 [1]
│                              ← StrChunk ..0000.63767!6 len:7 { "Number" }
│                                ← StrChunk ..0000.36633!1 len:1 { "{" }
│                              → StrChunk ..0000.36636!1 len:1 [1]
│                                ← StrChunk ..0000.36635!1 len:1 { "}" }
│                            → StrChunk ..0000.36641!16 len:4 [16]
│                              ← StrChunk ..0000.36715!2 len:0 [2]
│                                ← StrChunk ..0000.36637!4 len:0 [4]
│                              → StrChunk ..0000.37202!3 len:4 { " \\\\" }
│                                ← StrChunk ..0000.36657!1 len:1 { "$" }
│                        → StrChunk ..0000.224240!1 len:31 { "$" }
│                          ← StrChunk ..0000.224236!2 len:19 [2]
│                            ← StrChunk ..0000.37351!1 len:14 { "\\" }
│                              ← StrChunk ..0000.224239!1 len:7 { "$" }
│                                ← StrChunk ..0000.37165!6 len:6 { "$|$ & " }
│                              → StrChunk ..0000.225710!2 len:6 { "it" }
│                                ← StrChunk ..0000.224232!4 len:4 { "math" }
│                            → StrChunk ..0000.37369!3 len:5 { "str" }
│                              ← StrChunk ..0000.37352!6 len:1 [6]
│                                ← StrChunk ..0000.224238!1 len:1 { "{" }
│                              → StrChunk ..0000.224224!1 len:1 { "}" }
│                                ← StrChunk ..0000.37374!1 len:0 [1]
│                          → StrChunk ..0000.37175!1 len:11 [1]
│                            ← StrChunk ..0000.37359!1 len:1 { " " }
│                              ← StrChunk ..0000.37358!1 len:0 [1]
│                                ← StrChunk ..0000.37372!1 len:0 [1]
│                              → StrChunk ..0000.37171!1 len:0 [1]
│                                ← StrChunk ..0000.37174!1 len:0 [1]
│                            → StrChunk ..0000.37177!3 len:10 { "& $" }
│                              ← StrChunk ..0000.37176!1 len:0 [1]
│                                ← StrChunk ..0000.37360!9 len:0 [9]
│                              → StrChunk ..0000.225706!2 len:7 { "it" }
│                                ← StrChunk ..0000.37388!5 len:5 { "\\math" }
│                      → StrChunk ..0000.63821!4 len:123 { "null" }
│                        ← StrChunk ..0000.63793!6 len:83 { " $|$ \\" }
│                          ← StrChunk ..0000.63773!10 len:51 { "\n& $|$ & \\" }
│                            ← StrChunk ..0000.37396!3 len:29 { "tr}" }
│                              ← StrChunk ..0000.37395!1 len:2 { "{" }
│                                ← StrChunk ..0000.37393!2 len:0 [2]
│                                → StrChunk ..0000.37180!1 len:1 { "s" }
│                              → StrChunk ..0000.37205!3 len:24 { " \\\\" }
│                                ← StrChunk ..0000.37181!21 len:21 { " \\in \\mathrm{String}$" }
│                            → StrChunk ..0000.63788!4 len:12 { "true" }
│                              ← StrChunk ..0000.63783!5 len:7 [5]
│                                ← StrChunk ..0000.224250!7 len:7 { "texttt{" }
│                              → StrChunk ..0000.63792!1 len:1 [1]
│                                ← StrChunk ..0000.224258!1 len:1 { "}" }
│                          → StrChunk ..0000.63813!1 len:26 [1]
│                            ← StrChunk ..0000.63799!5 len:13 [5]
│                              ← StrChunk ..0000.224270!1 len:7 { "{" }
│                                ← StrChunk ..0000.224263!6 len:6 { "texttt" }
│                              → StrChunk ..0000.224272!1 len:6 { "}" }
│                                ← StrChunk ..0000.63804!5 len:5 { "false" }
│                            → StrChunk ..0000.224277!6 len:13 { "texttt" }
│                              ← StrChunk ..0000.63814!2 len:6 { " \\" }
│                                ← StrChunk ..0000.63809!4 len:4 { " $|$" }
│                              → StrChunk ..0000.63816!5 len:1 [5]
│                                ← StrChunk ..0000.224284!1 len:1 { "{" }
│                        → StrChunk ..0000.37333!1 len:36 { " " }
│                          ← StrChunk ..0000.37222!4 len:26 [4]
│                            ← StrChunk ..0000.63825!3 len:22 { " \\\\" }
│                              ← StrChunk ..0000.63828!1 len:1 [1]
│                                ← StrChunk ..0000.224286!1 len:1 { "}" }
│                              → StrChunk ..0000.37309!8 len:18 { "verb|{}|" }
│                                ← StrChunk ..0000.37208!10 len:10 { "\n& $|$ & \\" }
│                            → StrChunk ..0000.37239!1 len:4 { " " }
│                              ← StrChunk ..0000.37226!13 len:0 [13]
│                                ← StrChunk ..0000.37291!2 len:0 [2]
│                              → StrChunk ..0000.37245!2 len:3 [2]
│                                ← StrChunk ..0000.37242!3 len:3 { "$|$" }
│                          → StrChunk ..0000.37280!4 len:9 [4]
│                            ← StrChunk ..0000.37247!1 len:9 [1]
│                              ← StrChunk ..0000.37334!4 len:9 [4]
│                                ← StrChunk ..0000.37342!9 len:9 { "\\verb|[]|" }
│                              → StrChunk ..0000.37295!2 len:0 [2]
│                                ← StrChunk ..0000.37274!6 len:0 [6]
│                            → StrChunk ..0000.37248!13 len:0 [13]
│                              ← StrChunk ..0000.37284!3 len:0 [3]
│                                ← StrChunk ..0000.37287!2 len:0 [2]
│                              → StrChunk ..0000.37218!2 len:0 [2]
│                                ← StrChunk ..0000.37240!1 len:0 [1]
│                    → StrChunk ..0000.39182!1 len:253 [1]
│                      ← StrChunk ..0000.39132!1 len:154 [1]
│                        ← StrChunk ..0000.35960!8 len:154 [8]
│                          ← StrChunk ..0000.36077!1 len:114 [1]
│                            ← StrChunk ..0000.36287!2 len:0 [2]
│                              ← StrChunk ..0000.36367!1 len:0 [1]
│                                ← StrChunk ..0000.36384!1 len:0 [1]
│                                → StrChunk ..0000.36316!1 len:0 [1]
│                              → StrChunk ..0000.36080!2 len:0 [2]
│                                ← StrChunk ..0000.36188!1 len:0 [1]
│                            → StrChunk ..0000.35976!33 len:114 { "querying and modifying a documen" … }
│                              ← StrChunk ..0000.35919!41 len:55 { "\n\\caption{Syntax of command lang" … }
│                                ← StrChunk ..0000.36050!14 len:14 { "\n\\end{tabular}" }
│                              → StrChunk ..0000.36009!25 len:26 { "}\\label{fig:local-syntax}" }
│                                ← StrChunk ..0000.154748!1 len:1 { "." }
│                          → StrChunk ..0000.38974!14 len:40 [14]
│                            ← StrChunk ..0000.38915!19 len:40 [19]
│                              ← StrChunk ..0000.38777!27 len:40 { "\n\n\\begin{figure}\n\\centering" }
│                                ← StrChunk ..0000.35906!13 len:13 { "\n\\end{figure}" }
│                              → StrChunk ..0000.39133!1 len:0 [1]
│                                ← StrChunk ..0000.38948!26 len:0 [26]
│                            → StrChunk ..0000.38993!1 len:0 [1]
│                              ← StrChunk ..0000.38988!1 len:0 [1]
│                                ← StrChunk ..0000.38989!4 len:0 [4]
│                              → StrChunk ..0000.39029!16 len:0 [16]
│                                ← StrChunk ..0000.39012!15 len:0 [15]
│                        → StrChunk ..0000.39134!1 len:0 [1]
│                          ← StrChunk ..0000.39093!1 len:0 [1]
│                            ← StrChunk ..0000.39095!14 len:0 [14]
│                              ← StrChunk ..0000.39086!7 len:0 [7]
│                                ← StrChunk ..0000.39045!3 len:0 [3]
│                              → StrChunk ..0000.39109!5 len:0 [5]
│                                ← StrChunk ..0000.39119!8 len:0 [8]
│                            → StrChunk ..0000.39128!1 len:0 [1]
│                              ← StrChunk ..0000.39072!13 len:0 [13]
│                                ← StrChunk ..0000.39048!22 len:0 [22]
│                              → StrChunk ..0000.39129!2 len:0 [2]
│                                ← StrChunk ..0000.39131!1 len:0 [1]
│                          → StrChunk ..0000.39353!7 len:0 [7]
│                            ← StrChunk ..0000.39327!4 len:0 [4]
│                              ← StrChunk ..0000.39135!8 len:0 [8]
│                                ← StrChunk ..0000.39310!13 len:0 [13]
│                              → StrChunk ..0000.39331!18 len:0 [18]
│                                ← StrChunk ..0000.39143!5 len:0 [5]
│                            → StrChunk ..0000.39349!2 len:0 [2]
│                              ← StrChunk ..0000.39360!1 len:0 [1]
│                                ← StrChunk ..0000.39362!13 len:0 [13]
│                              → StrChunk ..0000.39173!1 len:0 [1]
│                                ← StrChunk ..0000.39148!23 len:0 [23]
│                      → StrChunk ..0000.39471!1 len:99 { "\n" }
│                        ← StrChunk ..0000.39027!1 len:55 [1]
│                          ← StrChunk ..0000.39239!2 len:0 [2]
│                            ← StrChunk ..0000.39186!14 len:0 [14]
│                              ← StrChunk ..0000.39183!2 len:0 [2]
│                                ← StrChunk ..0000.39174!4 len:0 [4]
│                              → StrChunk ..0000.39200!35 len:0 [35]
│                                ← StrChunk ..0000.39448!4 len:0 [4]
│                            → StrChunk ..0000.39171!1 len:0 [1]
│                              ← StrChunk ..0000.39178!2 len:0 [2]
│                                ← StrChunk ..0000.39235!2 len:0 [2]
│                              → StrChunk ..0000.39070!1 len:0 [1]
│                                ← StrChunk ..0000.39085!1 len:0 [1]
│                          → StrChunk ..0000.39254!1 len:55 { "\n" }
│                            ← StrChunk ..0000.38995!4 len:0 [4]
│                              ← StrChunk ..0000.39003!4 len:0 [4]
│                                ← StrChunk ..0000.38994!1 len:0 [1]
│                              → StrChunk ..0000.39241!13 len:0 [13]
│                                ← StrChunk ..0000.38934!14 len:0 [14]
│                            → StrChunk ..0000.39899!1 len:54 { ":" }
│                              ← StrChunk ..0000.39461!5 len:21 { "\ndoc " }
│                                ← StrChunk ..0000.39257!16 len:16 { "\\begin{verbatim}" }
│                              → StrChunk ..0000.234150!27 len:32 { "\ndoc.get(\"shopping\") := [];" }
│                                ← StrChunk ..0000.39466!5 len:5 { "= {};" }
│                        → StrChunk ..0000.39492!1 len:43 [1]
│                          ← StrChunk ..0000.231691!5 len:30 { ".get(" }
│                            ← StrChunk ..0000.39861!4 len:14 [4]
│                              ← StrChunk ..0000.231676!4 len:8 { "head" }
│                                ← StrChunk ..0000.39857!4 len:4 { "let " }
│                              → StrChunk ..0000.39472!3 len:6 { "doc" }
│                                ← StrChunk ..0000.39865!3 len:3 { " = " }
│                            → StrChunk ..0000.39480!10 len:11 { "\"shopping\"" }
│                              ← StrChunk ..0000.39475!5 len:0 [5]
│                                ← StrChunk ..0000.93178!1 len:0 [1]
│                              → StrChunk ..0000.93180!1 len:1 [1]
│                                ← StrChunk ..0000.231697!1 len:1 { ")" }
│                          → StrChunk ..0000.39868!5 len:13 [5]
│                            ← StrChunk ..0000.42377!4 len:8 [4]
│                              ← StrChunk ..0000.231684!6 len:7 { "idx(0)" }
│                                ← StrChunk ..0000.41272!1 len:1 { "." }
│                              → StrChunk ..0000.39901!1 len:1 { ";" }
│                                ← StrChunk ..0000.41273!4 len:0 [4]
│                            → StrChunk ..0000.39494!5 len:5 [5]
│                              ← StrChunk ..0000.39900!1 len:0 [1]
│                                ← StrChunk ..0000.39493!1 len:0 [1]
│                              → StrChunk ..0000.231702!4 len:5 { "head" }
│                                ← StrChunk ..0000.39499!1 len:1 { "\n" }
│            → StrChunk ..0000.54670!3 len:12426 [3]
│              ← StrChunk ..0000.234136!7 len:4164 [7]
│                ← StrChunk ..0000.38550!1 len:3453 { " " }
│                  ← StrChunk ..0000.55130!1 len:1993 [1]
│                    ← StrChunk ..0000.37413!16 len:1414 [16]
│                      ← StrChunk ..0000.39567!1 len:290 { "\n" }
│                        ← StrChunk ..0000.231715!26 len:88 { "doc.get(\"shopping\").idx(1)" }
│                          ← StrChunk ..0000.39537!10 len:33 { "(\"eggs\");\n" }
│                            ← StrChunk ..0000.39511!19 len:12 [19]
│                              ← StrChunk ..0000.39504!7 len:0 [7]
│                                ← StrChunk ..0000.39873!1 len:0 [1]
│                                → StrChunk ..0000.39894!4 len:0 [4]
│                              → StrChunk ..0000.248945!5 len:12 { "After" }
│                                ← StrChunk ..0000.39530!7 len:7 { ".insert" }
│                            → StrChunk ..0000.234181!4 len:11 [4]
│                              ← StrChunk ..0000.249130!4 len:8 { "eggs" }
│                                ← StrChunk ..0000.62795!4 len:4 { "let " }
│                              → StrChunk ..0000.62803!3 len:3 { " = " }
│                                ← StrChunk ..0000.62799!4 len:0 [4]
│                          → StrChunk ..0000.40148!1 len:29 { "\n" }
│                            ← StrChunk ..0000.62794!1 len:1 [1]
│                              ← StrChunk ..0000.62815!1 len:1 { ";" }
│                                ← StrChunk ..0000.62806!9 len:0 [9]
│                              → StrChunk ..0000.39547!20 len:0 [20]
│                                ← StrChunk ..0000.234189!4 len:0 [4]
│                            → StrChunk ..0000.40153!7 len:27 { ".insert" }
│                              ← StrChunk ..0000.40149!4 len:4 [4]
│                                ← StrChunk ..0000.231745!4 len:4 { "head" }
│                              → StrChunk ..0000.40160!11 len:16 { "(\"cheese\");" }
│                                ← StrChunk ..0000.248950!5 len:5 { "After" }
│                        → StrChunk ..0000.53705!78 len:201 [78]
│                          ← StrChunk ..0000.39568!16 len:83 { "\n// Final state:" }
│                            ← StrChunk ..0000.234197!7 len:26 { ".insert" }
│                              ← StrChunk ..0000.234193!4 len:4 [4]
│                                ← StrChunk ..0000.249138!4 len:4 { "eggs" }
│                              → StrChunk ..0000.234204!10 len:15 { "(\"milk\");\n" }
│                                ← StrChunk ..0000.248955!5 len:5 { "After" }
│                            → StrChunk ..0000.40171!10 len:41 { "\"cheese\", " }
│                              ← StrChunk ..0000.39288!15 len:15 { "\n{\"shopping\": [" }
│                                ← StrChunk ..0000.39490!1 len:0 [1]
│                              → StrChunk ..0000.39452!9 len:16 { " \"milk\"]}" }
│                                ← StrChunk ..0000.39303!7 len:7 { "\"eggs\"," }
│                          → StrChunk ..0000.38825!56 len:118 { "Example of programmatically cons" … }
│                            ← StrChunk ..0000.39273!15 len:25 { "\n\\end{verbatim}" }
│                              ← StrChunk ..0000.53783!1 len:0 [1]
│                                ← StrChunk ..0000.53785!2 len:0 [2]
│                              → StrChunk ..0000.38804!10 len:10 { "\n\\caption{" }
│                                ← StrChunk ..0000.39255!1 len:0 [1]
│                            → StrChunk ..0000.37399!2 len:37 { "\n\n" }
│                              ← StrChunk ..0000.38881!34 len:35 { "}\\label{fig:make-doc}\n\\end{figur" … }
│                                ← StrChunk ..0000.154749!1 len:1 { "." }
│                              → StrChunk ..0000.102251!20 len:0 [20]
│                                ← StrChunk ..0000.37401!12 len:0 [12]
│                      → StrChunk ..0000.37435!76 len:1124 { "he syntax of the command languag" … }
│                        ← StrChunk ..0000.227839!12 len:541 { "immediately " }
│                          ← StrChunk ..0000.102429!21 len:417 { ", and which allows th" }
│                            ← StrChunk ..0000.102273!151 len:159 { "To define the semantics for coll" … }
│                              ← StrChunk ..0000.37429!1 len:0 [1]
│                                ← StrChunk ..0000.96051!13 len:0 [13]
│                                → StrChunk ..0000.102271!2 len:0 [2]
│                              → StrChunk ..0000.102424!5 len:8 [5]
│                                ← StrChunk ..0000.154143!8 len:8 { "replicas" }
│                            → StrChunk ..0000.102497!4 len:237 [4]
│                              ← StrChunk ..0000.154155!7 len:10 { "replica" }
│                                ← StrChunk ..0000.102494!3 len:3 { "at " }
│                              → StrChunk ..0000.102553!177 len:227 { "dified. Performing read-only que" … }
│                                ← StrChunk ..0000.102501!50 len:50 { "'s local copy of the document to" … }
│                          → StrChunk ..0000.102822!1 len:112 { "." }
│                            ← StrChunk ..0000.102794!23 len:108 { " broadcasting to other " }
│                              ← StrChunk ..0000.227824!13 len:77 { " asynchronous" }
│                                ← StrChunk ..0000.102730!64 len:64 { "applied to the local copy of the" … }
│                              → StrChunk ..0000.102817!5 len:8 [5]
│                                ← StrChunk ..0000.154167!8 len:8 { "replicas" }
│                            → StrChunk ..0000.37430!1 len:3 { "\n" }
│                              ← StrChunk ..0000.102450!22 len:0 [22]
│                                ← StrChunk ..0000.102551!1 len:0 [1]
│                              → StrChunk ..0000.37431!2 len:2 { "\nT" }
│                                ← StrChunk ..0000.227837!1 len:0 [1]
│                        → StrChunk ..0000.55409!7 len:507 { "assume " }
│                          ← StrChunk ..0000.55254!7 len:286 { "program" }
│                            ← StrChunk ..0000.95238!1 len:135 [1]
│                              ← StrChunk ..0000.55133!96 len:115 { "rogramming language, but rather " … }
│                                ← StrChunk ..0000.55106!19 len:19 { " It is not a full p" }
│                              → StrChunk ..0000.55249!5 len:20 [5]
│                                ← StrChunk ..0000.55229!20 len:20 { " We assume that the " }
│                            → StrChunk ..0000.55271!42 len:144 { "a (possibly infinite) sequence o" … }
│                              ← StrChunk ..0000.55261!8 len:31 { " issues " }
│                                ← StrChunk ..0000.55322!23 len:23 { " accepts user input and" }
│                              → StrChunk ..0000.55421!7 len:71 { "do not " }
│                                ← StrChunk ..0000.55345!64 len:64 { " to the API. We model only the s" … }
│                          → StrChunk ..0000.95332!95 len:214 { "found in many programming langua" … }
│                            ← StrChunk ..0000.95285!39 len:119 { "API differs slightly from the JS" … }
│                              ← StrChunk ..0000.95240!5 len:74 { " The " }
│                                ← StrChunk ..0000.55432!69 len:69 { "anything about the program in wh" … }
│                              → StrChunk ..0000.95325!6 len:6 { "aries " }
│                                ← StrChunk ..0000.95324!1 len:0 [1]
│                            → StrChunk ..0000.55313!2 len:0 [2]
│                              ← StrChunk ..0000.55416!5 len:0 [5]
│                                ← StrChunk ..0000.95245!20 len:0 [20]
│                              → StrChunk ..0000.55125!1 len:0 [1]
│                                ← StrChunk ..0000.55269!1 len:0 [1]
│                    → StrChunk ..0000.95587!1 len:579 { " " }
│                      ← StrChunk ..0000.38003!12 len:425 [12]
│                        ← StrChunk ..0000.38698!77 len:120 { "We first explain the language in" … }
│                          ← StrChunk ..0000.37724!45 len:2 [45]
│                            ← StrChunk ..0000.37590!22 len:0 [22]
│                              ← StrChunk ..0000.37511!79 len:0 [79]
│                                ← StrChunk ..0000.55126!2 len:0 [2]
│                                → StrChunk ..0000.37690!16 len:0 [16]
│                              → StrChunk ..0000.37706!12 len:0 [12]
│                                ← StrChunk ..0000.37620!41 len:0 [41]
│                            → StrChunk ..0000.37781!37 len:2 [37]
│                              ← StrChunk ..0000.37769!9 len:0 [9]
│                                ← StrChunk ..0000.37778!3 len:0 [3]
│                              → StrChunk ..0000.37919!2 len:2 { "\n\n" }
│                                ← StrChunk ..0000.37830!89 len:0 [89]
│                          → StrChunk ..0000.37984!4 len:41 [4]
│                            ← StrChunk ..0000.37924!29 len:5 [29]
│                              ← StrChunk ..0000.37921!3 len:4 { "The" }
│                                ← StrChunk ..0000.38697!1 len:1 { " " }
│                              → StrChunk ..0000.38102!1 len:1 { " " }
│                                ← StrChunk ..0000.37963!21 len:0 [21]
│                            → StrChunk ..0000.38103!1 len:36 [1]
│                              ← StrChunk ..0000.38165!10 len:20 { " construct" }
│                                ← StrChunk ..0000.37988!10 len:10 { "expression" }
│                              → StrChunk ..0000.38182!11 len:16 { " is used to" }
│                                ← StrChunk ..0000.37998!5 len:5 { " EXPR" }
│                        → StrChunk ..0000.38368!6 len:305 { "{let} " }
│                          ← StrChunk ..0000.224349!2 len:243 { "tt" }
│                            ← StrChunk ..0000.95427!8 len:128 [8]
│                              ← StrChunk ..0000.38015!27 len:0 [27]
│                                ← StrChunk ..0000.38107!1 len:0 [1]
│                              → StrChunk ..0000.38193!58 len:128 { ". An expression starts with eith" … }
│                                ← StrChunk ..0000.95435!70 len:70 { " construct a \\emph{cursor} which" … }
│                            → StrChunk ..0000.38361!5 len:113 { "\\text" }
│                              ← StrChunk ..0000.38253!106 len:106 { "{doc}, identifying the root of t" … }
│                                ← StrChunk ..0000.38251!2 len:0 [2]
│                              → StrChunk ..0000.38366!2 len:2 [2]
│                                ← StrChunk ..0000.224353!2 len:2 { "tt" }
│                          → StrChunk ..0000.224628!1 len:56 { "," }
│                            ← StrChunk ..0000.224612!5 len:46 { ", lef" }
│                              ← StrChunk ..0000.224566!22 len:31 { "The expression defines" }
│                                ← StrChunk ..0000.38386!9 len:9 { "command. " }
│                              → StrChunk ..0000.224629!1 len:10 { "t" }
│                                ← StrChunk ..0000.224619!9 len:9 { "t to righ" }
│                            → StrChunk ..0000.95554!32 len:9 [32]
│                              ← StrChunk ..0000.224588!9 len:9 { " the path" }
│                                ← StrChunk ..0000.224617!1 len:0 [1]
│                              → StrChunk ..0000.95586!1 len:0 [1]
│                                ← StrChunk ..0000.38395!14 len:0 [14]
│                      → StrChunk ..0000.95653!6 len:153 [6]
│                        ← StrChunk ..0000.224701!10 len:96 { "the leaves" }
│                          ← StrChunk ..0000.224611!1 len:58 { "s" }
│                            ← StrChunk ..0000.224604!6 len:31 { " as it" }
│                              ← StrChunk ..0000.224599!5 len:16 { "takes" }
│                                ← StrChunk ..0000.95589!11 len:11 { "the cursor " }
│                                → StrChunk ..0000.224630!20 len:0 [20]
│                              → StrChunk ..0000.95602!9 len:9 { " navigate" }
│                                ← StrChunk ..0000.95600!2 len:0 [2]
│                            → StrChunk ..0000.224670!1 len:26 { " " }
│                              ← StrChunk ..0000.95612!17 len:17 { " through the tree" }
│                                ← StrChunk ..0000.95611!1 len:0 [1]
│                              → StrChunk ..0000.224686!7 len:8 { "owards " }
│                                ← StrChunk ..0000.224683!1 len:1 { "t" }
│                          → StrChunk ..0000.38474!2 len:28 { ": " }
│                            ← StrChunk ..0000.224671!6 len:0 [6]
│                              ← StrChunk ..0000.224684!1 len:0 [1]
│                                ← StrChunk ..0000.224693!4 len:0 [4]
│                              → StrChunk ..0000.38462!12 len:0 [12]
│                                ← StrChunk ..0000.38409!35 len:0 [35]
│                            → StrChunk ..0000.95643!10 len:26 { "operator \\" }
│                              ← StrChunk ..0000.95633!10 len:4 [10]
│                                ← StrChunk ..0000.95629!4 len:4 { "the " }
│                              → StrChunk ..0000.247775!5 len:12 { ".get(" }
│                                ← StrChunk ..0000.224360!7 len:7 { "texttt{" }
│                        → StrChunk ..0000.224384!8 len:57 { "\\texttt{" }
│                          ← StrChunk ..0000.224371!1 len:15 [1]
│                            ← StrChunk ..0000.225714!2 len:10 { "it" }
│                              ← StrChunk ..0000.224373!5 len:7 { "\\math" }
│                                ← StrChunk ..0000.224367!2 len:2 { "}$" }
│                              → StrChunk ..0000.224380!1 len:1 { "{" }
│                                ← StrChunk ..0000.224378!2 len:0 [2]
│                            → StrChunk ..0000.95660!3 len:5 { "key" }
│                              ← StrChunk ..0000.95659!1 len:0 [1]
│                                ← StrChunk ..0000.224369!1 len:0 [1]
│                              → StrChunk ..0000.224394!1 len:2 { "$" }
│                                ← StrChunk ..0000.224383!1 len:1 { "}" }
│                          → StrChunk ..0000.38504!2 len:34 [2]
│                            ← StrChunk ..0000.224392!1 len:2 { "}" }
│                              ← StrChunk ..0000.95663!2 len:1 [2]
│                                ← StrChunk ..0000.247781!1 len:1 { ")" }
│                              → StrChunk ..0000.38476!26 len:0 [26]
│                                ← StrChunk ..0000.95665!1 len:0 [1]
│                            → StrChunk ..0000.38549!1 len:32 { "," }
│                              ← StrChunk ..0000.38533!16 len:27 [16]
│                                ← StrChunk ..0000.38506!27 len:27 { " selects a key within a map" }
│                              → StrChunk ..0000.247786!1 len:4 [1]
│                                ← StrChunk ..0000.247782!4 len:4 { " and" }
│                  → StrChunk ..0000.40181!4 len:1459 { "the " }
│                    ← StrChunk ..0000.57512!6 len:742 { "of the" }
│                      ← StrChunk ..0000.95700!1 len:418 { "." }
│                        ← StrChunk ..0000.247832!1 len:72 [1]
│                          ← StrChunk ..0000.42423!1 len:45 { "}" }
│                            ← StrChunk ..0000.42418!1 len:13 { "{" }
│                              ← StrChunk ..0000.224397!2 len:7 { "tt" }
│                                ← StrChunk ..0000.42411!5 len:5 { "\\text" }
│                                → StrChunk ..0000.42416!2 len:0 [2]
│                              → StrChunk ..0000.42419!4 len:5 [4]
│                                ← StrChunk ..0000.247792!5 len:5 { ".idx(" }
│                            → StrChunk ..0000.247834!1 len:31 { "e" }
│                              ← StrChunk ..0000.247818!14 len:15 { "n$\\texttt{)} s" }
│                                ← StrChunk ..0000.247797!1 len:1 { "$" }
│                              → StrChunk ..0000.247835!1 len:15 [1]
│                                ← StrChunk ..0000.247837!15 len:15 { "lects the $n$th" }
│                          → StrChunk ..0000.95695!4 len:27 [4]
│                            ← StrChunk ..0000.42425!23 len:1 [23]
│                              ← StrChunk ..0000.42424!1 len:1 { " " }
│                                ← StrChunk ..0000.247798!10 len:0 [10]
│                              → StrChunk ..0000.42448!14 len:0 [14]
│                                ← StrChunk ..0000.57511!1 len:0 [1]
│                            → StrChunk ..0000.224401!2 len:26 [2]
│                              ← StrChunk ..0000.38553!5 len:0 [5]
│                                ← StrChunk ..0000.42462!2 len:0 [2]
│                              → StrChunk ..0000.38585!26 len:26 { "element of an ordered list" }
│                                ← StrChunk ..0000.38558!27 len:0 [27]
│                        → StrChunk ..0000.93256!4 len:345 { " map" }
│                          ← StrChunk ..0000.93213!6 len:276 { " \\text" }
│                            ← StrChunk ..0000.248032!1 len:231 { "." }
│                              ← StrChunk ..0000.248985!51 len:157 { " (a virtual position before the " … }
│                                ← StrChunk ..0000.247926!106 len:106 { " Lists are indexed starting from" … }
│                              → StrChunk ..0000.38611!1 len:73 [1]
│                                ← StrChunk ..0000.95701!73 len:73 { "\n\nThe expression construct EXPR " … }
│                            → StrChunk ..0000.93221!34 len:39 { "{keys} returns the set of keys i" … }
│                              ← StrChunk ..0000.93219!2 len:2 [2]
│                                ← StrChunk ..0000.224405!2 len:2 { "tt" }
│                              → StrChunk ..0000.93255!1 len:3 [1]
│                                ← StrChunk ..0000.95775!3 len:3 { "the" }
│                          → StrChunk ..0000.38624!9 len:65 { "{values} " }
│                            ← StrChunk ..0000.38612!10 len:35 { " and \\text" }
│                              ← StrChunk ..0000.93260!1 len:23 { "," }
│                                ← StrChunk ..0000.95778!22 len:22 { " at the current cursor" }
│                              → StrChunk ..0000.38622!2 len:2 [2]
│                                ← StrChunk ..0000.224409!2 len:2 { "tt" }
│                            → StrChunk ..0000.38660!5 len:21 [5]
│                              ← StrChunk ..0000.225723!8 len:20 { "contents" }
│                                ← StrChunk ..0000.38648!12 len:12 { "returns the " }
│                              → StrChunk ..0000.38665!1 len:1 { " " }
│                                ← StrChunk ..0000.225716!1 len:0 [1]
│                      → StrChunk ..0000.57575!12 len:318 { " map or list" }
│                        ← StrChunk ..0000.38053!23 len:102 [23]
│                          ← StrChunk ..0000.38502!1 len:43 [1]
│                            ← StrChunk ..0000.38666!14 len:43 { "at the current" }
│                              ← StrChunk ..0000.57518!10 len:22 { " register " }
│                                ← StrChunk ..0000.225731!12 len:12 { " multi-value" }
│                                → StrChunk ..0000.57528!11 len:0 [11]
│                              → StrChunk ..0000.38551!1 len:7 [1]
│                                ← StrChunk ..0000.95800!7 len:7 { " cursor" }
│                            → StrChunk ..0000.38359!1 len:0 [1]
│                              ← StrChunk ..0000.38374!6 len:0 [6]
│                                ← StrChunk ..0000.38444!9 len:0 [9]
│                              → StrChunk ..0000.38112!2 len:0 [2]
│                                ← StrChunk ..0000.38042!11 len:0 [11]
│                          → StrChunk ..0000.224413!2 len:59 { "tt" }
│                            ← StrChunk ..0000.38696!1 len:8 { "." }
│                              ← StrChunk ..0000.38076!10 len:0 [10]
│                                ← StrChunk ..0000.38681!3 len:0 [3]
│                              → StrChunk ..0000.57599!4 len:7 { "text" }
│                                ← StrChunk ..0000.57539!3 len:3 { " (\\" }
│                            → StrChunk ..0000.95839!25 len:49 { "if the cursor refers to a" }
│                              ← StrChunk ..0000.57548!24 len:24 { "{values} is not defined " }
│                                ← StrChunk ..0000.57542!6 len:0 [6]
│                              → StrChunk ..0000.57572!3 len:0 [3]
│                                ← StrChunk ..0000.95864!1 len:0 [1]
│                        → StrChunk ..0000.40073!34 len:204 { "nt. A document can be modified b" … }
│                          ← StrChunk ..0000.224417!2 len:147 { "tt" }
│                            ← StrChunk ..0000.38775!2 len:66 { "\n\n" }
│                              ← StrChunk ..0000.57593!2 len:2 { ".)" }
│                                ← StrChunk ..0000.57587!6 len:0 [6]
│                              → StrChunk ..0000.39962!4 len:62 { "text" }
│                                ← StrChunk ..0000.39902!58 len:58 { "A command CMD either sets the va" … }
│                            → StrChunk ..0000.224421!2 len:79 { "tt" }
│                              ← StrChunk ..0000.39968!45 len:45 { "{let}), performs network communi" … }
│                                ← StrChunk ..0000.39966!2 len:0 [2]
│                              → StrChunk ..0000.40015!32 len:32 { "{yield}), or modifies the docume" }
│                                ← StrChunk ..0000.40013!2 len:0 [2]
│                          → StrChunk ..0000.40228!1 len:23 [1]
│                            ← StrChunk ..0000.40129!1 len:21 { " " }
│                              ← StrChunk ..0000.40107!22 len:10 [22]
│                                ← StrChunk ..0000.248303!10 len:10 { "writing to" }
│                              → StrChunk ..0000.40130!4 len:10 [4]
│                                ← StrChunk ..0000.57639!10 len:10 { "a register" }
│                            → StrChunk ..0000.40134!6 len:2 [6]
│                              ← StrChunk ..0000.40229!6 len:0 [6]
│                                ← StrChunk ..0000.40241!5 len:0 [5]
│                              → StrChunk ..0000.40142!6 len:2 [6]
│                                ← StrChunk ..0000.40140!2 len:2 { " (" }
│                    → StrChunk ..0000.95910!54 len:713 [54]
│                      ← StrChunk ..0000.248060!1 len:394 { " " }
│                        ← StrChunk ..0000.40276!2 len:166 [2]
│                          ← StrChunk ..0000.248317!7 len:126 { "assigns" }
│                            ← StrChunk ..0000.40205!2 len:21 { ":=" }
│                              ← StrChunk ..0000.40196!9 len:17 { "operator " }
│                                ← StrChunk ..0000.40185!11 len:0 [11]
│                                → StrChunk ..0000.224423!8 len:8 { "\\texttt{" }
│                              → StrChunk ..0000.248225!1 len:2 { " " }
│                                ← StrChunk ..0000.224431!1 len:1 { "}" }
│                            → StrChunk ..0000.40207!15 len:98 { "), by inserting" }
│                              ← StrChunk ..0000.248230!51 len:51 { " the value of the register ident" … }
│                                ← StrChunk ..0000.248226!4 len:0 [4]
│                              → StrChunk ..0000.224434!2 len:32 { "tt" }
│                                ← StrChunk ..0000.40246!30 len:30 { " an element into a list (\\text" }
│                          → StrChunk ..0000.248960!5 len:40 { "After" }
│                            ← StrChunk ..0000.40281!1 len:7 { "n" }
│                              ← StrChunk ..0000.40280!1 len:2 [1]
│                                ← StrChunk ..0000.40278!2 len:2 { "{i" }
│                              → StrChunk ..0000.40282!3 len:4 { "ert" }
│                                ← StrChunk ..0000.40288!1 len:1 { "s" }
│                            → StrChunk ..0000.248324!6 len:28 [6]
│                              ← StrChunk ..0000.248033!22 len:23 { " places a new element " }
│                                ← StrChunk ..0000.40285!1 len:1 { "}" }
│                              → StrChunk ..0000.248330!1 len:5 [1]
│                                ← StrChunk ..0000.248055!5 len:5 { "after" }
│                        → StrChunk ..0000.63713!3 len:227 { "or " }
│                          ← StrChunk ..0000.248065!8 len:117 [8]
│                            ← StrChunk ..0000.248061!3 len:25 [3]
│                              ← StrChunk ..0000.248363!2 len:3 [2]
│                                ← StrChunk ..0000.249038!3 len:3 { "the" }
│                              → StrChunk ..0000.248339!21 len:22 { "existing list element" }
│                                ← StrChunk ..0000.248064!1 len:1 { " " }
│                            → StrChunk ..0000.248126!31 len:92 { "} inserts at the head of a list" }
│                              ← StrChunk ..0000.248972!5 len:58 { "After" }
│                                ← StrChunk ..0000.248073!53 len:53 { " identified by the cursor, and \\" … }
│                              → StrChunk ..0000.40289!2 len:3 { ", " }
│                                ← StrChunk ..0000.40286!1 len:1 { ")" }
│                          → StrChunk ..0000.248176!32 len:107 { "element identified by the cursor" }
│                            ← StrChunk ..0000.40343!2 len:73 [2]
│                              ← StrChunk ..0000.224438!2 len:52 { "tt" }
│                                ← StrChunk ..0000.40291!50 len:50 { "by deleting an element from a li" … }
│                              → StrChunk ..0000.248157!13 len:21 { " removes the " }
│                                ← StrChunk ..0000.40345!8 len:8 { "{delete}" }
│                            → StrChunk ..0000.40354!46 len:2 [46]
│                              ← StrChunk ..0000.40353!1 len:1 { ")" }
│                                ← StrChunk ..0000.248170!3 len:0 [3]
│                              → StrChunk ..0000.40427!4 len:1 [4]
│                                ← StrChunk ..0000.40400!1 len:1 { "." }
│                      → StrChunk ..0000.40739!9 len:319 { "{doc} is " }
│                        ← StrChunk ..0000.40421!2 len:140 { "\n\n" }
│                          ← StrChunk ..0000.40972!1 len:0 [1]
│                            ← StrChunk ..0000.96027!11 len:0 [11]
│                              ← StrChunk ..0000.40955!1 len:0 [1]
│                                ← StrChunk ..0000.40513!26 len:0 [26]
│                              → StrChunk ..0000.96039!5 len:0 [5]
│                                ← StrChunk ..0000.40956!16 len:0 [16]
│                            → StrChunk ..0000.40976!4 len:0 [4]
│                              ← StrChunk ..0000.96048!3 len:0 [3]
│                                ← StrChunk ..0000.40539!8 len:0 [8]
│                              → StrChunk ..0000.40431!41 len:0 [41]
│                                ← StrChunk ..0000.40547!44 len:0 [44]
│                          → StrChunk ..0000.62829!1 len:138 { "s" }
│                            ← StrChunk ..0000.40642!21 len:78 { " sequence of commands" }
│                              ← StrChunk ..0000.40637!5 len:42 [5]
│                                ← StrChunk ..0000.40595!42 len:42 { "Figure~\\ref{fig:make-doc} shows " … }
│                              → StrChunk ..0000.40663!10 len:15 { " construct" }
│                                ← StrChunk ..0000.62821!5 len:5 { " that" }
│                            → StrChunk ..0000.40708!29 len:59 { " a shopping list. First \\text" }
│                              ← StrChunk ..0000.40676!28 len:28 { " a new document representing" }
│                                ← StrChunk ..0000.40673!3 len:0 [3]
│                              → StrChunk ..0000.40737!2 len:2 [2]
│                                ← StrChunk ..0000.224442!2 len:2 { "tt" }
│                        → StrChunk ..0000.248529!51 len:170 { " within that map is set to the e" … }
│                          ← StrChunk ..0000.248471!19 len:75 { ", and then the key " }
│                            ← StrChunk ..0000.224449!7 len:39 [7]
│                              ← StrChunk ..0000.224463!5 len:13 { "verb|" }
│                                ← StrChunk ..0000.40754!8 len:8 { "set to \\" }
│                              → StrChunk ..0000.40767!26 len:26 { "{}|, the empty map literal" }
│                                ← StrChunk ..0000.40762!5 len:0 [5]
│                            → StrChunk ..0000.248497!7 len:17 [7]
│                              ← StrChunk ..0000.248524!5 len:6 { "verb|" }
│                                ← StrChunk ..0000.248496!1 len:1 { "\\" }
│                              → StrChunk ..0000.248516!1 len:11 { "|" }
│                                ← StrChunk ..0000.248504!10 len:10 { "\"shopping\"" }
│                          → StrChunk ..0000.41309!6 len:44 [6]
│                            ← StrChunk ..0000.40793!2 len:11 { ". " }
│                              ← StrChunk ..0000.248490!3 len:0 [3]
│                                ← StrChunk ..0000.248514!1 len:0 [1]
│                              → StrChunk ..0000.248586!5 len:9 { "third" }
│                                ← StrChunk ..0000.41305!4 len:4 { "The " }
│                            → StrChunk ..0000.40811!9 len:33 { " the key " }
│                              ← StrChunk ..0000.40795!16 len:18 [16]
│                                ← StrChunk ..0000.41315!18 len:18 { " line navigates to" }
│                              → StrChunk ..0000.248598!5 len:6 { "verb|" }
│                                ← StrChunk ..0000.40824!1 len:1 { "\\" }
│                → StrChunk ..0000.46363!2 len:711 [2]
│                  ← StrChunk ..0000.42104!1 len:711 [1]
│                    ← StrChunk ..0000.248815!1 len:711 { "\n" }
│                      ← StrChunk ..0000.249041!21 len:710 { "the variable \\texttt{" }
│                        ← StrChunk ..0000.41400!3 len:175 [3]
│                          ← StrChunk ..0000.40841!1 len:12 { " " }
│                            ← StrChunk ..0000.248604!1 len:11 { "|" }
│                              ← StrChunk ..0000.40825!5 len:10 [5]
│                                ← StrChunk ..0000.224473!7 len:0 [7]
│                                → StrChunk ..0000.40830!10 len:10 { "\"shopping\"" }
│                              → StrChunk ..0000.40840!1 len:0 [1]
│                                ← StrChunk ..0000.224481!1 len:0 [1]
│                            → StrChunk ..0000.224716!8 len:0 [8]
│                              ← StrChunk ..0000.224732!8 len:0 [8]
│                                ← StrChunk ..0000.41333!56 len:0 [56]
│                              → StrChunk ..0000.224484!2 len:0 [2]
│                                ← StrChunk ..0000.41389!11 len:0 [11]
│                          → StrChunk ..0000.41513!1 len:163 [1]
│                            ← StrChunk ..0000.41442!39 len:87 [39]
│                              ← StrChunk ..0000.41403!13 len:0 [13]
│                                ← StrChunk ..0000.42468!4 len:0 [4]
│                              → StrChunk ..0000.248760!55 len:87 { ", placing the cursor in a variab" … }
│                                ← StrChunk ..0000.41481!32 len:32 { "and selects the head of the list" }
│                            → StrChunk ..0000.57650!77 len:76 [77]
│                              ← StrChunk ..0000.224742!5 len:0 [5]
│                                ← StrChunk ..0000.57649!1 len:0 [1]
│                              → StrChunk ..0000.248817!75 len:76 { " The list element ``eggs'' is in" … }
│                                ← StrChunk ..0000.57727!1 len:1 { "." }
│                        → StrChunk ..0000.249426!1 len:514 { " " }
│                          ← StrChunk ..0000.249502!2 len:331 { "\n\n" }
│                            ← StrChunk ..0000.249066!60 len:158 { "} is set to a cursor pointing at" … }
│                              ← StrChunk ..0000.249062!4 len:4 [4]
│                                ← StrChunk ..0000.249146!4 len:4 { "eggs" }
│                              → StrChunk ..0000.249219!41 len:94 { "at the head, and ``milk'' after " … }
│                                ← StrChunk ..0000.249150!53 len:53 { "Then two more list elements are " … }
│                            → StrChunk ..0000.249294!129 len:171 { "\\texttt{eggs} identifies the lis" … }
│                              ← StrChunk ..0000.249261!21 len:21 { "Note that the cursor " }
│                                ← StrChunk ..0000.249260!1 len:0 [1]
│                              → StrChunk ..0000.249423!3 len:21 [3]
│                                ← StrChunk ..0000.250243!21 len:21 { "moves from index 1 to" }
│                          → StrChunk ..0000.249515!125 len:182 { "As we shall see later, this feat" … }
│                            ← StrChunk ..0000.249448!25 len:57 { "``milk'' is nevertheless " }
│                              ← StrChunk ..0000.249433!7 len:7 { "2, but " }
│                                ← StrChunk ..0000.249427!6 len:0 [6]
│                              → StrChunk ..0000.249504!1 len:25 { " " }
│                                ← StrChunk ..0000.249477!24 len:24 { "inserted after ``eggs''." }
│                            → StrChunk ..0000.249440!4 len:0 [4]
│                              ← StrChunk ..0000.249473!2 len:0 [2]
│                                ← StrChunk ..0000.249505!5 len:0 [5]
│                              → StrChunk ..0000.249203!8 len:0 [8]
│                                ← StrChunk ..0000.249282!6 len:0 [6]
│                      → StrChunk ..0000.41051!43 len:0 [43]
│                        ← StrChunk ..0000.224495!7 len:0 [7]
│                          ← StrChunk ..0000.40980!6 len:0 [6]
│                            ← StrChunk ..0000.40842!94 len:0 [94]
│                              ← StrChunk ..0000.41558!9 len:0 [9]
│                                ← StrChunk ..0000.248816!1 len:0 [1]
│                                → StrChunk ..0000.41416!13 len:0 [13]
│                              → StrChunk ..0000.40936!19 len:0 [19]
│                                ← StrChunk ..0000.224488!2 len:0 [2]
│                            → StrChunk ..0000.62830!2 len:0 [2]
│                              ← StrChunk ..0000.41002!48 len:0 [48]
│                                ← StrChunk ..0000.40990!10 len:0 [10]
│                              → StrChunk ..0000.62834!72 len:0 [72]
│                                ← StrChunk ..0000.41050!1 len:0 [1]
│                          → StrChunk ..0000.62961!33 len:0 [33]
│                            ← StrChunk ..0000.224503!1 len:0 [1]
│                              ← StrChunk ..0000.62912!5 len:0 [5]
│                                ← StrChunk ..0000.62906!4 len:0 [4]
│                              → StrChunk ..0000.63292!6 len:0 [6]
│                                ← StrChunk ..0000.62917!44 len:0 [44]
│                            → StrChunk ..0000.224505!1 len:0 [1]
│                              ← StrChunk ..0000.62994!9 len:0 [9]
│                                ← StrChunk ..0000.224511!7 len:0 [7]
│                              → StrChunk ..0000.62910!1 len:0 [1]
│                                ← StrChunk ..0000.63003!70 len:0 [70]
│                        → StrChunk ..0000.41885!24 len:0 [24]
│                          ← StrChunk ..0000.41655!156 len:0 [156]
│                            ← StrChunk ..0000.41116!7 len:0 [7]
│                              ← StrChunk ..0000.41184!88 len:0 [88]
│                                ← StrChunk ..0000.41096!20 len:0 [20]
│                              → StrChunk ..0000.41170!14 len:0 [14]
│                                ← StrChunk ..0000.41125!41 len:0 [41]
│                            → StrChunk ..0000.57787!1 len:0 [1]
│                              ← StrChunk ..0000.41845!39 len:0 [39]
│                                ← StrChunk ..0000.41813!28 len:0 [28]
│                              → StrChunk ..0000.57780!3 len:0 [3]
│                                ← StrChunk ..0000.41884!1 len:0 [1]
│                          → StrChunk ..0000.41909!17 len:0 [17]
│                            ← StrChunk ..0000.57827!16 len:0 [16]
│                              ← StrChunk ..0000.63842!3 len:0 [3]
│                                ← StrChunk ..0000.57788!39 len:0 [39]
│                              → StrChunk ..0000.57843!11 len:0 [11]
│                                ← StrChunk ..0000.63845!11 len:0 [11]
│                            → StrChunk ..0000.41960!61 len:0 [61]
│                              ← StrChunk ..0000.224520!2 len:0 [2]
│                                ← StrChunk ..0000.41928!32 len:0 [32]
│                              → StrChunk ..0000.42021!7 len:0 [7]
│                                ← StrChunk ..0000.42305!9 len:0 [9]
│                    → StrChunk ..0000.35614!8 len:0 [8]
│                      ← StrChunk ..0000.41123!1 len:0 [1]
│                        ← StrChunk ..0000.53670!21 len:0 [21]
│                          ← StrChunk ..0000.102202!16 len:0 [16]
│                            ← StrChunk ..0000.42231!74 len:0 [74]
│                              ← StrChunk ..0000.42106!76 len:0 [76]
│                                ← StrChunk ..0000.42028!14 len:0 [14]
│                                → StrChunk ..0000.42212!15 len:0 [15]
│                              → StrChunk ..0000.96082!1 len:0 [1]
│                                ← StrChunk ..0000.42314!16 len:0 [16]
│                            → StrChunk ..0000.42330!1 len:0 [1]
│                              ← StrChunk ..0000.96080!1 len:0 [1]
│                                ← StrChunk ..0000.96083!5 len:0 [5]
│                              → StrChunk ..0000.42331!25 len:0 [25]
│                                ← StrChunk ..0000.53704!1 len:0 [1]
│                          → StrChunk ..0000.42062!12 len:0 [12]
│                            ← StrChunk ..0000.42227!2 len:0 [2]
│                              ← StrChunk ..0000.149763!21 len:0 [21]
│                                ← StrChunk ..0000.42356!17 len:0 [17]
│                              → StrChunk ..0000.42042!18 len:0 [18]
│                                ← StrChunk ..0000.42182!15 len:0 [15]
│                            → StrChunk ..0000.41841!2 len:0 [2]
│                              ← StrChunk ..0000.41926!1 len:0 [1]
│                                ← StrChunk ..0000.42060!1 len:0 [1]
│                              → StrChunk ..0000.41166!2 len:0 [2]
│                                ← StrChunk ..0000.41811!1 len:0 [1]
│                        → StrChunk ..0000.40051!1 len:0 [1]
│                          ← StrChunk ..0000.40704!2 len:0 [2]
│                            ← StrChunk ..0000.40986!2 len:0 [2]
│                              ← StrChunk ..0000.41000!1 len:0 [1]
│                                ← StrChunk ..0000.41094!1 len:0 [1]
│                              → StrChunk ..0000.40748!3 len:0 [3]
│                                ← StrChunk ..0000.40820!2 len:0 [2]
│                            → StrChunk ..0000.40341!1 len:0 [1]
│                              ← StrChunk ..0000.40401!10 len:0 [10]
│                                ← StrChunk ..0000.40423!4 len:0 [4]
│                              → StrChunk ..0000.40053!8 len:0 [8]
│                                ← StrChunk ..0000.40047!4 len:0 [4]
│                          → StrChunk ..0000.37718!3 len:0 [3]
│                            ← StrChunk ..0000.37961!1 len:0 [1]
│                              ← StrChunk ..0000.38086!12 len:0 [12]
│                                ← StrChunk ..0000.39960!1 len:0 [1]
│                              → StrChunk ..0000.37818!6 len:0 [6]
│                                ← StrChunk ..0000.37953!4 len:0 [4]
│                            → StrChunk ..0000.37433!1 len:0 [1]
│                              ← StrChunk ..0000.37612!4 len:0 [4]
│                                ← StrChunk ..0000.37661!13 len:0 [13]
│                              → StrChunk ..0000.35673!3 len:0 [3]
│                                ← StrChunk ..0000.35835!1 len:0 [1]
│                      → StrChunk ..0000.54988!12 len:0 [12]
│                        ← StrChunk ..0000.45875!3 len:0 [3]
│                          ← StrChunk ..0000.54797!7 len:0 [7]
│                            ← StrChunk ..0000.4872!1 len:0 [1]
│                              ← StrChunk ..0000.35390!2 len:0 [2]
│                                ← StrChunk ..0000.35469!8 len:0 [8]
│                              → StrChunk ..0000.54844!2 len:0 [2]
│                                ← StrChunk ..0000.54730!67 len:0 [67]
│                            → StrChunk ..0000.46372!2 len:0 [2]
│                              ← StrChunk ..0000.45723!11 len:0 [11]
│                                ← StrChunk ..0000.45694!15 len:0 [15]
│                              → StrChunk ..0000.46374!1 len:0 [1]
│                                ← StrChunk ..0000.46380!16 len:0 [16]
│                          → StrChunk ..0000.45885!5 len:0 [5]
│                            ← StrChunk ..0000.46328!2 len:0 [2]
│                              ← StrChunk ..0000.54400!1 len:0 [1]
│                                ← StrChunk ..0000.46310!18 len:0 [18]
│                              → StrChunk ..0000.45734!8 len:0 [8]
│                                ← StrChunk ..0000.45873!1 len:0 [1]
│                            → StrChunk ..0000.54886!1 len:0 [1]
│                              ← StrChunk ..0000.45872!1 len:0 [1]
│                                ← StrChunk ..0000.45742!12 len:0 [12]
│                              → StrChunk ..0000.54910!1 len:0 [1]
│                                ← StrChunk ..0000.54856!1 len:0 [1]
│                        → StrChunk ..0000.54876!3 len:0 [3]
│                          ← StrChunk ..0000.54921!4 len:0 [4]
│                            ← StrChunk ..0000.54913!8 len:0 [8]
│                              ← StrChunk ..0000.55000!3 len:0 [3]
│                                ← StrChunk ..0000.55029!1 len:0 [1]
│                              → StrChunk ..0000.55003!1 len:0 [1]
│                                ← StrChunk ..0000.55030!2 len:0 [2]
│                            → StrChunk ..0000.54857!1 len:0 [1]
│                              ← StrChunk ..0000.54911!1 len:0 [1]
│                                ← StrChunk ..0000.54953!2 len:0 [2]
│                              → StrChunk ..0000.54909!1 len:0 [1]
│                                ← StrChunk ..0000.54864!12 len:0 [12]
│                          → StrChunk ..0000.46568!3 len:0 [3]
│                            ← StrChunk ..0000.45905!3 len:0 [3]
│                              ← StrChunk ..0000.46426!1 len:0 [1]
│                                ← StrChunk ..0000.54395!2 len:0 [2]
│                              → StrChunk ..0000.45908!2 len:0 [2]
│                                ← StrChunk ..0000.46375!2 len:0 [2]
│                            → StrChunk ..0000.46561!1 len:0 [1]
│                              ← StrChunk ..0000.46724!1 len:0 [1]
│                                ← StrChunk ..0000.46560!1 len:0 [1]
│                              → StrChunk ..0000.45910!1 len:0 [1]
│                                ← StrChunk ..0000.54860!1 len:0 [1]
│                  → StrChunk ..0000.46518!1 len:0 [1]
│                    ← StrChunk ..0000.45996!4 len:0 [4]
│                      ← StrChunk ..0000.54958!2 len:0 [2]
│                        ← StrChunk ..0000.54963!15 len:0 [15]
│                          ← StrChunk ..0000.46470!2 len:0 [2]
│                            ← StrChunk ..0000.45914!11 len:0 [11]
│                              ← StrChunk ..0000.45911!3 len:0 [3]
│                                ← StrChunk ..0000.45958!1 len:0 [1]
│                                → StrChunk ..0000.46555!2 len:0 [2]
│                              → StrChunk ..0000.46564!1 len:0 [1]
│                                ← StrChunk ..0000.45929!5 len:0 [5]
│                            → StrChunk ..0000.46472!5 len:0 [5]
│                              ← StrChunk ..0000.46572!5 len:0 [5]
│                                ← StrChunk ..0000.45934!12 len:0 [12]
│                              → StrChunk ..0000.46721!1 len:0 [1]
│                                ← StrChunk ..0000.45946!2 len:0 [2]
│                          → StrChunk ..0000.46330!1 len:0 [1]
│                            ← StrChunk ..0000.46722!1 len:0 [1]
│                              ← StrChunk ..0000.54978!1 len:0 [1]
│                                ← StrChunk ..0000.54980!2 len:0 [2]
│                              → StrChunk ..0000.46534!3 len:0 [3]
│                                ← StrChunk ..0000.45948!1 len:0 [1]
│                            → StrChunk ..0000.45949!7 len:0 [7]
│                              ← StrChunk ..0000.46331!1 len:0 [1]
│                                ← StrChunk ..0000.46417!1 len:0 [1]
│                              → StrChunk ..0000.54955!1 len:0 [1]
│                                ← StrChunk ..0000.54983!1 len:0 [1]
│                        → StrChunk ..0000.54401!1 len:0 [1]
│                          ← StrChunk ..0000.46029!2 len:0 [2]
│                            ← StrChunk ..0000.45956!1 len:0 [1]
│                              ← StrChunk ..0000.54926!1 len:0 [1]
│                                ← StrChunk ..0000.54956!1 len:0 [1]
│                              → StrChunk ..0000.45957!1 len:0 [1]
│                                ← StrChunk ..0000.45959!1 len:0 [1]
│                            → StrChunk ..0000.54900!5 len:0 [5]
│                              ← StrChunk ..0000.54890!1 len:0 [1]
│                                ← StrChunk ..0000.55032!4 len:0 [4]
│                              → StrChunk ..0000.46486!1 len:0 [1]
│                                ← StrChunk ..0000.54891!3 len:0 [3]
│                          → StrChunk ..0000.46567!1 len:0 [1]
│                            ← StrChunk ..0000.46465!2 len:0 [2]
│                              ← StrChunk ..0000.45979!1 len:0 [1]
│                                ← StrChunk ..0000.46582!1 len:0 [1]
│                              → StrChunk ..0000.45980!14 len:0 [14]
│                                ← StrChunk ..0000.46464!1 len:0 [1]
│                            → StrChunk ..0000.45995!1 len:0 [1]
│                              ← StrChunk ..0000.54403!2 len:0 [2]
│                                ← StrChunk ..0000.45994!1 len:0 [1]
│                              → StrChunk ..0000.46493!9 len:0 [9]
│                                ← StrChunk ..0000.46513!4 len:0 [4]
│                      → StrChunk ..0000.46134!3 len:0 [3]
│                        ← StrChunk ..0000.46422!1 len:0 [1]
│                          ← StrChunk ..0000.46028!1 len:0 [1]
│                            ← StrChunk ..0000.54885!1 len:0 [1]
│                              ← StrChunk ..0000.46504!3 len:0 [3]
│                                ← StrChunk ..0000.46002!10 len:0 [10]
│                                → StrChunk ..0000.46012!14 len:0 [14]
│                              → StrChunk ..0000.54884!1 len:0 [1]
│                                ← StrChunk ..0000.54905!2 len:0 [2]
│                            → StrChunk ..0000.45925!2 len:0 [2]
│                              ← StrChunk ..0000.46000!1 len:0 [1]
│                                ← StrChunk ..0000.46026!2 len:0 [2]
│                              → StrChunk ..0000.54405!2 len:0 [2]
│                                ← StrChunk ..0000.45754!1 len:0 [1]
│                          → StrChunk ..0000.46520!2 len:0 [2]
│                            ← StrChunk ..0000.46332!2 len:0 [2]
│                              ← StrChunk ..0000.46365!1 len:0 [1]
│                                ← StrChunk ..0000.46418!1 len:0 [1]
│                              → StrChunk ..0000.46099!15 len:0 [15]
│                                ← StrChunk ..0000.46060!14 len:0 [14]
│                            → StrChunk ..0000.46087!1 len:0 [1]
│                              ← StrChunk ..0000.46074!11 len:0 [11]
│                                ← StrChunk ..0000.46114!8 len:0 [8]
│                              → StrChunk ..0000.46517!1 len:0 [1]
│                                ← StrChunk ..0000.46133!1 len:0 [1]
│                        → StrChunk ..0000.46717!3 len:0 [3]
│                          ← StrChunk ..0000.46652!21 len:0 [21]
│                            ← StrChunk ..0000.46585!41 len:0 [41]
│                              ← StrChunk ..0000.54407!2 len:0 [2]
│                                ← StrChunk ..0000.46584!1 len:0 [1]
│                              → StrChunk ..0000.46626!22 len:0 [22]
│                                ← StrChunk ..0000.46713!4 len:0 [4]
│                            → StrChunk ..0000.46733!2 len:0 [2]
│                              ← StrChunk ..0000.46673!1 len:0 [1]
│                                ← StrChunk ..0000.53876!8 len:0 [8]
│                              → StrChunk ..0000.47015!1 len:0 [1]
│                                ← StrChunk ..0000.46674!39 len:0 [39]
│                          → StrChunk ..0000.46366!1 len:0 [1]
│                            ← StrChunk ..0000.54409!2 len:0 [2]
│                              ← StrChunk ..0000.46137!1 len:0 [1]
│                                ← StrChunk ..0000.46648!2 len:0 [2]
│                              → StrChunk ..0000.46419!1 len:0 [1]
│                                ← StrChunk ..0000.46423!1 len:0 [1]
│                            → StrChunk ..0000.46168!3 len:0 [3]
│                              ← StrChunk ..0000.46138!26 len:0 [26]
│                                ← StrChunk ..0000.46334!2 len:0 [2]
│                              → StrChunk ..0000.46171!21 len:0 [21]
│                                ← StrChunk ..0000.46522!2 len:0 [2]
│                    → StrChunk ..0000.54417!2 len:0 [2]
│                      ← StrChunk ..0000.46227!2 len:0 [2]
│                        ← StrChunk ..0000.46867!3 len:0 [3]
│                          ← StrChunk ..0000.54411!2 len:0 [2]
│                            ← StrChunk ..0000.96116!28 len:0 [28]
│                              ← StrChunk ..0000.96088!28 len:0 [28]
│                                ← StrChunk ..0000.96146!2 len:0 [2]
│                                → StrChunk ..0000.96145!1 len:0 [1]
│                              → StrChunk ..0000.46735!1 len:0 [1]
│                                ← StrChunk ..0000.46192!3 len:0 [3]
│                            → StrChunk ..0000.53948!8 len:0 [8]
│                              ← StrChunk ..0000.46779!47 len:0 [47]
│                                ← StrChunk ..0000.46736!41 len:0 [41]
│                              → StrChunk ..0000.47014!1 len:0 [1]
│                                ← StrChunk ..0000.46826!41 len:0 [41]
│                          → StrChunk ..0000.46367!1 len:0 [1]
│                            ← StrChunk ..0000.54413!2 len:0 [2]
│                              ← StrChunk ..0000.46195!1 len:0 [1]
│                                ← StrChunk ..0000.46777!1 len:0 [1]
│                              → StrChunk ..0000.46420!1 len:0 [1]
│                                ← StrChunk ..0000.46424!1 len:0 [1]
│                            → StrChunk ..0000.46212!10 len:0 [10]
│                              ← StrChunk ..0000.46196!14 len:0 [14]
│                                ← StrChunk ..0000.46336!2 len:0 [2]
│                              → StrChunk ..0000.46222!2 len:0 [2]
│                                ← StrChunk ..0000.46226!1 len:0 [1]
│                        → StrChunk ..0000.46900!14 len:0 [14]
│                          ← StrChunk ..0000.96177!31 len:0 [31]
│                            ← StrChunk ..0000.46243!11 len:0 [11]
│                              ← StrChunk ..0000.46229!10 len:0 [10]
│                                ← StrChunk ..0000.46524!2 len:0 [2]
│                              → StrChunk ..0000.96148!27 len:0 [27]
│                                ← StrChunk ..0000.46519!1 len:0 [1]
│                            → StrChunk ..0000.46870!1 len:0 [1]
│                              ← StrChunk ..0000.46254!3 len:0 [3]
│                                ← StrChunk ..0000.96175!1 len:0 [1]
│                              → StrChunk ..0000.46871!27 len:0 [27]
│                                ← StrChunk ..0000.54415!2 len:0 [2]
│                          → StrChunk ..0000.47013!1 len:0 [1]
│                            ← StrChunk ..0000.54002!8 len:0 [8]
│                              ← StrChunk ..0000.46958!11 len:0 [11]
│                                ← StrChunk ..0000.46918!36 len:0 [36]
│                              → StrChunk ..0000.47006!4 len:0 [4]
│                                ← StrChunk ..0000.46969!36 len:0 [36]
│                            → StrChunk ..0000.46914!2 len:0 [2]
│                              ← StrChunk ..0000.46954!2 len:0 [2]
│                                ← StrChunk ..0000.47010!3 len:0 [3]
│                              → StrChunk ..0000.46257!1 len:0 [1]
│                                ← StrChunk ..0000.46898!1 len:0 [1]
│                      → StrChunk ..0000.96368!2 len:0 [2]
│                        ← StrChunk ..0000.96371!15 len:0 [15]
│                          ← StrChunk ..0000.46526!2 len:0 [2]
│                            ← StrChunk ..0000.46368!1 len:0 [1]
│                              ← StrChunk ..0000.46421!1 len:0 [1]
│                                ← StrChunk ..0000.46425!1 len:0 [1]
│                              → StrChunk ..0000.46258!29 len:0 [29]
│                                ← StrChunk ..0000.46338!2 len:0 [2]
│                            → StrChunk ..0000.46537!4 len:0 [4]
│                              ← StrChunk ..0000.96208!58 len:0 [58]
│                                ← StrChunk ..0000.46287!21 len:0 [21]
│                              → StrChunk ..0000.54419!3 len:0 [3]
│                                ← StrChunk ..0000.54863!1 len:0 [1]
│                          → StrChunk ..0000.96386!4 len:0 [4]
│                            ← StrChunk ..0000.46548!3 len:0 [3]
│                              ← StrChunk ..0000.46541!5 len:0 [5]
│                                ← StrChunk ..0000.46727!3 len:0 [3]
│                              → StrChunk ..0000.46551!2 len:0 [2]
│                                ← StrChunk ..0000.96266!1 len:0 [1]
│                            → StrChunk ..0000.96351!17 len:0 [17]
│                              ← StrChunk ..0000.96292!57 len:0 [57]
│                                ← StrChunk ..0000.96267!15 len:0 [15]
│                              → StrChunk ..0000.96370!1 len:0 [1]
│                                ← StrChunk ..0000.96391!2 len:0 [2]
│                        → StrChunk ..0000.54655!6 len:0 [6]
│                          ← StrChunk ..0000.54084!4 len:0 [4]
│                            ← StrChunk ..0000.46553!2 len:0 [2]
│                              ← StrChunk ..0000.96282!5 len:0 [5]
│                                ← StrChunk ..0000.96349!1 len:0 [1]
│                              → StrChunk ..0000.96390!1 len:0 [1]
│                                ← StrChunk ..0000.54393!1 len:0 [1]
│                            → StrChunk ..0000.54106!1 len:0 [1]
│                              ← StrChunk ..0000.54858!1 len:0 [1]
│                                ← StrChunk ..0000.54104!2 len:0 [2]
│                              → StrChunk ..0000.54107!2 len:0 [2]
│                                ← StrChunk ..0000.54088!14 len:0 [14]
│                          → StrChunk ..0000.54709!1 len:0 [1]
│                            ← StrChunk ..0000.54661!8 len:0 [8]
│                              ← StrChunk ..0000.54695!4 len:0 [4]
│                                ← StrChunk ..0000.54721!5 len:0 [5]
│                              → StrChunk ..0000.54727!3 len:0 [3]
│                                ← StrChunk ..0000.54703!6 len:0 [6]
│                            → StrChunk ..0000.54688!1 len:0 [1]
│                              ← StrChunk ..0000.54682!2 len:0 [2]
│                                ← StrChunk ..0000.54669!1 len:0 [1]
│                              → StrChunk ..0000.54676!3 len:0 [3]
│                                ← StrChunk ..0000.54684!2 len:0 [2]
│              → StrChunk ..0000.232671!1 len:8262 { "(" }
│                ← StrChunk ..0000.231939!1 len:2775 { " " }
│                  ← StrChunk ..0000.43482!6 len:1484 { "space{" }
│                    ← StrChunk ..0000.46210!1 len:338 [1]
│                      ← StrChunk ..0000.54834!2 len:0 [2]
│                        ← StrChunk ..0000.54219!16 len:0 [16]
│                          ← StrChunk ..0000.54109!8 len:0 [8]
│                            ← StrChunk ..0000.54422!6 len:0 [6]
│                              ← StrChunk ..0000.54616!12 len:0 [12]
│                                ← StrChunk ..0000.54576!1 len:0 [1]
│                                → StrChunk ..0000.54577!18 len:0 [18]
│                              → StrChunk ..0000.54428!13 len:0 [13]
│                                ← StrChunk ..0000.54513!8 len:0 [8]
│                            → StrChunk ..0000.54595!1 len:0 [1]
│                              ← StrChunk ..0000.54117!52 len:0 [52]
│                                ← StrChunk ..0000.54550!13 len:0 [13]
│                              → StrChunk ..0000.54169!46 len:0 [46]
│                                ← StrChunk ..0000.54215!4 len:0 [4]
│                          → StrChunk ..0000.54859!1 len:0 [1]
│                            ← StrChunk ..0000.54596!1 len:0 [1]
│                              ← StrChunk ..0000.54689!1 len:0 [1]
│                                ← StrChunk ..0000.54710!1 len:0 [1]
│                              → StrChunk ..0000.54235!4 len:0 [4]
│                                ← StrChunk ..0000.54441!1 len:0 [1]
│                            → StrChunk ..0000.54492!8 len:0 [8]
│                              ← StrChunk ..0000.54458!6 len:0 [6]
│                                ← StrChunk ..0000.54239!19 len:0 [19]
│                              → StrChunk ..0000.54840!2 len:0 [2]
│                                ← StrChunk ..0000.54819!15 len:0 [15]
│                        → StrChunk ..0000.54387!2 len:0 [2]
│                          ← StrChunk ..0000.54318!65 len:0 [65]
│                            ← StrChunk ..0000.54442!8 len:0 [8]
│                              ← StrChunk ..0000.54258!25 len:0 [25]
│                                ← StrChunk ..0000.54464!13 len:0 [13]
│                              → StrChunk ..0000.54836!1 len:0 [1]
│                                ← StrChunk ..0000.54283!35 len:0 [35]
│                            → StrChunk ..0000.54383!4 len:0 [4]
│                              ← StrChunk ..0000.54477!1 len:0 [1]
│                                ← StrChunk ..0000.54837!1 len:0 [1]
│                              → StrChunk ..0000.54397!2 len:0 [2]
│                                ← StrChunk ..0000.54854!2 len:0 [2]
│                          → StrChunk ..0000.46416!1 len:0 [1]
│                            ← StrChunk ..0000.46546!1 len:0 [1]
│                              ← StrChunk ..0000.54102!1 len:0 [1]
│                                ← StrChunk ..0000.54628!14 len:0 [14]
│                              → StrChunk ..0000.46340!14 len:0 [14]
│                                ← StrChunk ..0000.46356!1 len:0 [1]
│                            → StrChunk ..0000.46369!3 len:0 [3]
│                              ← StrChunk ..0000.46354!1 len:0 [1]
│                                ← StrChunk ..0000.46401!15 len:0 [15]
│                              → StrChunk ..0000.46224!1 len:0 [1]
│                                ← StrChunk ..0000.46239!2 len:0 [2]
│                      → StrChunk ..0000.45722!1 len:338 { "\n" }
│                        ← StrChunk ..0000.154183!5 len:0 [5]
│                          ← StrChunk ..0000.45902!3 len:0 [3]
│                            ← StrChunk ..0000.45755!5 len:0 [5]
│                              ← StrChunk ..0000.46088!11 len:0 [11]
│                                ← StrChunk ..0000.46164!2 len:0 [2]
│                                → StrChunk ..0000.46085!1 len:0 [1]
│                              → StrChunk ..0000.45760!8 len:0 [8]
│                                ← StrChunk ..0000.45897!5 len:0 [5]
│                            → StrChunk ..0000.45786!1 len:0 [1]
│                              ← StrChunk ..0000.53787!5 len:0 [5]
│                                ← StrChunk ..0000.45768!18 len:0 [18]
│                              → StrChunk ..0000.154179!2 len:0 [2]
│                                ← StrChunk ..0000.54055!15 len:0 [15]
│                          → StrChunk ..0000.45970!1 len:0 [1]
│                            ← StrChunk ..0000.45787!30 len:0 [30]
│                              ← StrChunk ..0000.54070!14 len:0 [14]
│                                ← StrChunk ..0000.154181!1 len:0 [1]
│                              → StrChunk ..0000.53805!10 len:0 [10]
│                                ← StrChunk ..0000.45962!8 len:0 [8]
│                            → StrChunk ..0000.45971!2 len:0 [2]
│                              ← StrChunk ..0000.53815!33 len:0 [33]
│                                ← StrChunk ..0000.45975!4 len:0 [4]
│                              → StrChunk ..0000.45709!13 len:0 [13]
│                                ← StrChunk ..0000.45817!55 len:0 [55]
│                        → StrChunk ..0000.42655!2 len:337 { "\n\\" }
│                          ← StrChunk ..0000.42602!11 len:154 { "\n\\AxiomC{$\\" }
│                            ← StrChunk ..0000.42503!2 len:31 { "\n\\" }
│                              ← StrChunk ..0000.42474!15 len:16 { "\\begin{figure*}" }
│                                ← StrChunk ..0000.42472!1 len:1 { "\n" }
│                              → StrChunk ..0000.42505!9 len:13 [9]
│                                ← StrChunk ..0000.44391!13 len:13 { "begin{center}" }
│                            → StrChunk ..0000.42795!44 len:112 { "AxiomC{$A_p,\\, \\mathit{cmd}_1 \\e" … }
│                              ← StrChunk ..0000.42791!2 len:42 { "\n\\" }
│                                ← StrChunk ..0000.42615!40 len:40 { "mathit{cmd}_1 \\mathbin{:} \\mathr" … }
│                              → StrChunk ..0000.42765!26 len:26 { "\n\\LeftLabel{\\textsc{Exec}}" }
│                                ← StrChunk ..0000.42793!1 len:0 [1]
│                          → StrChunk ..0000.42686!1 len:181 [1]
│                            ← StrChunk ..0000.42663!9 len:27 { "{$A_p,\\, " }
│                              ← StrChunk ..0000.42657!6 len:10 [6]
│                                ← StrChunk ..0000.42755!10 len:10 { "BinaryInfC" }
│                              → StrChunk ..0000.42715!1 len:8 { " " }
│                                ← StrChunk ..0000.42688!7 len:7 { "\\langle" }
│                            → StrChunk ..0000.42716!33 len:154 { "{cmd}_2 \\mathbin{;} \\dots \\rangl" … }
│                              ← StrChunk ..0000.42695!20 len:34 { " \\mathbin{;} \\mathit" }
│                                ← StrChunk ..0000.42672!14 len:14 { "\\mathit{cmd}_1" }
│                              → StrChunk ..0000.42859!69 len:87 { "\\, \\langle \\mathit{cmd}_2 \\mathb" … }
│                                ← StrChunk ..0000.42839!18 len:18 { "\n    \\evalto A_p'," }
│                    → StrChunk ..0000.43683!9 len:1140 { "naryInfC{" }
│                      ← StrChunk ..0000.43286!4 len:718 [4]
│                        ← StrChunk ..0000.43506!16 len:392 [16]
│                          ← StrChunk ..0000.43041!17 len:191 { " \\mathsf{doc})$}\n" }
│                            ← StrChunk ..0000.42928!4 len:115 [4]
│                              ← StrChunk ..0000.43488!1 len:4 [1]
│                                ← StrChunk ..0000.43527!1 len:1 { "4" }
│                                → StrChunk ..0000.43489!3 len:3 { "em}" }
│                              → StrChunk ..0000.43524!2 len:111 { "\\," }
│                                ← StrChunk ..0000.42932!109 len:109 { "\n%\n\\AxiomC{}\n\\LeftLabel{\\textsc{" … }
│                            → StrChunk ..0000.43091!1 len:59 { "\n" }
│                              ← StrChunk ..0000.44404!13 len:42 { "\n\\end{center}" }
│                                ← StrChunk ..0000.43062!29 len:29 { "\\DisplayProof\\proofSkipAmount" }
│                              → StrChunk ..0000.43092!1 len:16 { "\n" }
│                                ← StrChunk ..0000.44417!15 len:15 { "\n\\begin{center}" }
│                          → StrChunk ..0000.43239!7 len:201 { "\\mapsto" }
│                            ← StrChunk ..0000.43522!2 len:148 { "\\;" }
│                              ← StrChunk ..0000.43104!100 len:109 { "A_p,\\, \\mathit{expr} \\evalto \\ma" … }
│                                ← StrChunk ..0000.43093!9 len:9 { "\\AxiomC{$" }
│                              → StrChunk ..0000.43247!2 len:37 { "\\," }
│                                ← StrChunk ..0000.43204!35 len:35 { " x = \\mathit{expr} \\evalto A_p[\\" … }
│                            → StrChunk ..0000.43529!1 len:46 { "3" }
│                              ← StrChunk ..0000.43496!6 len:42 { "space{" }
│                                ← StrChunk ..0000.43250!36 len:36 { "\\, \\mathit{cur}\\,]$}\n\\DisplayPro" … }
│                              → StrChunk ..0000.43503!3 len:3 { "em}" }
│                                ← StrChunk ..0000.43502!1 len:0 [1]
│                        → StrChunk ..0000.43692!35 len:326 { "$A_p,\\, \\mathit{expr} \\evalto \\m" … }
│                          ← StrChunk ..0000.43473!5 len:171 { "mount" }
│                            ← StrChunk ..0000.43363!54 len:125 { "\\textsc{Var}}\n\\UnaryInfC{$A_p,\\," … }
│                              ← StrChunk ..0000.43347!10 len:49 { "LeftLabel{" }
│                                ← StrChunk ..0000.43290!39 len:39 { "\n%\n\\AxiomC{$x \\in \\mathrm{dom}(A" … }
│                              → StrChunk ..0000.43453!10 len:22 { "proofSkipA" }
│                                ← StrChunk ..0000.43439!12 len:12 { "isplayProof\\" }
│                            → StrChunk ..0000.44261!18 len:41 { "\n\\begin{prooftree}" }
│                              ← StrChunk ..0000.43530!1 len:14 { "\n" }
│                                ← StrChunk ..0000.44432!13 len:13 { "\n\\end{center}" }
│                              → StrChunk ..0000.43616!8 len:9 { "\\AxiomC{" }
│                                ← StrChunk ..0000.43531!1 len:1 { "\n" }
│                          → StrChunk ..0000.43782!1 len:120 [1]
│                            ← StrChunk ..0000.43784!9 len:116 { "\\, k_n)$}" }
│                              ← StrChunk ..0000.43766!16 len:47 { "k_{n-1} \\rangle," }
│                                ← StrChunk ..0000.43733!31 len:31 { "sf{cursor}(\\langle k_1, \\dots, " }
│                              → StrChunk ..0000.43793!25 len:60 { "\n\\LeftLabel{\\textsc{Get}}" }
│                                ← StrChunk ..0000.210089!35 len:35 { "\n\\AxiomC{$k_n \\not= \\mathsf{head" … }
│                            → StrChunk ..0000.43680!2 len:4 { "\n\\" }
│                              ← StrChunk ..0000.43727!3 len:0 [3]
│                                ← StrChunk ..0000.43764!1 len:0 [1]
│                              → StrChunk ..0000.43682!1 len:2 [1]
│                                ← StrChunk ..0000.210087!2 len:2 { "Bi" }
│                      → StrChunk ..0000.43895!18 len:413 { " \\mathit{key})$}\n\\" }
│                        ← StrChunk ..0000.43657!1 len:135 { "}" }
│                          ← StrChunk ..0000.96511!2 len:33 [2]
│                            ← StrChunk ..0000.96541!4 len:29 [4]
│                              ← StrChunk ..0000.232645!4 len:27 { "math" }
│                                ← StrChunk ..0000.43624!23 len:23 { "$A_p,\\, \\mathit{expr}.\\" }
│                              → StrChunk ..0000.43647!4 len:2 [4]
│                                ← StrChunk ..0000.232181!2 len:2 { "sf" }
│                            → StrChunk ..0000.232184!3 len:4 { "get" }
│                              ← StrChunk ..0000.43653!1 len:1 { "{" }
│                                ← StrChunk ..0000.43651!2 len:0 [2]
│                              → StrChunk ..0000.43654!3 len:0 [3]
│                                ← StrChunk ..0000.96516!1 len:0 [1]
│                          → StrChunk ..0000.96533!4 len:101 [4]
│                            ← StrChunk ..0000.43659!12 len:14 { "\\mathit{key}" }
│                              ← StrChunk ..0000.43658!1 len:1 [1]
│                                ← StrChunk ..0000.232187!1 len:1 { "(" }
│                              → StrChunk ..0000.96519!1 len:1 [1]
│                                ← StrChunk ..0000.232188!1 len:1 { ")" }
│                            → StrChunk ..0000.43672!8 len:87 { " \\evalto" }
│                              ← StrChunk ..0000.43671!1 len:0 [1]
│                                ← StrChunk ..0000.96520!9 len:0 [9]
│                              → StrChunk ..0000.44210!2 len:79 { "\\," }
│                                ← StrChunk ..0000.43818!77 len:77 { "\n    \\mathsf{cursor}(\\langle k_1" … }
│                        → StrChunk ..0000.231967!4 len:260 { "\n   " }
│                          ← StrChunk ..0000.43933!6 len:225 [6]
│                            ← StrChunk ..0000.44328!1 len:33 [1]
│                              ← StrChunk ..0000.44330!10 len:33 { "prooftree}" }
│                                ← StrChunk ..0000.44305!23 len:23 { "end{prooftree}\n\n\\begin{" }
│                              → StrChunk ..0000.44260!1 len:0 [1]
│                                ← StrChunk ..0000.43913!20 len:0 [20]
│                            → StrChunk ..0000.44018!24 len:192 { "k_{n-1} \\rangle,\\, k_n)$" }
│                              ← StrChunk ..0000.43995!21 len:75 { "(\\langle k_1, \\dots, " }
│                                ← StrChunk ..0000.43939!54 len:54 { "\n\\AxiomC{$A_p,\\, \\mathit{expr} \\" … }
│                              → StrChunk ..0000.231814!92 len:93 { "\n\\AxiomC{$A_p,\\, \\mathsf{cursor}" … }
│                                ← StrChunk ..0000.44046!1 len:1 { "}" }
│                          → StrChunk ..0000.231966!1 len:31 [1]
│                            ← StrChunk ..0000.232178!1 len:30 { "}" }
│                              ← StrChunk ..0000.231953!12 len:27 { ".\\mathsf{idx" }
│                                ← StrChunk ..0000.231906!15 len:15 { " \\mathsf{head})" }
│                              → StrChunk ..0000.232729!1 len:2 { "i" }
│                                ← StrChunk ..0000.231965!1 len:1 { "(" }
│                            → StrChunk ..0000.231987!1 len:1 [1]
│                              ← StrChunk ..0000.231986!1 len:1 { ")" }
│                                ← StrChunk ..0000.231975!9 len:0 [9]
│                              → StrChunk ..0000.231935!4 len:0 [4]
│                                ← StrChunk ..0000.231984!1 len:0 [1]
│                  → StrChunk ..0000.45608!2 len:1290 [2]
│                    ← StrChunk ..0000.44445!9 len:623 [9]
│                      ← StrChunk ..0000.232167!1 len:623 { " " }
│                        ← StrChunk ..0000.44072!3 len:102 { "}\n\\" }
│                          ← StrChunk ..0000.231754!1 len:51 { "$" }
│                            ← StrChunk ..0000.231923!2 len:35 { "$}" }
│                              ← StrChunk ..0000.231926!8 len:21 { "\\evalto " }
│                                ← StrChunk ..0000.231925!1 len:0 [1]
│                                → StrChunk ..0000.231940!13 len:13 { "\\mathit{cur}'" }
│                              → StrChunk ..0000.44047!12 len:12 { "\n\\LeftLabel{" }
│                                ← StrChunk ..0000.231921!1 len:0 [1]
│                            → StrChunk ..0000.44068!3 len:15 [3]
│                              ← StrChunk ..0000.231752!2 len:11 { "dx" }
│                                ← StrChunk ..0000.44059!9 len:9 { "\\textsc{I" }
│                              → StrChunk ..0000.231755!3 len:4 { "_1$" }
│                                ← StrChunk ..0000.44071!1 len:1 { "}" }
│                          → StrChunk ..0000.44116!3 len:48 [3]
│                            ← StrChunk ..0000.44076!40 len:44 { "naryInfC{$A_p,\\, \\mathit{expr}.\\" … }
│                              ← StrChunk ..0000.44075!1 len:2 [1]
│                                ← StrChunk ..0000.231812!2 len:2 { "Bi" }
│                              → StrChunk ..0000.231799!1 len:2 [1]
│                                ← StrChunk ..0000.231797!2 len:2 { "dx" }
│                            → StrChunk ..0000.232727!1 len:4 { "i" }
│                              ← StrChunk ..0000.232154!1 len:2 { "(" }
│                                ← StrChunk ..0000.44119!1 len:1 { "}" }
│                              → StrChunk ..0000.232155!1 len:1 { ")" }
│                                ← StrChunk ..0000.231800!1 len:0 [1]
│                        → StrChunk ..0000.233062!24 len:520 { "mathsf{cursor}(\\langle k" }
│                          ← StrChunk ..0000.44212!17 len:345 [17]
│                            ← StrChunk ..0000.44121!7 len:23 { "\\evalto" }
│                              ← StrChunk ..0000.44120!1 len:0 [1]
│                                ← StrChunk ..0000.231801!10 len:0 [10]
│                              → StrChunk ..0000.44130!80 len:16 [80]
│                                ← StrChunk ..0000.231988!16 len:16 { " \\mathit{cur}'$}" }
│                            → StrChunk ..0000.232734!19 len:322 { "\n\n\\begin{prooftree}" }
│                              ← StrChunk ..0000.44368!14 len:16 { "end{prooftree}" }
│                                ← StrChunk ..0000.44229!2 len:2 { "\n\\" }
│                              → StrChunk ..0000.233026!32 len:287 { "}\n\\BinaryInfC{$\\mathit{ctx},\\, \\" }
│                                ← StrChunk ..0000.232769!255 len:255 { "\n\\AxiomC{$k_1 \\in \\mathrm{dom}(\\" … }
│                          → StrChunk ..0000.233133!1 len:151 [1]
│                            ← StrChunk ..0000.233135!44 len:135 { ".\\mathsf{idx}(i)\n    \\evalto \\ma" … }
│                              ← StrChunk ..0000.233112!21 len:39 { "{n-1} \\rangle,\\, k_n)" }
│                                ← StrChunk ..0000.233088!18 len:18 { "_1, k_2, \\dots, k_" }
│                              → StrChunk ..0000.233179!1 len:52 [1]
│                                ← StrChunk ..0000.233181!52 len:52 { "(\\langle k_1, k_2, \\dots, k_{n-1" … }
│                            → StrChunk ..0000.233058!2 len:16 [2]
│                              ← StrChunk ..0000.233086!1 len:0 [1]
│                                ← StrChunk ..0000.233106!3 len:0 [3]
│                              → StrChunk ..0000.232753!16 len:16 { "\n\\end{prooftree}" }
│                                ← StrChunk ..0000.233024!1 len:0 [1]
│                      → StrChunk ..0000.44683!5 len:0 [5]
│                        ← StrChunk ..0000.44645!4 len:0 [4]
│                          ← StrChunk ..0000.44502!124 len:0 [124]
│                            ← StrChunk ..0000.44492!10 len:0 [10]
│                              ← StrChunk ..0000.45552!6 len:0 [6]
│                                ← StrChunk ..0000.93267!9 len:0 [9]
│                                → StrChunk ..0000.44454!10 len:0 [10]
│                              → StrChunk ..0000.232355!3 len:0 [3]
│                                ← StrChunk ..0000.232725!1 len:0 [1]
│                            → StrChunk ..0000.231764!3 len:0 [3]
│                              ← StrChunk ..0000.44634!5 len:0 [5]
│                                ← StrChunk ..0000.44630!2 len:0 [2]
│                              → StrChunk ..0000.231759!1 len:0 [1]
│                                ← StrChunk ..0000.44639!6 len:0 [6]
│                          → StrChunk ..0000.232128!11 len:0 [11]
│                            ← StrChunk ..0000.44652!5 len:0 [5]
│                              ← StrChunk ..0000.232640!1 len:0 [1]
│                                ← StrChunk ..0000.44651!1 len:0 [1]
│                              → StrChunk ..0000.232123!1 len:0 [1]
│                                ← StrChunk ..0000.44661!7 len:0 [7]
│                            → StrChunk ..0000.232141!2 len:0 [2]
│                              ← StrChunk ..0000.44668!12 len:0 [12]
│                                ← StrChunk ..0000.232124!2 len:0 [2]
│                              → StrChunk ..0000.232147!6 len:0 [6]
│                                ← StrChunk ..0000.44680!3 len:0 [3]
│                        → StrChunk ..0000.232221!1 len:0 [1]
│                          ← StrChunk ..0000.44697!1 len:0 [1]
│                            ← StrChunk ..0000.232105!3 len:0 [3]
│                              ← StrChunk ..0000.44688!9 len:0 [9]
│                                ← StrChunk ..0000.232199!21 len:0 [21]
│                              → StrChunk ..0000.232108!1 len:0 [1]
│                                ← StrChunk ..0000.232224!3 len:0 [3]
│                            → StrChunk ..0000.232723!1 len:0 [1]
│                              ← StrChunk ..0000.232242!1 len:0 [1]
│                                ← StrChunk ..0000.44704!4 len:0 [4]
│                              → StrChunk ..0000.232243!2 len:0 [2]
│                                ← StrChunk ..0000.232246!1 len:0 [1]
│                          → StrChunk ..0000.232366!2 len:0 [2]
│                            ← StrChunk ..0000.44708!8 len:0 [8]
│                              ← StrChunk ..0000.232109!11 len:0 [11]
│                                ← StrChunk ..0000.232223!1 len:0 [1]
│                              → StrChunk ..0000.44716!6 len:0 [6]
│                                ← StrChunk ..0000.232359!5 len:0 [5]
│                            → StrChunk ..0000.44728!1 len:0 [1]
│                              ← StrChunk ..0000.232368!3 len:0 [3]
│                                ← StrChunk ..0000.44722!6 len:0 [6]
│                              → StrChunk ..0000.44729!3 len:0 [3]
│                                ← StrChunk ..0000.232372!21 len:0 [21]
│                    → StrChunk ..0000.232530!36 len:667 { "(\\langle\\rangle,\\, k').\\mathsf{i" … }
│                      ← StrChunk ..0000.45560!1 len:210 [1]
│                        ← StrChunk ..0000.44626!2 len:19 [2]
│                          ← StrChunk ..0000.45638!4 len:0 [4]
│                            ← StrChunk ..0000.45654!4 len:0 [4]
│                              ← StrChunk ..0000.45610!13 len:0 [13]
│                                ← StrChunk ..0000.93294!14 len:0 [14]
│                                → StrChunk ..0000.45631!1 len:0 [1]
│                              → StrChunk ..0000.45643!1 len:0 [1]
│                                ← StrChunk ..0000.45632!6 len:0 [6]
│                            → StrChunk ..0000.44657!2 len:0 [2]
│                              ← StrChunk ..0000.44698!3 len:0 [3]
│                                ← StrChunk ..0000.45623!4 len:0 [4]
│                              → StrChunk ..0000.44632!1 len:0 [1]
│                                ← StrChunk ..0000.44649!1 len:0 [1]
│                          → StrChunk ..0000.93309!18 len:19 { "\n\\begin{prooftree}" }
│                            ← StrChunk ..0000.44465!5 len:1 [5]
│                              ← StrChunk ..0000.45558!1 len:0 [1]
│                                ← StrChunk ..0000.44464!1 len:0 [1]
│                              → StrChunk ..0000.44732!1 len:1 { "\n" }
│                                ← StrChunk ..0000.44482!10 len:0 [10]
│                            → StrChunk ..0000.232403!8 len:0 [8]
│                              ← StrChunk ..0000.232419!5 len:0 [5]
│                                ← StrChunk ..0000.232393!10 len:0 [10]
│                              → StrChunk ..0000.44733!1 len:0 [1]
│                                ← StrChunk ..0000.45559!1 len:0 [1]
│                        → StrChunk ..0000.232443!1 len:191 [1]
│                          ← StrChunk ..0000.44828!10 len:25 { "\n\\AxiomC{$" }
│                            ← StrChunk ..0000.44776!1 len:0 [1]
│                              ← StrChunk ..0000.44769!1 len:0 [1]
│                                ← StrChunk ..0000.44734!17 len:0 [17]
│                              → StrChunk ..0000.44777!51 len:0 [51]
│                                ← StrChunk ..0000.44770!6 len:0 [6]
│                            → StrChunk ..0000.232436!3 len:15 { ">0 " }
│                              ← StrChunk ..0000.232435!1 len:1 [1]
│                                ← StrChunk ..0000.232721!1 len:1 { "i" }
│                              → StrChunk ..0000.232445!9 len:11 { "\\wedge\\, " }
│                                ← StrChunk ..0000.232441!2 len:2 { "\\," }
│                          → StrChunk ..0000.93397!34 len:166 { "iomC{$\\mathit{ctx}(\\mathsf{pres}" … }
│                            ← StrChunk ..0000.93357!34 len:75 { " \\,\\wedge\\, k' \\not= \\mathsf{tai" … }
│                              ← StrChunk ..0000.44838!35 len:35 { "\\mathit{ctx}(\\mathsf{next}(k)) =" … }
│                                ← StrChunk ..0000.232439!1 len:0 [1]
│                              → StrChunk ..0000.93391!4 len:6 { "\n\\Ax" }
│                                ← StrChunk ..0000.44873!2 len:2 { "$}" }
│                            → StrChunk ..0000.232434!1 len:57 { "\n" }
│                              ← StrChunk ..0000.93431!15 len:16 { ")) \\not= \\{\\}$}" }
│                                ← StrChunk ..0000.93936!1 len:1 { "'" }
│                              → StrChunk ..0000.232477!37 len:40 { "iomC{$\\mathit{ctx},\\, \\mathsf{cu" … }
│                                ← StrChunk ..0000.232469!3 len:3 { "\\Ax" }
│                      → StrChunk ..0000.232433!1 len:421 { ")" }
│                        ← StrChunk ..0000.232475!2 len:139 { "Tr" }
│                          ← StrChunk ..0000.231771!3 len:59 { "Idx" }
│                            ← StrChunk ..0000.232567!27 len:49 { "-1) \\evalto \\mathit{ctx}'$}" }
│                              ← StrChunk ..0000.232566!1 len:1 [1]
│                                ← StrChunk ..0000.232717!1 len:1 { "i" }
│                              → StrChunk ..0000.44875!21 len:21 { "\n\\LeftLabel{$\\textsc{" }
│                                ← StrChunk ..0000.93395!1 len:0 [1]
│                            → StrChunk ..0000.231775!1 len:7 { "3" }
│                              ← StrChunk ..0000.44900!2 len:2 { "}_" }
│                                ← StrChunk ..0000.44896!4 len:0 [4]
│                              → StrChunk ..0000.44903!4 len:4 { "$}\n\\" }
│                                ← StrChunk ..0000.44902!1 len:0 [1]
│                          → StrChunk ..0000.232428!3 len:78 { "idx" }
│                            ← StrChunk ..0000.93447!2 len:72 [2]
│                              ← StrChunk ..0000.93525!1 len:0 [1]
│                                ← StrChunk ..0000.232473!1 len:0 [1]
│                              → StrChunk ..0000.44908!72 len:72 { "inaryInfC{$\\mathit{ctx},\\, \\math" … }
│                                ← StrChunk ..0000.44907!1 len:0 [1]
│                            → StrChunk ..0000.232431!1 len:3 { "(" }
│                              ← StrChunk ..0000.44984!1 len:1 { "}" }
│                                ← StrChunk ..0000.44980!4 len:0 [4]
│                              → StrChunk ..0000.232432!1 len:1 [1]
│                                ← StrChunk ..0000.232715!1 len:1 { "i" }
│                        → StrChunk ..0000.93546!1 len:281 { "}" }
│                          ← StrChunk ..0000.44751!5 len:58 { "\n\\end" }
│                            ← StrChunk ..0000.44995!44 len:24 [44]
│                              ← StrChunk ..0000.232514!16 len:24 { " \\mathit{ctx}'$}" }
│                                ← StrChunk ..0000.44985!8 len:8 { " \\evalto" }
│                              → StrChunk ..0000.44993!1 len:0 [1]
│                                ← StrChunk ..0000.45578!30 len:0 [30]
│                            → StrChunk ..0000.45571!6 len:29 [6]
│                              ← StrChunk ..0000.93455!9 len:10 { "prooftree" }
│                                ← StrChunk ..0000.44758!1 len:1 { "{" }
│                              → StrChunk ..0000.93526!18 len:19 { "\n\n\\begin{prooftree" }
│                                ← StrChunk ..0000.45577!1 len:1 { "}" }
│                          → StrChunk ..0000.93935!1 len:222 { "'" }
│                            ← StrChunk ..0000.232649!1 len:134 [1]
│                              ← StrChunk ..0000.232719!1 len:11 { "i" }
│                                ← StrChunk ..0000.93563!10 len:10 { "\n\\AxiomC{$" }
│                              → StrChunk ..0000.93573!109 len:123 { "\\mathit{ctx}(\\mathsf{next}(k)) =" … }
│                                ← StrChunk ..0000.232650!14 len:14 { ">0 \\,\\wedge\\, " }
│                            → StrChunk ..0000.232668!3 len:87 { "idx" }
│                              ← StrChunk ..0000.93726!72 len:83 { "\n\\AxiomC{$\\mathit{ctx},\\, \\maths" … }
│                                ← StrChunk ..0000.93682!11 len:11 { ")) = \\{\\}$}" }
│                              → StrChunk ..0000.93802!1 len:1 { "}" }
│                                ← StrChunk ..0000.93798!4 len:0 [4]
│                → StrChunk ..0000.252279!1 len:5486 [1]
│                  ← StrChunk ..0000.94296!2 len:2646 { "$}" }
│                    ← StrChunk ..0000.45449!9 len:757 [9]
│                      ← StrChunk ..0000.93547!16 len:391 { "\n\\end{prooftree}" }
│                        ← StrChunk ..0000.93827!75 len:162 { "\\TrinaryInfC{$\\mathit{ctx},\\, \\m" … }
│                          ← StrChunk ..0000.231782!3 len:56 { "Idx" }
│                            ← StrChunk ..0000.232673!1 len:47 [1]
│                              ← StrChunk ..0000.232672!1 len:2 [1]
│                                ← StrChunk ..0000.232713!1 len:1 { "i" }
│                                → StrChunk ..0000.232675!1 len:1 { ")" }
│                              → StrChunk ..0000.93693!21 len:45 { "\n\\LeftLabel{$\\textsc{" }
│                                ← StrChunk ..0000.93803!24 len:24 { " \\evalto \\mathit{cur}'$}" }
│                            → StrChunk ..0000.231777!1 len:6 { "4" }
│                              ← StrChunk ..0000.93718!2 len:2 { "}_" }
│                                ← StrChunk ..0000.93714!4 len:0 [4]
│                              → StrChunk ..0000.93723!3 len:3 { "$}\n" }
│                                ← StrChunk ..0000.93720!1 len:0 [1]
│                          → StrChunk ..0000.232684!1 len:31 [1]
│                            ← StrChunk ..0000.93906!1 len:6 { "}" }
│                              ← StrChunk ..0000.93902!4 len:3 [4]
│                                ← StrChunk ..0000.232680!3 len:3 { "idx" }
│                              → StrChunk ..0000.232711!1 len:2 { "i" }
│                                ← StrChunk ..0000.232683!1 len:1 { "(" }
│                            → StrChunk ..0000.93930!3 len:25 { "'$}" }
│                              ← StrChunk ..0000.93907!21 len:22 { " \\evalto \\mathit{cur}" }
│                                ← StrChunk ..0000.232685!1 len:1 { ")" }
│                              → StrChunk ..0000.93721!1 len:0 [1]
│                                ← StrChunk ..0000.93928!1 len:0 [1]
│                        → StrChunk ..0000.232693!1 len:213 [1]
│                          ← StrChunk ..0000.45074!85 len:213 [85]
│                            ← StrChunk ..0000.44759!10 len:213 [10]
│                              ← StrChunk ..0000.93544!1 len:211 [1]
│                                ← StrChunk ..0000.233714!211 len:211 { "\n\n\\begin{prooftree}\n\\AxiomC{$i=0" … }
│                              → StrChunk ..0000.45041!17 len:2 [17]
│                                ← StrChunk ..0000.45039!2 len:2 { "\n\n" }
│                            → StrChunk ..0000.45166!53 len:0 [53]
│                              ← StrChunk ..0000.45159!1 len:0 [1]
│                                ← StrChunk ..0000.45160!6 len:0 [6]
│                              → StrChunk ..0000.45219!5 len:0 [5]
│                                ← StrChunk ..0000.232690!3 len:0 [3]
│                          → StrChunk ..0000.45334!6 len:0 [6]
│                            ← StrChunk ..0000.45234!5 len:0 [5]
│                              ← StrChunk ..0000.232694!2 len:0 [2]
│                                ← StrChunk ..0000.232709!1 len:0 [1]
│                              → StrChunk ..0000.231789!3 len:0 [3]
│                                ← StrChunk ..0000.45243!91 len:0 [91]
│                            → StrChunk ..0000.45340!16 len:0 [16]
│                              ← StrChunk ..0000.93934!1 len:0 [1]
│                                ← StrChunk ..0000.231793!1 len:0 [1]
│                              → StrChunk ..0000.45423!22 len:0 [22]
│                                ← StrChunk ..0000.45362!59 len:0 [59]
│                      → StrChunk ..0000.94038!3 len:366 { "ctx" }
│                        ← StrChunk ..0000.45058!16 len:92 [16]
│                          ← StrChunk ..0000.45445!2 len:0 [2]
│                            ← StrChunk ..0000.232707!1 len:0 [1]
│                              ← StrChunk ..0000.45458!5 len:0 [5]
│                                ← StrChunk ..0000.232700!3 len:0 [3]
│                                → StrChunk ..0000.232703!1 len:0 [1]
│                              → StrChunk ..0000.45463!80 len:0 [80]
│                                ← StrChunk ..0000.232704!2 len:0 [2]
│                            → StrChunk ..0000.45356!2 len:0 [2]
│                              ← StrChunk ..0000.45360!1 len:0 [1]
│                                ← StrChunk ..0000.45421!1 len:0 [1]
│                              → StrChunk ..0000.45224!5 len:0 [5]
│                                ← StrChunk ..0000.45239!2 len:0 [2]
│                          → StrChunk ..0000.94059!4 len:92 { "\n   " }
│                            ← StrChunk ..0000.94058!1 len:44 { " " }
│                              ← StrChunk ..0000.93939!37 len:37 { "\\[ \\mathrm{keys}(\\mathit{ctx}) =" … }
│                                ← StrChunk ..0000.93937!2 len:0 [2]
│                              → StrChunk ..0000.93989!6 len:6 { "k \\mid" }
│                                ← StrChunk ..0000.93984!5 len:0 [5]
│                            → StrChunk ..0000.94474!1 len:44 { " " }
│                              ← StrChunk ..0000.94011!10 len:18 { "{mapT}(k) " }
│                                ← StrChunk ..0000.93995!8 len:8 { " \\mathsf" }
│                              → StrChunk ..0000.94446!8 len:25 { "\\mathit{" }
│                                ← StrChunk ..0000.94021!17 len:17 { "\\in \\mathrm{dom}(" }
│                        → StrChunk ..0000.94472!1 len:271 { "}" }
│                          ← StrChunk ..0000.94463!1 len:124 { "}" }
│                            ← StrChunk ..0000.94063!40 len:62 { "\n    \\mathsf{listT}(k) \\in \\math" … }
│                              ← StrChunk ..0000.94041!10 len:11 { ") \\,\\vee\\," }
│                                ← StrChunk ..0000.94454!1 len:1 { "}" }
│                              → StrChunk ..0000.94103!3 len:11 { "ctx" }
│                                ← StrChunk ..0000.94455!8 len:8 { "\\mathit{" }
│                            → StrChunk ..0000.94138!17 len:61 { "\\in \\mathrm{dom}(" }
│                              ← StrChunk ..0000.94473!1 len:33 { " " }
│                                ← StrChunk ..0000.94106!32 len:32 { ") \\,\\vee\\,\n    \\mathsf{regT}(k) " }
│                              → StrChunk ..0000.94155!3 len:11 { "ctx" }
│                                ← StrChunk ..0000.94464!8 len:8 { "\\mathit{" }
│                          → StrChunk ..0000.94159!3 len:146 { "\n\n\\" }
│                            ← StrChunk ..0000.94009!1 len:9 [1]
│                              ← StrChunk ..0000.94051!1 len:1 [1]
│                                ← StrChunk ..0000.94158!1 len:1 { ")" }
│                              → StrChunk ..0000.93976!8 len:8 { "\n\\;\\} \\]" }
│                                ← StrChunk ..0000.94003!3 len:0 [3]
│                            → StrChunk ..0000.94298!17 len:134 { " \\evalto \\mathit{" }
│                              ← StrChunk ..0000.94199!97 len:112 { "}\n\\AxiomC{$A_p,\\, \\mathit{expr} " … }
│                                ← StrChunk ..0000.94180!15 len:15 { "begin{prooftree" }
│                              → StrChunk ..0000.94315!3 len:5 [3]
│                                ← StrChunk ..0000.94321!5 len:5 { "keys}" }
│                    → StrChunk ..0000.55098!1 len:1887 { ")" }
│                      ← StrChunk ..0000.95176!9 len:1255 { "} \\rangle" }
│                        ← StrChunk ..0000.94563!1 len:774 [1]
│                          ← StrChunk ..0000.94555!2 len:162 [2]
│                            ← StrChunk ..0000.94510!10 len:154 { "\n\\AxiomC{$" }
│                              ← StrChunk ..0000.94436!10 len:137 { "prooftree}" }
│                                ← StrChunk ..0000.94326!108 len:108 { "\n\\LeftLabel{$\\textsc{Keys}_1$}\n\\" … }
│                                → StrChunk ..0000.94475!19 len:19 { "\n\n\\begin{prooftree}" }
│                              → StrChunk ..0000.94567!2 len:7 { "it" }
│                                ← StrChunk ..0000.94550!5 len:5 { "\\math" }
│                            → StrChunk ..0000.94558!4 len:8 [4]
│                              ← StrChunk ..0000.94573!3 len:4 { "map" }
│                                ← StrChunk ..0000.94557!1 len:1 { "{" }
│                              → StrChunk ..0000.94576!3 len:4 { " = " }
│                                ← StrChunk ..0000.94562!1 len:1 { "}" }
│                          → StrChunk ..0000.94494!16 len:612 { "\n\\end{prooftree}" }
│                            ← StrChunk ..0000.94778!73 len:292 { "mathsf{cursor}(\\langle\\rangle,\\," … }
│                              ← StrChunk ..0000.94581!189 len:219 { "$}\n\\AxiomC{$\\mathit{keys} = \\{\\;" … }
│                                ← StrChunk ..0000.94520!30 len:30 { "\\mathit{ctx}(\\mathsf{mapT}(k))" }
│                              → StrChunk ..0000.94564!1 len:0 [1]
│                                ← StrChunk ..0000.94770!4 len:0 [4]
│                            → StrChunk ..0000.95237!1 len:304 { "}" }
│                              ← StrChunk ..0000.94886!91 len:110 { "\n\\AxiomC{$k_1 \\in \\mathrm{dom}(\\" … }
│                                ← StrChunk ..0000.94851!19 len:19 { "\n\n\\begin{prooftree}" }
│                              → StrChunk ..0000.95095!79 len:193 { "$}\n\\BinaryInfC{$\\mathit{ctx},\\, " … }
│                                ← StrChunk ..0000.94977!114 len:114 { "(\\langle k_2, \\dots, k_{n-1} \\ra" … }
│                        → StrChunk ..0000.51855!3 len:472 [3]
│                          ← StrChunk ..0000.94434!1 len:135 [1]
│                            ← StrChunk ..0000.95174!1 len:66 [1]
│                              ← StrChunk ..0000.95185!1 len:50 [1]
│                                ← StrChunk ..0000.95187!50 len:50 { ",\\, k_n).\\mathsf{keys}\n    \\eval" … }
│                              → StrChunk ..0000.94870!16 len:16 { "\n\\end{prooftree}" }
│                                ← StrChunk ..0000.95091!2 len:0 [2]
│                            → StrChunk ..0000.51773!19 len:69 { "\n\n\\begin{prooftree}" }
│                              ← StrChunk ..0000.94162!9 len:0 [9]
│                                ← StrChunk ..0000.94195!2 len:0 [2]
│                              → StrChunk ..0000.51889!3 len:50 { "cur" }
│                                ← StrChunk ..0000.51808!47 len:47 { "\n\\AxiomC{$A_p,\\, \\mathit{expr} \\" … }
│                          → StrChunk ..0000.52039!104 len:337 { "\n\n\\begin{prooftree}\n\\AxiomC{$\\ma" … }
│                            ← StrChunk ..0000.51931!108 len:189 { "val}$}\n\\LeftLabel{$\\textsc{Val}_" … }
│                              ← StrChunk ..0000.51892!37 len:65 { "cur}.\\mathsf{values} \\evalto \\ma" … }
│                                ← StrChunk ..0000.51858!28 len:28 { "}$}\n\\AxiomC{$A_p,\\, \\mathit{" }
│                              → StrChunk ..0000.51792!16 len:16 { "\n\\end{prooftree}" }
│                                ← StrChunk ..0000.51929!1 len:0 [1]
│                            → StrChunk ..0000.55096!2 len:44 { "}(" }
│                              ← StrChunk ..0000.55104!2 len:12 { "ge" }
│                                ← StrChunk ..0000.55086!10 len:10 { "mathrm{ran" }
│                              → StrChunk ..0000.52193!30 len:30 { "\\mathit{ctx}(\\mathsf{regT}(k))" }
│                                ← StrChunk ..0000.52143!50 len:0 [50]
│                      → StrChunk ..0000.43541!26 len:631 [26]
│                        ← StrChunk ..0000.52503!1 len:532 [1]
│                          ← StrChunk ..0000.52505!19 len:516 { "),\\, \\mathsf{cursor" }
│                            ← StrChunk ..0000.52262!13 len:243 { "\\BinaryInfC{$" }
│                              ← StrChunk ..0000.52228!32 len:32 { "$}\n\\LeftLabel{$\\textsc{Val}_2$}\n" }
│                                ← StrChunk ..0000.52223!5 len:0 [5]
│                              → StrChunk ..0000.52431!72 len:198 { "\n\\AxiomC{$k_1 \\in \\mathrm{dom}(\\" … }
│                                ← StrChunk ..0000.52289!126 len:126 { "\\mathit{ctx},\\, \\mathsf{cursor}(" … }
│                            → StrChunk ..0000.52526!21 len:254 { "\\langle k_2, \\dots, k" }
│                              ← StrChunk ..0000.52524!1 len:2 { "(" }
│                                ← StrChunk ..0000.52525!1 len:1 { "}" }
│                              → StrChunk ..0000.52547!1 len:231 [1]
│                                ← StrChunk ..0000.52549!231 len:231 { "_{n-1} \\rangle,\\, k_n).\\mathsf{v" … }
│                          → StrChunk ..0000.44231!28 len:16 [28]
│                            ← StrChunk ..0000.52260!1 len:16 [1]
│                              ← StrChunk ..0000.52275!7 len:16 [7]
│                                ← StrChunk ..0000.52415!16 len:16 { "\n\\end{prooftree}" }
│                              → StrChunk ..0000.44470!6 len:0 [6]
│                                ← StrChunk ..0000.44756!1 len:0 [1]
│                            → StrChunk ..0000.44016!1 len:0 [1]
│                              ← StrChunk ..0000.44042!2 len:0 [2]
│                                ← StrChunk ..0000.44128!1 len:0 [1]
│                              → StrChunk ..0000.43532!7 len:0 [7]
│                                ← StrChunk ..0000.43993!1 len:0 [1]
│                        → StrChunk ..0000.42514!31 len:99 { "\n\\caption{Rules for evaluating " }
│                          ← StrChunk ..0000.43329!9 len:0 [9]
│                            ← StrChunk ..0000.43451!1 len:0 [1]
│                              ← StrChunk ..0000.43463!5 len:0 [5]
│                                ← StrChunk ..0000.43539!1 len:0 [1]
│                              → StrChunk ..0000.43357!3 len:0 [3]
│                                ← StrChunk ..0000.43417!11 len:0 [11]
│                            → StrChunk ..0000.43058!2 len:0 [2]
│                              ← StrChunk ..0000.43102!1 len:0 [1]
│                                ← StrChunk ..0000.43246!1 len:0 [1]
│                              → StrChunk ..0000.42613!1 len:0 [1]
│                                ← StrChunk ..0000.42857!1 len:0 [1]
│                          → StrChunk ..0000.42577!12 len:68 { "}\\label{fig:" }
│                            ← StrChunk ..0000.154769!1 len:12 { "s" }
│                              ← StrChunk ..0000.42548!10 len:10 { "expression" }
│                                ← StrChunk ..0000.42545!3 len:0 [3]
│                              → StrChunk ..0000.42558!19 len:1 [19]
│                                ← StrChunk ..0000.154773!1 len:1 { "." }
│                            → StrChunk ..0000.42489!14 len:44 { "\n\\end{figure*}" }
│                              ← StrChunk ..0000.42589!1 len:11 [1]
│                                ← StrChunk ..0000.42591!11 len:11 { "expr-rules}" }
│                              → StrChunk ..0000.252311!1 len:19 { "S" }
│                                ← StrChunk ..0000.252261!18 len:18 { "\n\n\\section{Formal " }
│                  → StrChunk ..0000.58388!25 len:2840 { "formalizes the assumption" }
│                    ← StrChunk ..0000.57971!8 len:805 [8]
│                      ← StrChunk ..0000.229023!4 len:574 { "neq " }
│                        ← StrChunk ..0000.47100!4 len:368 { "The " }
│                          ← StrChunk ..0000.47031!4 len:212 [4]
│                            ← StrChunk ..0000.250594!1 len:157 [1]
│                              ← StrChunk ..0000.47016!2 len:137 { "\n\n" }
│                                ← StrChunk ..0000.252280!30 len:30 { "emantics}\\label{sec:semantics}" }
│                                → StrChunk ..0000.250596!105 len:105 { "We now explain formally how to a" … }
│                              → StrChunk ..0000.154192!7 len:20 { "replica" }
│                                ← StrChunk ..0000.47018!13 len:13 { "The state of " }
│                            → StrChunk ..0000.47053!4 len:55 [4]
│                              ← StrChunk ..0000.47095!2 len:20 { "by" }
│                                ← StrChunk ..0000.47035!18 len:18 { " $p$ is described " }
│                              → StrChunk ..0000.47097!1 len:35 { " " }
│                                ← StrChunk ..0000.47057!34 len:34 { " $A_p$, a finite partial functio" … }
│                          → StrChunk ..0000.47166!37 len:152 { "inspect and modify this local st" … }
│                            ← StrChunk ..0000.47109!9 len:41 [9]
│                              ← StrChunk ..0000.47104!3 len:19 [3]
│                                ← StrChunk ..0000.180605!19 len:19 { "evaluation rules of" }
│                              → StrChunk ..0000.47140!26 len:22 [26]
│                                ← StrChunk ..0000.47118!22 len:22 { " the command language " }
│                            → StrChunk ..0000.228963!58 len:74 { " do not depend on $A_q$ (the sta" … }
│                              ← StrChunk ..0000.180655!4 len:14 { "they" }
│                                ← StrChunk ..0000.47209!10 len:10 { "A_p$, and " }
│                              → StrChunk ..0000.229021!1 len:2 { "\\" }
│                                ← StrChunk ..0000.229022!1 len:1 { " " }
│                        → StrChunk ..0000.47293!25 len:202 { ". The only communication " }
│                          ← StrChunk ..0000.154580!1 len:3 [1]
│                            ← StrChunk ..0000.47219!17 len:3 [17]
│                              ← StrChunk ..0000.229027!1 len:3 [1]
│                                ← StrChunk ..0000.229029!3 len:3 { "p$)" }
│                              → StrChunk ..0000.47262!3 len:0 [3]
│                                ← StrChunk ..0000.47238!18 len:0 [18]
│                            → StrChunk ..0000.47284!6 len:0 [6]
│                              ← StrChunk ..0000.154203!7 len:0 [7]
│                                ← StrChunk ..0000.47265!19 len:0 [19]
│                              → StrChunk ..0000.47290!3 len:0 [3]
│                                ← StrChunk ..0000.154575!1 len:0 [1]
│                          → StrChunk ..0000.154227!7 len:174 { "replica" }
│                            ← StrChunk ..0000.47330!5 len:162 [5]
│                              ← StrChunk ..0000.154215!8 len:16 { "replicas" }
│                                ← StrChunk ..0000.47322!8 len:8 { "between " }
│                              → StrChunk ..0000.47425!58 len:146 { ", we concentrate on the executio" … }
│                                ← StrChunk ..0000.47335!88 len:88 { " occurs in the evaluation of the" … }
│                            → StrChunk ..0000.47492!33 len:5 [33]
│                              ← StrChunk ..0000.47487!5 len:5 { " $p$." }
│                                ← StrChunk ..0000.47483!4 len:0 [4]
│                              → StrChunk ..0000.47525!138 len:0 [138]
│                                ← StrChunk ..0000.154238!7 len:0 [7]
│                      → StrChunk ..0000.48207!7 len:231 [7]
│                        ← StrChunk ..0000.58171!86 len:0 [86]
│                          ← StrChunk ..0000.57991!138 len:0 [138]
│                            ← StrChunk ..0000.57980!2 len:0 [2]
│                              ← StrChunk ..0000.47680!25 len:0 [25]
│                                ← StrChunk ..0000.47663!15 len:0 [15]
│                                → StrChunk ..0000.57854!42 len:0 [42]
│                              → StrChunk ..0000.57983!4 len:0 [4]
│                                ← StrChunk ..0000.57896!21 len:0 [21]
│                            → StrChunk ..0000.47705!55 len:0 [55]
│                              ← StrChunk ..0000.57917!1 len:0 [1]
│                                ← StrChunk ..0000.57987!2 len:0 [2]
│                              → StrChunk ..0000.47767!17 len:0 [17]
│                                ← StrChunk ..0000.47764!1 len:0 [1]
│                          → StrChunk ..0000.47873!16 len:0 [16]
│                            ← StrChunk ..0000.47840!3 len:0 [3]
│                              ← StrChunk ..0000.47821!15 len:0 [15]
│                                ← StrChunk ..0000.47784!35 len:0 [35]
│                              → StrChunk ..0000.58366!1 len:0 [1]
│                                ← StrChunk ..0000.47863!10 len:0 [10]
│                            → StrChunk ..0000.47982!14 len:0 [14]
│                              ← StrChunk ..0000.47907!67 len:0 [67]
│                                ← StrChunk ..0000.47893!12 len:0 [12]
│                              → StrChunk ..0000.47996!209 len:0 [209]
│                                ← StrChunk ..0000.58367!4 len:0 [4]
│                        → StrChunk ..0000.48415!1 len:231 { "t" }
│                          ← StrChunk ..0000.252343!1 len:72 { "E" }
│                            ← StrChunk ..0000.48310!1 len:25 [1]
│                              ← StrChunk ..0000.49886!14 len:0 [14]
│                                ← StrChunk ..0000.48216!94 len:0 [94]
│                              → StrChunk ..0000.102136!24 len:25 { "\n\\subsection{Expression " }
│                                ← StrChunk ..0000.48311!1 len:1 { "\n" }
│                            → StrChunk ..0000.48312!1 len:46 { "\n" }
│                              ← StrChunk ..0000.102161!11 len:11 { "valuation}\n" }
│                                ← StrChunk ..0000.102160!1 len:0 [1]
│                              → StrChunk ..0000.48392!22 len:34 { "fig:expr-rules} gives " }
│                                ← StrChunk ..0000.48378!12 len:12 { "Figure~\\ref{" }
│                          → StrChunk ..0000.48428!7 len:158 [7]
│                            ← StrChunk ..0000.48314!64 len:85 { "he rules for evaluating EXPR exp" … }
│                              ← StrChunk ..0000.48313!1 len:0 [1]
│                                ← StrChunk ..0000.48390!1 len:0 [1]
│                              → StrChunk ..0000.48488!9 len:21 { "evaluated" }
│                                ← StrChunk ..0000.48416!12 len:12 { ", which are " }
│                            → StrChunk ..0000.48464!4 len:73 [4]
│                              ← StrChunk ..0000.154249!7 len:36 { "replica" }
│                                ← StrChunk ..0000.48435!29 len:29 { " in the context of the local " }
│                              → StrChunk ..0000.48497!24 len:37 { " The \\textsc{Exec} rule " }
│                                ← StrChunk ..0000.48468!13 len:13 { " state $A_p$." }
│                    → StrChunk ..0000.254057!31 len:2010 { "in Section~\\ref{sec:lamport-ts}" }
│                      ← StrChunk ..0000.48998!14 len:1197 { "unambiguously " }
│                        ← StrChunk ..0000.48831!21 len:507 { "~\\ref{fig:expr-rules}" }
│                          ← StrChunk ..0000.253902!10 len:430 { " following" }
│                            ← StrChunk ..0000.253756!3 len:404 { ". T" }
│                              ← StrChunk ..0000.48528!144 len:287 { " that commands are executed sequ" … }
│                                ← StrChunk ..0000.48521!7 len:0 [7]
│                                → StrChunk ..0000.253759!143 len:143 { " (the notation $A_p[\\,x \\,\\mapst" … }
│                              → StrChunk ..0000.48679!114 len:114 { "he corresponding \\textsc{Var} ru" … }
│                                ← StrChunk ..0000.48672!7 len:0 [7]
│                            → StrChunk ..0000.48813!10 len:16 { " rules in " }
│                              ← StrChunk ..0000.48804!9 len:0 [9]
│                                ← StrChunk ..0000.48793!1 len:0 [1]
│                              → StrChunk ..0000.48917!1 len:6 [1]
│                                ← StrChunk ..0000.48825!6 len:6 { "Figure" }
│                          → StrChunk ..0000.48887!6 len:56 [6]
│                            ← StrChunk ..0000.48873!8 len:42 { "evaluate" }
│                              ← StrChunk ..0000.48852!1 len:27 { " " }
│                                ← StrChunk ..0000.48919!26 len:26 { " show how an expression is" }
│                              → StrChunk ..0000.48881!6 len:7 { " to a " }
│                                ← StrChunk ..0000.48945!1 len:1 { "d" }
│                            → StrChunk ..0000.48899!6 len:14 [6]
│                              ← StrChunk ..0000.96502!7 len:13 { ", which" }
│                                ← StrChunk ..0000.48893!6 len:6 { "cursor" }
│                              → StrChunk ..0000.48984!1 len:1 { " " }
│                                ← StrChunk ..0000.48974!10 len:0 [10]
│                        → StrChunk ..0000.49879!1 len:676 [1]
│                          ← StrChunk ..0000.49246!75 len:333 { ", where it can be used to locate" … }
│                            ← StrChunk ..0000.49138!104 len:248 { "A cursor consists only of immuta" … }
│                              ← StrChunk ..0000.49012!124 len:137 { "particular position in a JSON do" … }
│                                ← StrChunk ..0000.48985!13 len:13 { "identifies a " }
│                              → StrChunk ..0000.49242!4 len:7 [4]
│                                ← StrChunk ..0000.154260!7 len:7 { "replica" }
│                            → StrChunk ..0000.49881!1 len:10 { "\n" }
│                              ← StrChunk ..0000.49875!4 len:6 { "ple," }
│                                ← StrChunk ..0000.49867!2 len:2 { "am" }
│                              → StrChunk ..0000.49882!1 len:3 [1]
│                                ← StrChunk ..0000.58373!3 len:3 { "\\[ " }
│                          → StrChunk ..0000.49883!1 len:343 [1]
│                            ← StrChunk ..0000.49329!114 len:117 { "\\mathsf{cursor}(\\langle \\mathsf{" … }
│                              ← StrChunk ..0000.49321!8 len:0 [8]
│                                ← StrChunk ..0000.49869!3 len:0 [3]
│                              → StrChunk ..0000.49443!1 len:3 [1]
│                                ← StrChunk ..0000.58378!3 len:3 { " \\]" }
│                            → StrChunk ..0000.49445!84 len:226 { "is a cursor representing the lis" … }
│                              ← StrChunk ..0000.49444!1 len:1 [1]
│                                ← StrChunk ..0000.49884!1 len:1 { "\n" }
│                              → StrChunk ..0000.256991!18 len:141 { "these identifiers " }
│                                ← StrChunk ..0000.253934!123 len:123 { ", assuming that $\\mathit{id}_1$ " … }
│                      → StrChunk ..0000.49904!8 len:782 { "finishes" }
│                        ← StrChunk ..0000.49576!27 len:241 { ", read from left to right: " }
│                          ← StrChunk ..0000.49547!29 len:90 { " can be interpreted as a path" }
│                            ← StrChunk ..0000.49529!2 len:13 { ". " }
│                              ← StrChunk ..0000.254122!1 len:1 { ")" }
│                                ← StrChunk ..0000.254088!34 len:0 [34]
│                              → StrChunk ..0000.49545!2 len:10 [2]
│                                ← StrChunk ..0000.254125!10 len:10 { "The cursor" }
│                            → StrChunk ..0000.49615!10 len:48 { " structure" }
│                              ← StrChunk ..0000.253166!20 len:32 { " local replica state" }
│                                ← StrChunk ..0000.49603!12 len:12 { " through the" }
│                              → StrChunk ..0000.49625!34 len:6 [34]
│                                ← StrChunk ..0000.253186!6 len:6 { " $A_p$" }
│                          → StrChunk ..0000.49777!1 len:124 { "\\" }
│                            ← StrChunk ..0000.49772!5 len:104 { "entry" }
│                              ← StrChunk ..0000.49682!58 len:77 { "textsf{doc} map at the root, it " … }
│                                ← StrChunk ..0000.49659!19 len:19 { "starting from the \\" }
│                              → StrChunk ..0000.49743!22 len:22 { " ``shopping'' of type " }
│                                ← StrChunk ..0000.49740!3 len:0 [3]
│                            → StrChunk ..0000.49782!3 len:19 { "sf{" }
│                              ← StrChunk ..0000.49778!4 len:4 [4]
│                                ← StrChunk ..0000.49856!4 len:4 { "text" }
│                              → StrChunk ..0000.49785!8 len:12 { "T}, and " }
│                                ← StrChunk ..0000.49765!4 len:4 { "list" }
│                        → StrChunk ..0000.50151!1 len:533 [1]
│                          ← StrChunk ..0000.49912!14 len:242 { "\n\nIn general, " }
│                            ← StrChunk ..0000.254139!8 len:59 { "that has" }
│                              ← StrChunk ..0000.49797!23 len:23 { " with the list element " }
│                                ← StrChunk ..0000.49793!4 len:0 [4]
│                              → StrChunk ..0000.49824!28 len:28 { " identifier $\\mathit{id}_1$." }
│                                ← StrChunk ..0000.49820!4 len:0 [4]
│                            → StrChunk ..0000.50092!17 len:169 { " (possibly empty)" }
│                              ← StrChunk ..0000.50019!38 len:75 { "k_{n-1} \\rangle,\\, k_n)$ consist" … }
│                                ← StrChunk ..0000.49978!37 len:37 { "$\\mathsf{cursor}(\\langle k_1, \\d" … }
│                              → StrChunk ..0000.50109!42 len:77 { ", k_{n-1} \\rangle$, and a final " … }
│                                ← StrChunk ..0000.50057!35 len:35 { " vector of keys $\\langle k_1, \\d" … }
│                          → StrChunk ..0000.254147!16 len:291 { " being traversed" }
│                            ← StrChunk ..0000.50176!89 len:227 { ". $k_n$ can be thought of as the" … }
│                              ← StrChunk ..0000.50175!1 len:23 [1]
│                                ← StrChunk ..0000.50152!23 len:23 { "which is always present" }
│                              → StrChunk ..0000.58441!47 len:115 { "are tagged with the datatype of " … }
│                                ← StrChunk ..0000.50267!68 len:68 { "t is not tagged with a datatype," … }
│                            → StrChunk ..0000.50357!12 len:48 [12]
│                              ← StrChunk ..0000.50335!16 len:8 [16]
│                                ← StrChunk ..0000.58488!8 len:8 { ", either" }
│                              → StrChunk ..0000.50374!39 len:40 { "\\textsf{mapT} or \\textsf{listT}." … }
│                                ← StrChunk ..0000.50369!1 len:1 { " " }
│        → StrChunk ..0000.156130!1 len:55985 [1]
│          ← StrChunk ..0000.72531!2 len:29084 { "\n\n" }
│            ← StrChunk ..0000.257478!1 len:13427 [1]
│              ← StrChunk ..0000.61707!17 len:6247 { "In order to gener" }
│                ← StrChunk ..0000.58638!16 len:3909 [16]
│                  ← StrChunk ..0000.255790!3 len:2954 [3]
│                    ← StrChunk ..0000.254318!7 len:2020 [7]
│                      ← StrChunk ..0000.52825!4 len:715 [4]
│                        ← StrChunk ..0000.96552!1 len:451 [1]
│                          ← StrChunk ..0000.50951!9 len:254 { "\\verb|doc" }
│                            ← StrChunk ..0000.50660!41 len:229 { "The \\textsc{Get} rule navigates " … }
│                              ← StrChunk ..0000.50494!63 len:126 { ", referencing the root of the do" … }
│                                ← StrChunk ..0000.50701!50 len:50 { " $\\mathsf{cursor}(\\langle\\rangle" … }
│                                → StrChunk ..0000.50561!13 len:13 { "textsf{doc}. " }
│                              → StrChunk ..0000.50914!33 len:62 { "map. For example, the expression" … }
│                                ← StrChunk ..0000.50751!29 len:29 { "to a particular key within a " }
│                            → StrChunk ..0000.50960!5 len:16 [5]
│                              ← StrChunk ..0000.96550!1 len:5 [1]
│                                ← StrChunk ..0000.253734!5 len:5 { ".get(" }
│                              → StrChunk ..0000.253740!1 len:11 { ")" }
│                                ← StrChunk ..0000.50965!10 len:10 { "\"shopping\"" }
│                          → StrChunk ..0000.52821!4 len:197 { "|doc" }
│                            ← StrChunk ..0000.51015!138 len:184 { "$\\mathsf{cursor}(\\langle \\mathsf" … }
│                              ← StrChunk ..0000.50976!15 len:15 { "| evaluates to " }
│                                ← StrChunk ..0000.50975!1 len:0 [1]
│                              → StrChunk ..0000.52799!20 len:31 { "the expression \\verb" }
│                                ← StrChunk ..0000.52780!11 len:11 { " Note that " }
│                            → StrChunk ..0000.96558!3 len:9 { "..." }
│                              ← StrChunk ..0000.96557!1 len:5 [1]
│                                ← StrChunk ..0000.253742!5 len:5 { ".get(" }
│                              → StrChunk ..0000.96561!1 len:1 [1]
│                                ← StrChunk ..0000.253748!1 len:1 { ")" }
│                        → StrChunk ..0000.254169!1 len:264 { "$" }
│                          ← StrChunk ..0000.52880!3 len:121 [3]
│                            ← StrChunk ..0000.52856!4 len:109 [4]
│                              ← StrChunk ..0000.52890!4 len:31 { "text" }
│                                ← StrChunk ..0000.52829!27 len:27 { "| implicitly asserts that \\" }
│                              → StrChunk ..0000.52894!58 len:78 { "textsf{mapT}, and this assertion" … }
│                                ← StrChunk ..0000.52860!20 len:20 { "sf{doc} is of type \\" }
│                            → StrChunk ..0000.51153!5 len:12 { "\n\nThe" }
│                              ← StrChunk ..0000.52791!4 len:0 [4]
│                                ← StrChunk ..0000.52819!1 len:0 [1]
│                              → StrChunk ..0000.51158!1 len:7 { " " }
│                                ← StrChunk ..0000.254163!6 len:6 { " rules" }
│                          → StrChunk ..0000.254179!3 len:142 { "_{1" }
│                            ← StrChunk ..0000.51168!3 len:12 [3]
│                              ← StrChunk ..0000.254177!2 len:11 { "dx" }
│                                ← StrChunk ..0000.51159!9 len:9 { "\\textsc{I" }
│                              → StrChunk ..0000.51171!1 len:1 { "}" }
│                                ← StrChunk ..0000.254170!2 len:0 [2]
│                            → StrChunk ..0000.254242!8 len:127 { ".idx(|$n" }
│                              ← StrChunk ..0000.254239!3 len:55 [3]
│                                ← StrChunk ..0000.254184!55 len:55 { " \\dots 5}$ define how to evaluat" … }
│                              → StrChunk ..0000.254263!55 len:64 { ", moving the cursor to a particu" … }
│                                ← StrChunk ..0000.254252!9 len:9 { "$\\verb|)|" }
│                      → StrChunk ..0000.259166!1 len:1305 { "-" }
│                        ← StrChunk ..0000.255167!69 len:988 { "ps $\\mathsf{next}(k)$ to the ID " … }
│                          ← StrChunk ..0000.255310!27 len:808 { " that are marked as deleted" }
│                            ← StrChunk ..0000.254807!185 len:641 { "ound.\n\n$\\textsc{Idx}_5$ terminat" … }
│                              ← StrChunk ..0000.254406!247 len:443 { "and delegates to the subsequent " … }
│                                ← StrChunk ..0000.254327!72 len:72 { "$\\textsc{Idx}_1$ constructs a cu" … }
│                                → StrChunk ..0000.254679!124 len:124 { "that stores the list in question" … }
│                              → StrChunk ..0000.255000!13 len:13 { "list elements" }
│                                ← StrChunk ..0000.254992!8 len:0 [8]
│                            → StrChunk ..0000.255024!18 len:140 { "structure resemble" }
│                              ← StrChunk ..0000.255019!5 len:6 [5]
│                                ← StrChunk ..0000.255013!6 len:6 { ". The " }
│                              → StrChunk ..0000.255064!101 len:116 { ": each list element has a unique" … }
│                                ← StrChunk ..0000.255044!15 len:15 { "s a linked list" }
│                          → StrChunk ..0000.255391!22 len:111 { " linked list structure" }
│                            ← StrChunk ..0000.255338!7 len:45 { "Deleted" }
│                              ← StrChunk ..0000.255337!1 len:2 [1]
│                                ← StrChunk ..0000.255414!2 len:2 { "\n\n" }
│                              → StrChunk ..0000.255350!36 len:36 { " elements are never removed from" … }
│                                ← StrChunk ..0000.255345!5 len:0 [5]
│                            → StrChunk ..0000.259134!12 len:44 { "they become " }
│                              ← StrChunk ..0000.259122!2 len:30 { " (" }
│                                ← StrChunk ..0000.255444!28 len:28 { ", but only marked as deleted" }
│                              → StrChunk ..0000.259169!1 len:2 [1]
│                                ← StrChunk ..0000.259164!2 len:2 { "so" }
│                        → StrChunk ..0000.255561!25 len:316 { " list element with ID $k$" }
│                          ← StrChunk ..0000.255595!4 len:114 { "main" }
│                            ← StrChunk ..0000.259146!18 len:56 { "\\emph{tombstones})" }
│                              ← StrChunk ..0000.259167!1 len:7 [1]
│                                ← StrChunk ..0000.259171!7 len:7 { "called " }
│                              → StrChunk ..0000.255472!31 len:31 { ". To this end, the local state " }
│                                ← StrChunk ..0000.259124!5 len:0 [5]
│                            → StrChunk ..0000.255600!3 len:54 { "the" }
│                              ← StrChunk ..0000.255506!51 len:51 { "tains a \\emph{presence set} $\\ma" … }
│                                ← StrChunk ..0000.255503!3 len:0 [3]
│                              → StrChunk ..0000.255557!4 len:0 [4]
│                                ← StrChunk ..0000.255591!1 len:0 [1]
│                          → StrChunk ..0000.255692!1 len:177 [1]
│                            ← StrChunk ..0000.255621!3 len:77 [3]
│                              ← StrChunk ..0000.255586!1 len:7 [1]
│                                ← StrChunk ..0000.256018!7 len:7 { ", which" }
│                              → StrChunk ..0000.256026!2 len:70 { "is" }
│                                ← StrChunk ..0000.255624!68 len:68 { " is the set of all operations th" … }
│                            → StrChunk ..0000.256032!6 len:100 { "which " }
│                              ← StrChunk ..0000.255751!35 len:89 { "sence set is set to the empty se" … }
│                                ← StrChunk ..0000.255693!54 len:54 { " list element. When a list eleme" … }
│                              → StrChunk ..0000.256031!1 len:5 { "s" }
│                                ← StrChunk ..0000.255786!4 len:4 { "mark" }
│                    → StrChunk ..0000.51511!1 len:934 [1]
│                      ← StrChunk ..0000.255261!14 len:402 [14]
│                        ← StrChunk ..0000.258140!1 len:400 { "," }
│                          ← StrChunk ..0000.256092!14 len:362 { "empty presence" }
│                            ← StrChunk ..0000.256041!42 len:272 { "Rule $\\textsc{Idx}_4$ handles li" … }
│                              ← StrChunk ..0000.255992!22 len:220 { "~\\ref{fig:todo-item})." }
│                                ← StrChunk ..0000.255793!197 len:197 { " it as deleted; however, a concu" … }
│                                → StrChunk ..0000.256038!1 len:1 { " " }
│                              → StrChunk ..0000.256106!3 len:10 { "an " }
│                                ← StrChunk ..0000.256085!7 len:7 { "s with " }
│                            → StrChunk ..0000.258139!1 len:76 { "(" }
│                              ← StrChunk ..0000.258137!1 len:71 { " " }
│                                ← StrChunk ..0000.256109!70 len:70 { " set by moving to the next list " … }
│                              → StrChunk ..0000.257048!4 len:4 { "i.e." }
│                                ← StrChunk ..0000.257046!2 len:0 [2]
│                          → StrChunk ..0000.255990!1 len:37 [1]
│                            ← StrChunk ..0000.256179!1 len:37 { "." }
│                              ← StrChunk ..0000.258141!1 len:36 { ")" }
│                                ← StrChunk ..0000.257052!35 len:35 { " not counting them as list eleme" … }
│                              → StrChunk ..0000.256039!1 len:0 [1]
│                                ← StrChunk ..0000.256083!1 len:0 [1]
│                            → StrChunk ..0000.255616!2 len:0 [2]
│                              ← StrChunk ..0000.255603!1 len:0 [1]
│                                ← StrChunk ..0000.255747!2 len:0 [2]
│                              → StrChunk ..0000.255236!1 len:0 [1]
│                                ← StrChunk ..0000.255604!6 len:0 [6]
│                        → StrChunk ..0000.254250!1 len:2 [1]
│                          ← StrChunk ..0000.255165!1 len:2 [1]
│                            ← StrChunk ..0000.255285!3 len:0 [3]
│                              ← StrChunk ..0000.255291!11 len:0 [11]
│                                ← StrChunk ..0000.255283!2 len:0 [2]
│                              → StrChunk ..0000.255237!12 len:0 [12]
│                                ← StrChunk ..0000.255275!4 len:0 [4]
│                            → StrChunk ..0000.254653!13 len:2 [13]
│                              ← StrChunk ..0000.254803!2 len:0 [2]
│                                ← StrChunk ..0000.255042!1 len:0 [1]
│                              → StrChunk ..0000.254261!2 len:2 { "\n\n" }
│                                ← StrChunk ..0000.254325!1 len:0 [1]
│                          → StrChunk ..0000.51255!52 len:0 [52]
│                            ← StrChunk ..0000.51182!27 len:0 [27]
│                              ← StrChunk ..0000.51172!8 len:0 [8]
│                                ← StrChunk ..0000.254182!1 len:0 [1]
│                              → StrChunk ..0000.51240!11 len:0 [11]
│                                ← StrChunk ..0000.51217!15 len:0 [15]
│                            → StrChunk ..0000.51356!27 len:0 [27]
│                              ← StrChunk ..0000.96567!4 len:0 [4]
│                                ← StrChunk ..0000.51309!47 len:0 [47]
│                              → StrChunk ..0000.51383!1 len:0 [1]
│                                ← StrChunk ..0000.51510!1 len:0 [1]
│                      → StrChunk ..0000.53004!9 len:532 [9]
│                        ← StrChunk ..0000.96893!5 len:313 [5]
│                          ← StrChunk ..0000.51664!15 len:0 [15]
│                            ← StrChunk ..0000.51384!126 len:0 [126]
│                              ← StrChunk ..0000.96574!7 len:0 [7]
│                                ← StrChunk ..0000.97224!3 len:0 [3]
│                                → StrChunk ..0000.51512!4 len:0 [4]
│                              → StrChunk ..0000.51681!1 len:0 [1]
│                                ← StrChunk ..0000.51555!109 len:0 [109]
│                            → StrChunk ..0000.51682!85 len:0 [85]
│                              ← StrChunk ..0000.51679!1 len:0 [1]
│                                ← StrChunk ..0000.96582!1 len:0 [1]
│                              → StrChunk ..0000.96622!265 len:0 [265]
│                                ← StrChunk ..0000.96583!23 len:0 [23]
│                          → StrChunk ..0000.96891!1 len:313 [1]
│                            ← StrChunk ..0000.97013!17 len:248 [17]
│                              ← StrChunk ..0000.96930!83 len:83 { "The $\\textsc{Keys}_{1,2,3}$ rule" … }
│                                ← StrChunk ..0000.96900!30 len:0 [30]
│                              → StrChunk ..0000.96898!1 len:165 [1]
│                                ← StrChunk ..0000.97030!165 len:165 { "in a map. This set is determined" … }
│                            → StrChunk ..0000.52952!44 len:65 { "\n\nFinally, the $\\textsc{Val}_{1," … }
│                              ← StrChunk ..0000.96606!8 len:0 [8]
│                                ← StrChunk ..0000.96887!2 len:0 [2]
│                              → StrChunk ..0000.97204!15 len:21 { "the application" }
│                                ← StrChunk ..0000.52998!6 len:6 { "allow " }
│                        → StrChunk ..0000.53096!49 len:219 [49]
│                          ← StrChunk ..0000.53515!58 len:139 { ", using a similar recursive rule" … }
│                            ← StrChunk ..0000.58511!13 len:67 { "a register at" }
│                              ← StrChunk ..0000.53038!12 len:25 { "contents of " }
│                                ← StrChunk ..0000.53013!13 len:13 { " to read the " }
│                              → StrChunk ..0000.53065!29 len:29 { " a particular cursor position" }
│                                ← StrChunk ..0000.53050!15 len:0 [15]
│                            → StrChunk ..0000.53577!7 len:14 { "} rules" }
│                              ← StrChunk ..0000.53573!4 len:3 [4]
│                                ← StrChunk ..0000.257091!3 len:3 { "Idx" }
│                              → StrChunk ..0000.58581!2 len:4 { "A " }
│                                ← StrChunk ..0000.53094!2 len:2 { ". " }
│                          → StrChunk ..0000.53160!1 len:80 [1]
│                            ← StrChunk ..0000.53152!3 len:15 [3]
│                              ← StrChunk ..0000.58528!4 len:11 { "r is" }
│                                ← StrChunk ..0000.53145!7 len:7 { "registe" }
│                              → StrChunk ..0000.53155!4 len:4 { " exp" }
│                                ← StrChunk ..0000.53159!1 len:0 [1]
│                            → StrChunk ..0000.53183!48 len:65 { "\\textsf{regT} type annotation in" … }
│                              ← StrChunk ..0000.53166!13 len:17 { "ed using the " }
│                                ← StrChunk ..0000.53161!4 len:4 { "ress" }
│                              → StrChunk ..0000.58654!25 len:0 [25]
│                                ← StrChunk ..0000.58583!55 len:0 [55]
│                  → StrChunk ..0000.53481!1 len:955 [1]
│                    ← StrChunk ..0000.60816!1 len:600 [1]
│                      ← StrChunk ..0000.53625!28 len:370 [28]
│                        ← StrChunk ..0000.53459!22 len:208 [22]
│                          ← StrChunk ..0000.53319!96 len:172 { "ssign a single value to a regist" … }
│                            ← StrChunk ..0000.53288!4 len:31 [4]
│                              ← StrChunk ..0000.53278!10 len:20 { "lthough a " }
│                                ← StrChunk ..0000.53231!3 len:3 { ". A" }
│                                → StrChunk ..0000.154271!7 len:7 { "replica" }
│                              → StrChunk ..0000.53301!11 len:11 { " can only a" }
│                                ← StrChunk ..0000.53294!7 len:0 [7]
│                            → StrChunk ..0000.53421!4 len:45 [4]
│                              ← StrChunk ..0000.154282!7 len:11 { "replica" }
│                                ← StrChunk ..0000.53417!4 len:4 { "ple " }
│                              → StrChunk ..0000.58680!3 len:34 [3]
│                                ← StrChunk ..0000.53425!34 len:34 { "s concurrently assign values to " … }
│                          → StrChunk ..0000.53586!4 len:36 [4]
│                            ← StrChunk ..0000.53514!1 len:4 { "." }
│                              ← StrChunk ..0000.53488!26 len:0 [26]
│                                ← StrChunk ..0000.53483!1 len:0 [1]
│                              → StrChunk ..0000.60423!1 len:3 { "\\" }
│                                ← StrChunk ..0000.53584!2 len:2 { "\n\n" }
│                            → StrChunk ..0000.252345!1 len:32 { "O" }
│                              ← StrChunk ..0000.60452!11 len:22 { "Generating " }
│                                ← StrChunk ..0000.53590!11 len:11 { "subsection{" }
│                              → StrChunk ..0000.60464!9 len:9 { "perations" }
│                                ← StrChunk ..0000.60463!1 len:0 [1]
│                        → StrChunk ..0000.60529!26 len:162 { " the state of the document" }
│                          ← StrChunk ..0000.60507!10 len:23 { " commands " }
│                            ← StrChunk ..0000.60698!4 len:7 { "When" }
│                              ← StrChunk ..0000.60473!2 len:3 { "\n\n" }
│                                ← StrChunk ..0000.53653!1 len:1 { "}" }
│                              → StrChunk ..0000.60489!18 len:0 [18]
│                                ← StrChunk ..0000.60574!48 len:0 [48]
│                            → StrChunk ..0000.60521!5 len:6 { "mutat" }
│                              ← StrChunk ..0000.60517!4 len:0 [4]
│                                ← StrChunk ..0000.60625!4 len:0 [4]
│                              → StrChunk ..0000.60526!3 len:1 [3]
│                                ← StrChunk ..0000.60632!1 len:1 { "e" }
│                          → StrChunk ..0000.60768!19 len:113 { " In our semantics, " }
│                            ← StrChunk ..0000.60637!8 len:61 [8]
│                              ← StrChunk ..0000.60710!58 len:60 { "they generate \\emph{operations} " … }
│                                ← StrChunk ..0000.60635!2 len:2 { ", " }
│                              → StrChunk ..0000.60555!1 len:1 { "." }
│                                ← StrChunk ..0000.60633!1 len:0 [1]
│                            → StrChunk ..0000.60794!1 len:33 [1]
│                              ← StrChunk ..0000.60787!7 len:9 { "command" }
│                                ← StrChunk ..0000.60885!2 len:2 { "a " }
│                              → StrChunk ..0000.60889!3 len:24 { "ies" }
│                                ← StrChunk ..0000.60795!21 len:21 { " never directly modif" }
│                      → StrChunk ..0000.61082!11 len:230 [11]
│                        ← StrChunk ..0000.61028!4 len:228 { "the " }
│                          ← StrChunk ..0000.60871!14 len:154 { " an operation." }
│                            ← StrChunk ..0000.60836!4 len:50 [4]
│                              ← StrChunk ..0000.60830!6 len:18 { "local " }
│                                ← StrChunk ..0000.60817!5 len:5 { " the " }
│                                → StrChunk ..0000.154293!7 len:7 { "replica" }
│                              → StrChunk ..0000.60892!1 len:32 { "s" }
│                                ← StrChunk ..0000.60840!31 len:31 { " state $A_p$, but only generate" }
│                            → StrChunk ..0000.60952!12 len:90 { "immediately " }
│                              ← StrChunk ..0000.60920!3 len:24 { "en " }
│                                ← StrChunk ..0000.60893!21 len:21 { " That operation is th" }
│                              → StrChunk ..0000.60976!37 len:54 { "so that it takes effect locally," … }
│                                ← StrChunk ..0000.60923!17 len:17 { "applied to $A_p$ " }
│                          → StrChunk ..0000.61073!4 len:70 [4]
│                            ← StrChunk ..0000.61013!15 len:68 { "asynchronously " }
│                              ← StrChunk ..0000.61032!18 len:23 { "operation is also " }
│                                ← StrChunk ..0000.257190!5 len:5 { "same " }
│                              → StrChunk ..0000.154304!7 len:30 { "replica" }
│                                ← StrChunk ..0000.61050!23 len:23 { "broadcast to the other " }
│                            → StrChunk ..0000.154653!4 len:2 [4]
│                              ← StrChunk ..0000.61079!2 len:2 [2]
│                                ← StrChunk ..0000.61077!2 len:2 { "s." }
│                              → StrChunk ..0000.154315!7 len:0 [7]
│                                ← StrChunk ..0000.61081!1 len:0 [1]
│                        → StrChunk ..0000.154668!21 len:2 [21]
│                          ← StrChunk ..0000.154664!1 len:0 [1]
│                            ← StrChunk ..0000.61098!10 len:0 [10]
│                              ← StrChunk ..0000.154633!3 len:0 [3]
│                                ← StrChunk ..0000.61097!1 len:0 [1]
│                              → StrChunk ..0000.61108!11 len:0 [11]
│                                ← StrChunk ..0000.154657!3 len:0 [3]
│                            → StrChunk ..0000.61124!7 len:0 [7]
│                              ← StrChunk ..0000.154689!5 len:0 [5]
│                                ← StrChunk ..0000.61119!5 len:0 [5]
│                              → StrChunk ..0000.154665!2 len:0 [2]
│                                ← StrChunk ..0000.154326!7 len:0 [7]
│                          → StrChunk ..0000.60940!12 len:2 [12]
│                            ← StrChunk ..0000.61131!68 len:2 [68]
│                              ← StrChunk ..0000.62552!5 len:0 [5]
│                                ← StrChunk ..0000.154333!1 len:0 [1]
│                              → StrChunk ..0000.61093!2 len:2 [2]
│                                ← StrChunk ..0000.61199!2 len:2 { "\n\n" }
│                            → StrChunk ..0000.60475!7 len:0 [7]
│                              ← StrChunk ..0000.60822!4 len:0 [4]
│                                ← StrChunk ..0000.60914!3 len:0 [3]
│                              → StrChunk ..0000.53484!2 len:0 [2]
│                                ← StrChunk ..0000.53601!12 len:0 [12]
│                    → StrChunk ..0000.47760!2 len:355 [2]
│                      ← StrChunk ..0000.50015!2 len:0 [2]
│                        ← StrChunk ..0000.51180!1 len:0 [1]
│                          ← StrChunk ..0000.53026!6 len:0 [6]
│                            ← StrChunk ..0000.53240!17 len:0 [17]
│                              ← StrChunk ..0000.53292!1 len:0 [1]
│                                ← StrChunk ..0000.53415!1 len:0 [1]
│                                → StrChunk ..0000.53234!4 len:0 [4]
│                              → StrChunk ..0000.53179!2 len:0 [2]
│                                ← StrChunk ..0000.53238!1 len:0 [1]
│                            → StrChunk ..0000.51251!2 len:0 [2]
│                              ← StrChunk ..0000.51307!1 len:0 [1]
│                                ← StrChunk ..0000.52996!1 len:0 [1]
│                              → StrChunk ..0000.51209!4 len:0 [4]
│                                ← StrChunk ..0000.51232!4 len:0 [4]
│                          → StrChunk ..0000.50574!43 len:0 [43]
│                            ← StrChunk ..0000.50780!18 len:0 [18]
│                              ← StrChunk ..0000.50947!2 len:0 [2]
│                                ← StrChunk ..0000.50991!12 len:0 [12]
│                              → StrChunk ..0000.50798!2 len:0 [2]
│                                ← StrChunk ..0000.50802!47 len:0 [47]
│                            → StrChunk ..0000.50370!2 len:0 [2]
│                              ← StrChunk ..0000.50413!3 len:0 [3]
│                                ← StrChunk ..0000.50557!2 len:0 [2]
│                              → StrChunk ..0000.50265!1 len:0 [1]
│                                ← StrChunk ..0000.50351!3 len:0 [3]
│                        → StrChunk ..0000.48859!2 len:0 [2]
│                          ← StrChunk ..0000.49136!1 len:0 [1]
│                            ← StrChunk ..0000.49938!5 len:0 [5]
│                              ← StrChunk ..0000.49948!9 len:0 [9]
│                                ← StrChunk ..0000.49926!12 len:0 [12]
│                              → StrChunk ..0000.49531!7 len:0 [7]
│                                ← StrChunk ..0000.49678!2 len:0 [2]
│                            → StrChunk ..0000.48905!2 len:0 [2]
│                              ← StrChunk ..0000.48948!2 len:0 [2]
│                                ← StrChunk ..0000.48952!11 len:0 [11]
│                              → StrChunk ..0000.48863!2 len:0 [2]
│                                ← StrChunk ..0000.48853!6 len:0 [6]
│                          → StrChunk ..0000.47905!1 len:0 [1]
│                            ← StrChunk ..0000.48214!1 len:0 [1]
│                              ← StrChunk ..0000.48794!5 len:0 [5]
│                                ← StrChunk ..0000.48823!1 len:0 [1]
│                              → StrChunk ..0000.47974!4 len:0 [4]
│                                ← StrChunk ..0000.48205!1 len:0 [1]
│                            → StrChunk ..0000.47836!2 len:0 [2]
│                              ← StrChunk ..0000.47843!10 len:0 [10]
│                                ← StrChunk ..0000.47889!2 len:0 [2]
│                              → StrChunk ..0000.47765!1 len:0 [1]
│                                ← StrChunk ..0000.47819!1 len:0 [1]
│                      → StrChunk ..0000.61288!21 len:355 { " the local state and " }
│                        ← StrChunk ..0000.60416!3 len:133 { "sub" }
│                          ← StrChunk ..0000.47203!3 len:1 [3]
│                            ← StrChunk ..0000.47318!2 len:0 [2]
│                              ← StrChunk ..0000.47423!1 len:0 [1]
│                                ← StrChunk ..0000.47678!1 len:0 [1]
│                              → StrChunk ..0000.47236!1 len:0 [1]
│                                ← StrChunk ..0000.47256!3 len:0 [3]
│                            → StrChunk ..0000.42473!1 len:1 [1]
│                              ← StrChunk ..0000.47098!1 len:0 [1]
│                                ← StrChunk ..0000.47107!1 len:0 [1]
│                              → StrChunk ..0000.35269!1 len:1 { "\\" }
│                                ← StrChunk ..0000.35268!1 len:0 [1]
│                          → StrChunk ..0000.253931!3 len:129 { "-ts" }
│                            ← StrChunk ..0000.35289!1 len:48 [1]
│                              ← StrChunk ..0000.252347!1 len:20 { "T" }
│                                ← StrChunk ..0000.35270!19 len:19 { "subsection{Lamport " }
│                              → StrChunk ..0000.253912!18 len:28 { "\\label{sec:lamport" }
│                                ← StrChunk ..0000.35290!10 len:10 { "imestamps}" }
│                            → StrChunk ..0000.61204!74 len:78 { "\nEvery operation in our model is" … }
│                              ← StrChunk ..0000.35300!1 len:2 { "\n" }
│                                ← StrChunk ..0000.253930!1 len:1 { "}" }
│                              → StrChunk ..0000.61278!10 len:2 [10]
│                                ← StrChunk ..0000.61330!2 len:2 { "in" }
│                        → StrChunk ..0000.253540!1 len:201 { "W" }
│                          ← StrChunk ..0000.61518!4 len:12 [4]
│                            ← StrChunk ..0000.61311!9 len:12 { " cursors." }
│                              ← StrChunk ..0000.61309!2 len:2 [2]
│                                ← StrChunk ..0000.61334!2 len:2 { "in" }
│                              → StrChunk ..0000.61337!180 len:1 [180]
│                                ← StrChunk ..0000.61336!1 len:1 { " " }
│                            → StrChunk ..0000.61545!1 len:0 [1]
│                              ← StrChunk ..0000.61522!2 len:0 [2]
│                                ← StrChunk ..0000.253227!1 len:0 [1]
│                              → StrChunk ..0000.253228!2 len:0 [2]
│                                ← StrChunk ..0000.61524!4 len:0 [4]
│                          → StrChunk ..0000.253316!10 len:188 [10]
│                            ← StrChunk ..0000.257334!1 len:185 { "," }
│                              ← StrChunk ..0000.253231!42 len:42 { "henever an element is inserted i" … }
│                                ← StrChunk ..0000.253230!1 len:0 [1]
│                              → StrChunk ..0000.253336!99 len:142 { "new list element or register val" … }
│                                ← StrChunk ..0000.253273!43 len:43 { " or a value is assigned to a reg" … }
│                            → StrChunk ..0000.154694!8 len:3 [8]
│                              ← StrChunk ..0000.61546!49 len:0 [49]
│                                ← StrChunk ..0000.61528!17 len:0 [17]
│                              → StrChunk ..0000.61595!3 len:3 { ".\n\n" }
│                                ← StrChunk ..0000.154703!31 len:0 [31]
│                → StrChunk ..0000.64632!13 len:2321 { " \\mathit{mut}" }
│                  ← StrChunk ..0000.6237!25 len:1839 { "(c_1, p_1) < (c_2, p_2) \\" }
│                    ← StrChunk ..0000.61893!18 len:1101 { "hash of its public" }
│                      ← StrChunk ..0000.4990!163 len:305 [163]
│                        ← StrChunk ..0000.61706!1 len:151 { " " }
│                          ← StrChunk ..0000.154338!7 len:101 { "replica" }
│                            ← StrChunk ..0000.61814!17 len:93 { "nous coordination" }
│                              ← StrChunk ..0000.61831!10 len:67 { "requiring " }
│                                ← StrChunk ..0000.61726!50 len:50 { "ate globally unique operation id" … }
│                                → StrChunk ..0000.61776!7 len:7 { "synchro" }
│                              → StrChunk ..0000.61791!9 len:9 { " between " }
│                                ← StrChunk ..0000.61783!8 len:0 [8]
│                            → StrChunk ..0000.61804!1 len:1 { "s" }
│                              ← StrChunk ..0000.61800!4 len:0 [4]
│                                ← StrChunk ..0000.154345!1 len:0 [1]
│                              → StrChunk ..0000.61724!1 len:0 [1]
│                                ← StrChunk ..0000.61805!1 len:0 [1]
│                          → StrChunk ..0000.61650!2 len:49 [2]
│                            ← StrChunk ..0000.61605!45 len:49 { "e use Lamport timestamps~\\cite{L" … }
│                              ← StrChunk ..0000.61604!1 len:1 [1]
│                                ← StrChunk ..0000.61843!1 len:1 { "w" }
│                              → StrChunk ..0000.62195!1 len:3 { " " }
│                                ← StrChunk ..0000.61872!2 len:2 { "}." }
│                            → StrChunk ..0000.61598!3 len:0 [3]
│                              ← StrChunk ..0000.61652!14 len:0 [14]
│                                ← StrChunk ..0000.61680!26 len:0 [26]
│                              → StrChunk ..0000.4873!93 len:0 [93]
│                                ← StrChunk ..0000.61203!1 len:0 [1]
│                        → StrChunk ..0000.84835!4 len:154 [4]
│                          ← StrChunk ..0000.5196!1 len:67 [1]
│                            ← StrChunk ..0000.5189!2 len:36 { "$(" }
│                              ← StrChunk ..0000.5157!30 len:30 { "A Lamport timestamp is a pair " }
│                                ← StrChunk ..0000.5155!2 len:0 [2]
│                              → StrChunk ..0000.5396!1 len:4 { "p" }
│                                ← StrChunk ..0000.5193!3 len:3 { "c, " }
│                            → StrChunk ..0000.5398!1 len:31 { "p" }
│                              ← StrChunk ..0000.5246!2 len:10 { " $" }
│                                ← StrChunk ..0000.5197!8 len:8 { ")$ where" }
│                              → StrChunk ..0000.154351!7 len:20 { "Replica" }
│                                ← StrChunk ..0000.84822!13 len:13 { " \\in \\mathrm{" }
│                          → StrChunk ..0000.5283!4 len:87 [4]
│                            ← StrChunk ..0000.5249!34 len:44 { "$ is the unique identifier of th" … }
│                              ← StrChunk ..0000.5248!1 len:3 [1]
│                                ← StrChunk ..0000.84839!3 len:3 { "ID}" }
│                              → StrChunk ..0000.5403!4 len:7 [4]
│                                ← StrChunk ..0000.154366!7 len:7 { "replica" }
│                            → StrChunk ..0000.61920!3 len:43 { " a " }
│                              ← StrChunk ..0000.61874!14 len:40 { " (for example," }
│                                ← StrChunk ..0000.5287!26 len:26 { " on which the edit is made" }
│                              → StrChunk ..0000.61888!5 len:0 [5]
│                                ← StrChunk ..0000.61923!13 len:0 [13]
│                      → StrChunk ..0000.5620!19 len:778 [19]
│                        ← StrChunk ..0000.5329!5 len:236 { "each " }
│                          ← StrChunk ..0000.5205!3 len:61 { " $c" }
│                            ← StrChunk ..0000.62197!5 len:10 { ", and" }
│                              ← StrChunk ..0000.61911!2 len:5 [2]
│                                ← StrChunk ..0000.154360!2 len:2 { " k" }
│                                → StrChunk ..0000.61913!3 len:3 { "ey)" }
│                              → StrChunk ..0000.5313!5 len:0 [5]
│                                ← StrChunk ..0000.5323!1 len:0 [1]
│                            → StrChunk ..0000.84852!2 len:48 [2]
│                              ← StrChunk ..0000.84859!2 len:12 { "bb" }
│                                ← StrChunk ..0000.84842!10 len:10 { " \\in \\math" }
│                              → StrChunk ..0000.5208!33 len:36 { "$ is a counter that is stored at" … }
│                                ← StrChunk ..0000.84854!3 len:3 { "{N}" }
│                          → StrChunk ..0000.62325!11 len:170 { "Since each " }
│                            ← StrChunk ..0000.154376!6 len:45 { "eplica" }
│                              ← StrChunk ..0000.5414!1 len:1 { "r" }
│                                ← StrChunk ..0000.5411!3 len:0 [3]
│                              → StrChunk ..0000.5338!38 len:38 { " and incremented for every opera" … }
│                                ← StrChunk ..0000.5334!4 len:0 [4]
│                            → StrChunk ..0000.62340!107 len:114 { " generates a strictly monotonica" … }
│                              ← StrChunk ..0000.62336!4 len:7 [4]
│                                ← StrChunk ..0000.154386!7 len:7 { "replica" }
│                              → StrChunk ..0000.5443!17 len:0 [17]
│                                ← StrChunk ..0000.5485!67 len:0 [67]
│                        → StrChunk ..0000.154734!9 len:542 { "causally " }
│                          ← StrChunk ..0000.5655!3 len:223 [3]
│                            ← StrChunk ..0000.5833!2 len:7 { "\n\n" }
│                              ← StrChunk ..0000.5594!24 len:0 [24]
│                                ← StrChunk ..0000.5460!4 len:0 [4]
│                              → StrChunk ..0000.5650!5 len:5 { "If a " }
│                                ← StrChunk ..0000.5618!1 len:0 [1]
│                            → StrChunk ..0000.5659!61 len:216 { " receives an operation with a co" … }
│                              ← StrChunk ..0000.154396!6 len:7 { "eplica" }
│                                ← StrChunk ..0000.5658!1 len:1 { "r" }
│                              → StrChunk ..0000.5835!38 len:148 { " This ensures that if operation " … }
│                                ← StrChunk ..0000.5722!110 len:110 { "er than the locally stored count" … }
│                          → StrChunk ..0000.5965!213 len:310 { "had received and processed $o_1$" … }
│                            ← StrChunk ..0000.5912!1 len:65 { "r" }
│                              ← StrChunk ..0000.5909!3 len:36 [3]
│                                ← StrChunk ..0000.5873!36 len:36 { "happened before $o_2$ (that is, " … }
│                              → StrChunk ..0000.5913!22 len:28 { " that generated $o_2$ " }
│                                ← StrChunk ..0000.154567!6 len:6 { "eplica" }
│                            → StrChunk ..0000.6209!24 len:32 { "for Lamport timestamps:\n" }
│                              ← StrChunk ..0000.6178!1 len:5 { " " }
│                                ← StrChunk ..0000.6827!4 len:4 { " $<$" }
│                              → StrChunk ..0000.6233!2 len:3 [2]
│                                ← StrChunk ..0000.62449!3 len:3 { "\\[ " }
│                    → StrChunk ..0000.64320!25 len:713 { "\\subsubsection{Operation " }
│                      ← StrChunk ..0000.6823!4 len:384 { " $<$" }
│                        ← StrChunk ..0000.62454!3 len:256 { " \\]" }
│                          ← StrChunk ..0000.6277!1 len:62 { "}" }
│                            ← StrChunk ..0000.6816!1 len:12 { " " }
│                              ← StrChunk ..0000.6262!4 len:7 [4]
│                                ← StrChunk ..0000.6805!1 len:1 { ";" }
│                                → StrChunk ..0000.6268!6 len:6 { "\\text{" }
│                              → StrChunk ..0000.6815!1 len:4 { " " }
│                                ← StrChunk ..0000.6274!3 len:3 { "iff" }
│                            → StrChunk ..0000.6811!2 len:49 { "\\;" }
│                              ← StrChunk ..0000.6810!1 len:0 [1]
│                                ← StrChunk ..0000.6278!1 len:0 [1]
│                              → StrChunk ..0000.6283!47 len:47 { " (c_1 < c_2) \\vee (c_1 = c_2 \\we" … }
│                                ← StrChunk ..0000.6279!4 len:0 [4]
│                          → StrChunk ..0000.6819!1 len:191 { "e" }
│                            ← StrChunk ..0000.6589!125 len:169 { "If one operation happened before" … }
│                              ← StrChunk ..0000.6332!1 len:1 { "\n" }
│                                ← StrChunk ..0000.6330!2 len:0 [2]
│                              → StrChunk ..0000.6715!43 len:43 { "tamp). If two operations are con" … }
│                                ← StrChunk ..0000.6714!1 len:0 [1]
│                            → StrChunk ..0000.6760!6 len:21 { " order" }
│                              ← StrChunk ..0000.6758!2 len:2 [2]
│                                ← StrChunk ..0000.6831!2 len:2 { "ir" }
│                              → StrChunk ..0000.6846!1 len:13 [1]
│                                ← StrChunk ..0000.6833!13 len:13 { " according to" }
│                        → StrChunk ..0000.5640!5 len:124 [5]
│                          ← StrChunk ..0000.6439!12 len:122 [12]
│                            ← StrChunk ..0000.62457!90 len:122 { " This ordering property is impor" … }
│                              ← StrChunk ..0000.6769!32 len:32 { " is arbitrary but deterministic." }
│                                ← StrChunk ..0000.6766!3 len:0 [3]
│                              → StrChunk ..0000.6463!10 len:0 [10]
│                                ← StrChunk ..0000.6333!106 len:0 [106]
│                            → StrChunk ..0000.6179!15 len:0 [15]
│                              ← StrChunk ..0000.6235!1 len:0 [1]
│                                ← StrChunk ..0000.6266!1 len:0 [1]
│                              → StrChunk ..0000.5720!1 len:0 [1]
│                                ← StrChunk ..0000.5935!15 len:0 [15]
│                          → StrChunk ..0000.5191!1 len:2 [1]
│                            ← StrChunk ..0000.5376!19 len:0 [19]
│                              ← StrChunk ..0000.5464!13 len:0 [13]
│                                ← StrChunk ..0000.5619!1 len:0 [1]
│                              → StrChunk ..0000.5241!5 len:0 [5]
│                                ← StrChunk ..0000.5415!19 len:0 [19]
│                            → StrChunk ..0000.4966!12 len:2 [12]
│                              ← StrChunk ..0000.5153!1 len:0 [1]
│                                ← StrChunk ..0000.5187!1 len:0 [1]
│                              → StrChunk ..0000.4824!1 len:2 { "\n" }
│                                ← StrChunk ..0000.640!1 len:1 { "\n" }
│                      → StrChunk ..0000.64471!3 len:304 { "ID}" }
│                        ← StrChunk ..0000.64399!13 len:137 { " \\mathsf{op}(" }
│                          ← StrChunk ..0000.84807!1 len:69 { "3" }
│                            ← StrChunk ..0000.64346!30 len:65 { "tructure}\n\nAn operation is a t" }
│                              ← StrChunk ..0000.64345!1 len:1 [1]
│                                ← StrChunk ..0000.252349!1 len:1 { "S" }
│                              → StrChunk ..0000.64645!18 len:34 { "\n\\begin{alignat*}{" }
│                                ← StrChunk ..0000.64380!16 len:16 { "uple of the form" }
│                            → StrChunk ..0000.64396!1 len:3 { "\n" }
│                              ← StrChunk ..0000.64664!1 len:1 { "}" }
│                                ← StrChunk ..0000.64663!1 len:0 [1]
│                              → StrChunk ..0000.64397!2 len:1 [2]
│                                ← StrChunk ..0000.64667!1 len:1 { "&" }
│                          → StrChunk ..0000.64412!11 len:55 { "\\mathit{id}" }
│                            ← StrChunk ..0000.64693!2 len:7 { "&&" }
│                              ← StrChunk ..0000.64474!1 len:4 { "\n" }
│                                ← StrChunk ..0000.64687!3 len:3 { " \\\\" }
│                              → StrChunk ..0000.64478!1 len:1 { " " }
│                                ← StrChunk ..0000.64475!3 len:0 [3]
│                            → StrChunk ..0000.64441!26 len:37 { "\\mathbb{N} \\times \\mathrm{" }
│                              ← StrChunk ..0000.64423!2 len:4 { ": " }
│                                ← StrChunk ..0000.64710!2 len:2 { " &" }
│                              → StrChunk ..0000.64467!4 len:7 [4]
│                                ← StrChunk ..0000.154406!7 len:7 { "Replica" }
│                        → StrChunk ..0000.64544!5 len:164 { "ID})," }
│                          ← StrChunk ..0000.64484!14 len:70 { " \\mathit{deps}" }
│                            ← StrChunk ..0000.64480!1 len:7 { "\n" }
│                              ← StrChunk ..0000.64794!3 len:4 { " \\\\" }
│                                ← StrChunk ..0000.64479!1 len:1 { "," }
│                              → StrChunk ..0000.64481!3 len:2 [3]
│                                ← StrChunk ..0000.64698!2 len:2 { "&&" }
│                            → StrChunk ..0000.64514!26 len:49 { "\\mathbb{N} \\times \\mathrm{" }
│                              ← StrChunk ..0000.64498!14 len:16 { ": \\mathcal{P}(" }
│                                ← StrChunk ..0000.64712!2 len:2 { " &" }
│                              → StrChunk ..0000.64540!4 len:7 [4]
│                                ← StrChunk ..0000.154417!7 len:7 { "Replica" }
│                          → StrChunk ..0000.64714!2 len:89 { " &" }
│                            ← StrChunk ..0000.64703!2 len:19 { "&&" }
│                              ← StrChunk ..0000.64549!1 len:4 { "\n" }
│                                ← StrChunk ..0000.64791!3 len:3 { " \\\\" }
│                              → StrChunk ..0000.64553!13 len:13 { " \\mathit{cur}" }
│                                ← StrChunk ..0000.64550!3 len:0 [3]
│                            → StrChunk ..0000.64628!1 len:68 { "\n" }
│                              ← StrChunk ..0000.64788!3 len:65 { " \\\\" }
│                                ← StrChunk ..0000.64566!62 len:62 { ": \\mathsf{cursor}(\\langle k_1, \\" … }
│                              → StrChunk ..0000.64629!3 len:2 [3]
│                                ← StrChunk ..0000.64708!2 len:2 { "&&" }
│                  → StrChunk ..0000.7832!8 len:469 [8]
│                    ← StrChunk ..0000.2755!2 len:95 [2]
│                      ← StrChunk ..0000.866!97 len:95 [97]
│                        ← StrChunk ..0000.64761!1 len:95 [1]
│                          ← StrChunk ..0000.84814!1 len:95 { " " }
│                            ← StrChunk ..0000.84810!1 len:76 { "\\" }
│                              ← StrChunk ..0000.64763!22 len:71 { "mid \\mathsf{assign}(v)" }
│                                ← StrChunk ..0000.64716!45 len:45 { " &: \\mathsf{insert}(v) \\mid \\mat" … }
│                                → StrChunk ..0000.84787!4 len:4 { " && " }
│                              → StrChunk ..0000.84811!3 len:4 [3]
│                                ← StrChunk ..0000.84818!4 len:4 { "quad" }
│                            → StrChunk ..0000.84804!1 len:18 [1]
│                              ← StrChunk ..0000.84809!1 len:14 { "L" }
│                                ← StrChunk ..0000.84791!13 len:13 { "v: \\mathrm{VA" }
│                              → StrChunk ..0000.64785!3 len:4 { " \\\\" }
│                                ← StrChunk ..0000.84805!1 len:1 { "}" }
│                          → StrChunk ..0000.4861!11 len:0 [11]
│                            ← StrChunk ..0000.64376!2 len:0 [2]
│                              ← StrChunk ..0000.64425!8 len:0 [8]
│                                ← StrChunk ..0000.64512!1 len:0 [1]
│                              → StrChunk ..0000.4829!24 len:0 [24]
│                                ← StrChunk ..0000.4825!2 len:0 [2]
│                            → StrChunk ..0000.641!5 len:0 [5]
│                              ← StrChunk ..0000.4827!1 len:0 [1]
│                                ← StrChunk ..0000.4853!4 len:0 [4]
│                              → StrChunk ..0000.1363!12 len:0 [12]
│                                ← StrChunk ..0000.654!212 len:0 [212]
│                        → StrChunk ..0000.7250!128 len:0 [128]
│                          ← StrChunk ..0000.2157!4 len:0 [4]
│                            ← StrChunk ..0000.980!13 len:0 [13]
│                              ← StrChunk ..0000.963!15 len:0 [15]
│                                ← StrChunk ..0000.2114!31 len:0 [31]
│                              → StrChunk ..0000.2206!1 len:0 [1]
│                                ← StrChunk ..0000.2146!11 len:0 [11]
│                            → StrChunk ..0000.6848!22 len:0 [22]
│                              ← StrChunk ..0000.993!34 len:0 [34]
│                                ← StrChunk ..0000.2163!2 len:0 [2]
│                              → StrChunk ..0000.6983!106 len:0 [106]
│                                ← StrChunk ..0000.6872!109 len:0 [109]
│                          → StrChunk ..0000.1038!5 len:0 [5]
│                            ← StrChunk ..0000.6870!1 len:0 [1]
│                              ← StrChunk ..0000.6981!1 len:0 [1]
│                                ← StrChunk ..0000.7089!2 len:0 [2]
│                              → StrChunk ..0000.2212!4 len:0 [4]
│                                ← StrChunk ..0000.1027!11 len:0 [11]
│                            → StrChunk ..0000.1069!4 len:0 [4]
│                              ← StrChunk ..0000.1043!12 len:0 [12]
│                                ← StrChunk ..0000.1055!14 len:0 [14]
│                              → StrChunk ..0000.2694!50 len:0 [50]
│                                ← StrChunk ..0000.2221!3 len:0 [3]
│                      → StrChunk ..0000.2281!12 len:0 [12]
│                        ← StrChunk ..0000.2234!8 len:0 [8]
│                          ← StrChunk ..0000.1124!1 len:0 [1]
│                            ← StrChunk ..0000.1342!3 len:0 [3]
│                              ← StrChunk ..0000.2224!7 len:0 [7]
│                                ← StrChunk ..0000.2744!9 len:0 [9]
│                                → StrChunk ..0000.1073!36 len:0 [36]
│                              → StrChunk ..0000.1323!1 len:0 [1]
│                                ← StrChunk ..0000.1109!15 len:0 [15]
│                            → StrChunk ..0000.1155!3 len:0 [3]
│                              ← StrChunk ..0000.1321!1 len:0 [1]
│                                ← StrChunk ..0000.1140!15 len:0 [15]
│                              → StrChunk ..0000.1158!5 len:0 [5]
│                                ← StrChunk ..0000.2247!12 len:0 [12]
│                          → StrChunk ..0000.1322!1 len:0 [1]
│                            ← StrChunk ..0000.1165!7 len:0 [7]
│                              ← StrChunk ..0000.2232!1 len:0 [1]
│                                ← StrChunk ..0000.1163!2 len:0 [2]
│                              → StrChunk ..0000.1172!6 len:0 [6]
│                                ← StrChunk ..0000.2264!12 len:0 [12]
│                            → StrChunk ..0000.1360!3 len:0 [3]
│                              ← StrChunk ..0000.7093!2 len:0 [2]
│                                ← StrChunk ..0000.1178!1 len:0 [1]
│                              → StrChunk ..0000.1179!9 len:0 [9]
│                                ← StrChunk ..0000.1125!15 len:0 [15]
│                        → StrChunk ..0000.2382!7 len:0 [7]
│                          ← StrChunk ..0000.2318!1 len:0 [1]
│                            ← StrChunk ..0000.1194!5 len:0 [5]
│                              ← StrChunk ..0000.2293!20 len:0 [20]
│                                ← StrChunk ..0000.1188!6 len:0 [6]
│                              → StrChunk ..0000.1199!11 len:0 [11]
│                                ← StrChunk ..0000.2316!2 len:0 [2]
│                            → StrChunk ..0000.1228!13 len:0 [13]
│                              ← StrChunk ..0000.2319!9 len:0 [9]
│                                ← StrChunk ..0000.1210!18 len:0 [18]
│                              → StrChunk ..0000.1241!52 len:0 [52]
│                                ← StrChunk ..0000.2328!13 len:0 [13]
│                          → StrChunk ..0000.2781!16 len:0 [16]
│                            ← StrChunk ..0000.1375!2 len:0 [2]
│                              ← StrChunk ..0000.1302!19 len:0 [19]
│                                ← StrChunk ..0000.1293!7 len:0 [7]
│                              → StrChunk ..0000.3800!2 len:0 [2]
│                                ← StrChunk ..0000.2757!24 len:0 [24]
│                            → StrChunk ..0000.7546!1 len:0 [1]
│                              ← StrChunk ..0000.2797!68 len:0 [68]
│                                ← StrChunk ..0000.3802!2 len:0 [2]
│                              → StrChunk ..0000.7848!131 len:0 [131]
│                                ← StrChunk ..0000.7825!1 len:0 [1]
│                    → StrChunk ..0000.2086!1 len:374 [1]
│                      ← StrChunk ..0000.7548!24 len:0 [24]
│                        ← StrChunk ..0000.7668!16 len:0 [16]
│                          ← StrChunk ..0000.7637!21 len:0 [21]
│                            ← StrChunk ..0000.7728!7 len:0 [7]
│                              ← StrChunk ..0000.7547!1 len:0 [1]
│                                ← StrChunk ..0000.7826!3 len:0 [3]
│                                → StrChunk ..0000.7596!10 len:0 [10]
│                              → StrChunk ..0000.8016!3 len:0 [3]
│                                ← StrChunk ..0000.7606!31 len:0 [31]
│                            → StrChunk ..0000.8044!1 len:0 [1]
│                              ← StrChunk ..0000.8045!33 len:0 [33]
│                                ← StrChunk ..0000.8019!25 len:0 [25]
│                              → StrChunk ..0000.7658!8 len:0 [8]
│                                ← StrChunk ..0000.8078!59 len:0 [59]
│                          → StrChunk ..0000.7823!1 len:0 [1]
│                            ← StrChunk ..0000.7703!9 len:0 [9]
│                              ← StrChunk ..0000.7753!7 len:0 [7]
│                                ← StrChunk ..0000.7686!17 len:0 [17]
│                              → StrChunk ..0000.7712!9 len:0 [9]
│                                ← StrChunk ..0000.7743!2 len:0 [2]
│                            → StrChunk ..0000.7722!2 len:0 [2]
│                              ← StrChunk ..0000.7762!30 len:0 [30]
│                                ← StrChunk ..0000.7721!1 len:0 [1]
│                              → StrChunk ..0000.7666!1 len:0 [1]
│                                ← StrChunk ..0000.7684!1 len:0 [1]
│                        → StrChunk ..0000.1531!2 len:0 [2]
│                          ← StrChunk ..0000.1488!31 len:0 [31]
│                            ← StrChunk ..0000.1411!51 len:0 [51]
│                              ← StrChunk ..0000.1390!19 len:0 [19]
│                                ← StrChunk ..0000.1377!3 len:0 [3]
│                              → StrChunk ..0000.1462!10 len:0 [10]
│                                ← StrChunk ..0000.1604!5 len:0 [5]
│                            → StrChunk ..0000.1522!1 len:0 [1]
│                              ← StrChunk ..0000.1519!1 len:0 [1]
│                                ← StrChunk ..0000.1521!1 len:0 [1]
│                              → StrChunk ..0000.1523!6 len:0 [6]
│                                ← StrChunk ..0000.1520!1 len:0 [1]
│                          → StrChunk ..0000.1551!2 len:0 [2]
│                            ← StrChunk ..0000.1674!4 len:0 [4]
│                              ← StrChunk ..0000.1533!1 len:0 [1]
│                                ← StrChunk ..0000.2084!1 len:0 [1]
│                              → StrChunk ..0000.2092!1 len:0 [1]
│                                ← StrChunk ..0000.1534!17 len:0 [17]
│                            → StrChunk ..0000.2069!11 len:0 [11]
│                              ← StrChunk ..0000.1553!17 len:0 [17]
│                                ← StrChunk ..0000.1679!4 len:0 [4]
│                              → StrChunk ..0000.1570!17 len:0 [17]
│                                ← StrChunk ..0000.1592!4 len:0 [4]
│                      → StrChunk ..0000.1388!1 len:374 [1]
│                        ← StrChunk ..0000.1764!4 len:0 [4]
│                          ← StrChunk ..0000.2085!1 len:0 [1]
│                            ← StrChunk ..0000.1683!34 len:0 [34]
│                              ← StrChunk ..0000.1793!3 len:0 [3]
│                                ← StrChunk ..0000.1587!5 len:0 [5]
│                              → StrChunk ..0000.1717!8 len:0 [8]
│                                ← StrChunk ..0000.1763!1 len:0 [1]
│                            → StrChunk ..0000.1741!14 len:0 [14]
│                              ← StrChunk ..0000.2093!1 len:0 [1]
│                                ← StrChunk ..0000.1725!16 len:0 [16]
│                              → StrChunk ..0000.1755!7 len:0 [7]
│                                ← StrChunk ..0000.2081!2 len:0 [2]
│                          → StrChunk ..0000.1776!1 len:0 [1]
│                            ← StrChunk ..0000.1778!10 len:0 [10]
│                              ← StrChunk ..0000.1768!8 len:0 [8]
│                                ← StrChunk ..0000.2042!11 len:0 [11]
│                              → StrChunk ..0000.1788!5 len:0 [5]
│                                ← StrChunk ..0000.2087!1 len:0 [1]
│                            → StrChunk ..0000.1617!5 len:0 [5]
│                              ← StrChunk ..0000.1472!6 len:0 [6]
│                                ← StrChunk ..0000.1529!1 len:0 [1]
│                              → StrChunk ..0000.1409!1 len:0 [1]
│                                ← StrChunk ..0000.1478!10 len:0 [10]
│                        → StrChunk ..0000.64668!18 len:374 { "& )\n\\end{alignat*}" }
│                          ← StrChunk ..0000.2867!1 len:1 [1]
│                            ← StrChunk ..0000.978!1 len:0 [1]
│                              ← StrChunk ..0000.1300!1 len:0 [1]
│                                ← StrChunk ..0000.1380!4 len:0 [4]
│                              → StrChunk ..0000.607!1 len:0 [1]
│                                ← StrChunk ..0000.646!4 len:0 [4]
│                            → StrChunk ..0000.3065!78 len:1 [78]
│                              ← StrChunk ..0000.2928!133 len:0 [133]
│                                ← StrChunk ..0000.2869!57 len:0 [57]
│                              → StrChunk ..0000.26359!1 len:1 { "\n" }
│                                ← StrChunk ..0000.3145!80 len:0 [80]
│                          → StrChunk ..0000.257341!1 len:355 { "}" }
│                            ← StrChunk ..0000.65040!72 len:308 { "was requested at the specified p" … }
│                              ← StrChunk ..0000.64810!204 len:211 { "$\\mathit{id}$ is the Lamport tim" … }
│                                ← StrChunk ..0000.64799!7 len:7 { "\nwhere " }
│                              → StrChunk ..0000.65112!19 len:25 { "causal dependencies" }
│                                ← StrChunk ..0000.257335!6 len:6 { "\\emph{" }
│                            → StrChunk ..0000.257943!26 len:46 { " It is defined as follows:" }
│                              ← StrChunk ..0000.257342!1 len:18 { "." }
│                                ← StrChunk ..0000.65131!17 len:17 { " of the operation" }
│                              → StrChunk ..0000.257970!1 len:2 { "i" }
│                                ← StrChunk ..0000.257477!1 len:1 { " " }
│              → StrChunk ..0000.34018!14 len:7180 [14]
│                ← StrChunk ..0000.67689!4 len:2592 [4]
│                  ← StrChunk ..0000.66379!1 len:2274 { "\n" }
│                    ← StrChunk ..0000.65595!8 len:1241 { " in our " }
│                      ← StrChunk ..0000.65214!1 len:587 [1]
│                        ← StrChunk ..0000.257630!76 len:282 { "$\\mathit{deps}$ as the set of La" … }
│                          ← StrChunk ..0000.257376!10 len:205 [10]
│                            ← StrChunk ..0000.257344!1 len:75 [1]
│                              ← StrChunk ..0000.257343!1 len:54 { " " }
│                                ← StrChunk ..0000.257479!52 len:52 { "f operation $o_2$ was generated " … }
│                                → StrChunk ..0000.257532!1 len:1 { "a" }
│                              → StrChunk ..0000.257374!2 len:21 { "of" }
│                                ← StrChunk ..0000.257349!19 len:19 { " causal dependency " }
│                            → StrChunk ..0000.257424!13 len:130 { " been applied" }
│                              ← StrChunk ..0000.257469!8 len:46 { " already" }
│                                ← StrChunk ..0000.257386!38 len:38 { " $o_2$ is any operation $o_1$ th" … }
│                              → StrChunk ..0000.257615!1 len:71 { " " }
│                                ← StrChunk ..0000.257543!70 len:70 { " on $p$ at the time when $o_2$ w" … }
│                          → StrChunk ..0000.257368!3 len:1 [3]
│                            ← StrChunk ..0000.257613!1 len:1 [1]
│                              ← StrChunk ..0000.257616!4 len:0 [4]
│                                ← StrChunk ..0000.257624!3 len:0 [3]
│                              → StrChunk ..0000.257438!31 len:1 [31]
│                                ← StrChunk ..0000.257437!1 len:1 { " " }
│                            → StrChunk ..0000.180669!5 len:0 [5]
│                              ← StrChunk ..0000.65148!44 len:0 [44]
│                                ← StrChunk ..0000.257345!2 len:0 [2]
│                              → StrChunk ..0000.66376!1 len:0 [1]
│                                ← StrChunk ..0000.65192!22 len:0 [22]
│                        → StrChunk ..0000.116366!39 len:305 { ", state vectors~\\cite{Ellis:1989" … }
│                          ← StrChunk ..0000.65287!75 len:191 [75]
│                            ← StrChunk ..0000.65259!15 len:0 [15]
│                              ← StrChunk ..0000.65274!4 len:0 [4]
│                                ← StrChunk ..0000.65227!32 len:0 [32]
│                              → StrChunk ..0000.180674!8 len:0 [8]
│                                ← StrChunk ..0000.65278!9 len:0 [9]
│                            → StrChunk ..0000.116405!14 len:191 { "~\\cite{ParkerJ" }
│                              ← StrChunk ..0000.65487!53 len:168 { "would be used instead -- for exa" … }
│                                ← StrChunk ..0000.65362!115 len:115 { "In a real implementation, this s" … }
│                              → StrChunk ..0000.116419!2 len:9 [2]
│                                ← StrChunk ..0000.116423!9 len:9 { "r:1983jb}" }
│                          → StrChunk ..0000.65585!2 len:75 { ". " }
│                            ← StrChunk ..0000.116449!23 len:46 { "~\\cite{Preguica:2012fx}" }
│                              ← StrChunk ..0000.65543!23 len:23 { " dotted version vectors" }
│                                ← StrChunk ..0000.65540!3 len:0 [3]
│                              → StrChunk ..0000.65575!10 len:0 [10]
│                                ← StrChunk ..0000.65566!7 len:0 [7]
│                            → StrChunk ..0000.65721!1 len:27 [1]
│                              ← StrChunk ..0000.65774!1 len:10 { "t" }
│                                ← StrChunk ..0000.65764!9 len:9 { "However, " }
│                              → StrChunk ..0000.65587!8 len:17 [8]
│                                ← StrChunk ..0000.65722!17 len:17 { "o avoid ambiguity" }
│                      → StrChunk ..0000.66271!1 len:646 [1]
│                        ← StrChunk ..0000.66135!32 len:579 { ". Operations that are concurrent" }
│                          ← StrChunk ..0000.66077!3 len:423 [3]
│                            ← StrChunk ..0000.65671!20 len:359 { " set of operation ID" }
│                              ← StrChunk ..0000.65632!39 len:46 { "semantics we give the dependenci" … }
│                                ← StrChunk ..0000.65603!29 len:0 [29]
│                                → StrChunk ..0000.65779!7 len:7 { " simple" }
│                              → StrChunk ..0000.65786!291 len:293 { "\n\nThe purpose of the causal depe" … }
│                                ← StrChunk ..0000.65711!2 len:2 { "s." }
│                            → StrChunk ..0000.66081!50 len:64 { " will be applied in the same ord" … }
│                              ← StrChunk ..0000.154427!6 len:7 { "eplica" }
│                                ← StrChunk ..0000.66080!1 len:1 { "r" }
│                              → StrChunk ..0000.66131!4 len:7 [4]
│                                ← StrChunk ..0000.154437!7 len:7 { "replica" }
│                          → StrChunk ..0000.66175!36 len:124 { " where there is no causal depend" … }
│                            ← StrChunk ..0000.258143!1 len:7 { "(" }
│                              ← StrChunk ..0000.66170!1 len:1 { " " }
│                                ← StrChunk ..0000.66169!1 len:0 [1]
│                              → StrChunk ..0000.258144!1 len:5 { "," }
│                                ← StrChunk ..0000.66171!4 len:4 { "i.e." }
│                            → StrChunk ..0000.66211!1 len:81 [1]
│                              ← StrChunk ..0000.258146!1 len:21 { ")" }
│                                ← StrChunk ..0000.258147!20 len:20 { " in either direction" }
│                              → StrChunk ..0000.252351!1 len:60 { "G" }
│                                ← StrChunk ..0000.66212!59 len:59 { " can be applied in any order.\n\n\\" … }
│                        → StrChunk ..0000.65014!13 len:67 [13]
│                          ← StrChunk ..0000.65691!6 len:21 [6]
│                            ← StrChunk ..0000.66282!1 len:21 [1]
│                              ← StrChunk ..0000.252353!1 len:11 { "O" }
│                                ← StrChunk ..0000.66272!10 len:10 { "enerating " }
│                              → StrChunk ..0000.66167!1 len:10 [1]
│                                ← StrChunk ..0000.66283!10 len:10 { "perations}" }
│                            → StrChunk ..0000.65573!1 len:0 [1]
│                              ← StrChunk ..0000.65697!2 len:0 [2]
│                                ← StrChunk ..0000.65701!2 len:0 [2]
│                              → StrChunk ..0000.65215!6 len:0 [6]
│                                ← StrChunk ..0000.65477!5 len:0 [5]
│                          → StrChunk ..0000.29096!11 len:46 { "\n\\centering" }
│                            ← StrChunk ..0000.26360!1 len:17 { "\n" }
│                              ← StrChunk ..0000.64686!1 len:1 { "\n" }
│                                ← StrChunk ..0000.64806!2 len:0 [2]
│                              → StrChunk ..0000.26361!15 len:15 { "\\begin{figure*}" }
│                                ← StrChunk ..0000.27275!1 len:0 [1]
│                            → StrChunk ..0000.64797!1 len:18 [1]
│                              ← StrChunk ..0000.28773!1 len:1 { "\n" }
│                                ← StrChunk ..0000.29107!1 len:0 [1]
│                              → StrChunk ..0000.64288!16 len:17 { "begin{prooftree}" }
│                                ← StrChunk ..0000.28774!1 len:1 { "\\" }
│                    → StrChunk ..0000.66782!2 len:1032 { "Tr" }
│                      ← StrChunk ..0000.66493!7 len:217 [7]
│                        ← StrChunk ..0000.66485!7 len:88 [7]
│                          ← StrChunk ..0000.66470!1 len:88 [1]
│                            ← StrChunk ..0000.66432!1 len:88 { "$" }
│                              ← StrChunk ..0000.66433!1 len:50 { "$" }
│                                ← StrChunk ..0000.66382!8 len:8 { "\\AxiomC{" }
│                                → StrChunk ..0000.66390!41 len:41 { "A_p,\\, \\mathit{expr} \\evalto \\ma" … }
│                              → StrChunk ..0000.66434!36 len:37 { "\n\\AxiomC{$\\mathit{val}: \\mathrm{" … }
│                                ← StrChunk ..0000.66431!1 len:1 { "}" }
│                            → StrChunk ..0000.66632!2 len:0 [2]
│                              ← StrChunk ..0000.66471!6 len:0 [6]
│                                ← StrChunk ..0000.66630!2 len:0 [2]
│                              → StrChunk ..0000.66544!5 len:0 [5]
│                                ← StrChunk ..0000.66477!8 len:0 [8]
│                          → StrChunk ..0000.66591!15 len:0 [15]
│                            ← StrChunk ..0000.66565!1 len:0 [1]
│                              ← StrChunk ..0000.66626!4 len:0 [4]
│                                ← StrChunk ..0000.66564!1 len:0 [1]
│                              → StrChunk ..0000.66620!2 len:0 [2]
│                                ← StrChunk ..0000.66585!6 len:0 [6]
│                            → StrChunk ..0000.66492!1 len:0 [1]
│                              ← StrChunk ..0000.66566!4 len:0 [4]
│                                ← StrChunk ..0000.66670!4 len:0 [4]
│                              → StrChunk ..0000.66528!7 len:0 [7]
│                                ← StrChunk ..0000.66559!5 len:0 [5]
│                        → StrChunk ..0000.66681!6 len:129 [6]
│                          ← StrChunk ..0000.66536!6 len:0 [6]
│                            ← StrChunk ..0000.66522!1 len:0 [1]
│                              ← StrChunk ..0000.66570!1 len:0 [1]
│                                ← StrChunk ..0000.66551!1 len:0 [1]
│                              → StrChunk ..0000.66634!2 len:0 [2]
│                                ← StrChunk ..0000.66535!1 len:0 [1]
│                            → StrChunk ..0000.66664!2 len:0 [2]
│                              ← StrChunk ..0000.66674!1 len:0 [1]
│                                ← StrChunk ..0000.66636!28 len:0 [28]
│                              → StrChunk ..0000.66666!2 len:0 [2]
│                                ← StrChunk ..0000.66675!6 len:0 [6]
│                          → StrChunk ..0000.66734!47 len:129 { ", \\mathsf{assign}(\\mathit{val}))" … }
│                            ← StrChunk ..0000.66500!1 len:47 [1]
│                              ← StrChunk ..0000.66542!2 len:0 [2]
│                                ← StrChunk ..0000.66668!2 len:0 [2]
│                              → StrChunk ..0000.66687!45 len:47 { "\n\\AxiomC{$A_p,\\, \\mathsf{makeOp}" … }
│                                ← StrChunk ..0000.66501!2 len:2 { "$}" }
│                            → StrChunk ..0000.66894!8 len:35 { "Assign}}" }
│                              ← StrChunk ..0000.93018!5 len:25 { "Make-" }
│                                ← StrChunk ..0000.66874!20 len:20 { "\n\\LeftLabel{\\textsc{" }
│                              → StrChunk ..0000.66503!2 len:2 { "\n\\" }
│                                ← StrChunk ..0000.66732!1 len:0 [1]
│                      → StrChunk ..0000.64798!1 len:813 [1]
│                        ← StrChunk ..0000.66846!1 len:76 [1]
│                          ← StrChunk ..0000.66825!7 len:44 [7]
│                            ← StrChunk ..0000.66786!22 len:34 { "$A_p,\\, \\mathit{expr} " }
│                              ← StrChunk ..0000.66506!10 len:10 { "inaryInfC{" }
│                                ← StrChunk ..0000.66505!1 len:0 [1]
│                              → StrChunk ..0000.66812!1 len:2 [1]
│                                ← StrChunk ..0000.66916!2 len:2 { "\\," }
│                            → StrChunk ..0000.66911!1 len:10 { " " }
│                              ← StrChunk ..0000.66840!6 len:6 { "\\text{" }
│                                ← StrChunk ..0000.66836!1 len:0 [1]
│                              → StrChunk ..0000.66912!1 len:3 { " " }
│                                ← StrChunk ..0000.66837!2 len:2 { ":=" }
│                          → StrChunk ..0000.66808!2 len:32 [2]
│                            ← StrChunk ..0000.66847!27 len:30 { " \\mathit{val} \\evalto A_p'$" }
│                              ← StrChunk ..0000.66914!2 len:3 { "\\," }
│                                ← StrChunk ..0000.66839!1 len:1 { "}" }
│                              → StrChunk ..0000.66813!6 len:0 [6]
│                                ← StrChunk ..0000.66832!2 len:0 [2]
│                            → StrChunk ..0000.66516!1 len:2 [1]
│                              ← StrChunk ..0000.66520!1 len:1 { "}" }
│                                ← StrChunk ..0000.66518!2 len:0 [2]
│                              → StrChunk ..0000.64304!1 len:1 { "\n" }
│                                ← StrChunk ..0000.66380!1 len:0 [1]
│                        → StrChunk ..0000.67220!30 len:737 { "}(\\mathit{val}) \\evalto A_p'$}" }
│                          ← StrChunk ..0000.67134!5 len:305 { "_p'$}" }
│                            ← StrChunk ..0000.66953!177 len:212 { "\n\\AxiomC{$A_p,\\, \\mathit{expr} \\" … }
│                              ← StrChunk ..0000.66918!19 len:34 { "\n\n\\begin{prooftree}" }
│                                ← StrChunk ..0000.64305!15 len:15 { "\\end{prooftree}" }
│                              → StrChunk ..0000.67131!1 len:1 { "A" }
│                                ← StrChunk ..0000.67130!1 len:0 [1]
│                            → StrChunk ..0000.67160!24 len:88 { "Insert}}\n\\TrinaryInfC{$A" }
│                              ← StrChunk ..0000.93013!5 len:25 { "Make-" }
│                                ← StrChunk ..0000.67140!20 len:20 { "\n\\LeftLabel{\\textsc{" }
│                              → StrChunk ..0000.257971!5 len:39 { "After" }
│                                ← StrChunk ..0000.67186!34 len:34 { "_p,\\, \\mathit{expr}.\\mathsf{inse" … }
│                          → StrChunk ..0000.67420!57 len:402 { "Delete}}\n\\BinaryInfC{$A_p,\\, \\ma" … }
│                            ← StrChunk ..0000.66937!16 len:191 { "\n\\end{prooftree}" }
│                              ← StrChunk ..0000.67132!1 len:0 [1]
│                                ← StrChunk ..0000.67184!1 len:0 [1]
│                              → StrChunk ..0000.93008!5 len:175 { "Make-" }
│                                ← StrChunk ..0000.67250!170 len:170 { "\n\n\\begin{prooftree}\n\\AxiomC{$A_p" … }
│                            → StrChunk ..0000.67650!3 len:154 { "$}\n" }
│                              ← StrChunk ..0000.67546!100 len:151 { "\n\\AxiomC{$\\mathit{ctr} = \\mathrm" … }
│                                ← StrChunk ..0000.67479!51 len:51 { "} \\evalto A_p'$}\n\\end{prooftree}" … }
│                              → StrChunk ..0000.67693!4 len:0 [4]
│                                ← StrChunk ..0000.67653!36 len:0 [36]
│                  → StrChunk ..0000.28540!8 len:318 [8]
│                    ← StrChunk ..0000.28918!2 len:256 [2]
│                      ← StrChunk ..0000.67477!1 len:256 [1]
│                        ← StrChunk ..0000.67956!4 len:256 { "\n   " }
│                          ← StrChunk ..0000.67763!2 len:84 [2]
│                            ← StrChunk ..0000.67955!1 len:55 { "(" }
│                              ← StrChunk ..0000.67700!21 len:43 { "\\AxiomC{$A_p,\\, \\math" }
│                                ← StrChunk ..0000.67697!3 len:0 [3]
│                                → StrChunk ..0000.67733!22 len:22 { "sf{apply}(\\mathsf{op}(" }
│                              → StrChunk ..0000.67944!3 len:11 { "ctr" }
│                                ← StrChunk ..0000.67755!8 len:8 { "\\mathit{" }
│                            → StrChunk ..0000.67766!7 len:29 { ", A_p(\\" }
│                              ← StrChunk ..0000.67947!8 len:9 { " + 1, p)" }
│                                ← StrChunk ..0000.67765!1 len:1 { "}" }
│                              → StrChunk ..0000.67773!13 len:13 { "mathsf{ops})," }
│                                ← StrChunk ..0000.67940!1 len:0 [1]
│                          → StrChunk ..0000.67862!70 len:168 { "inaryInfC{$A_p,\\, \\mathsf{makeOp" … }
│                            ← StrChunk ..0000.67813!47 len:76 { ") \\evalto A_p'$}\n\\LeftLabel{\\tex" … }
│                              ← StrChunk ..0000.68024!1 len:28 { ")" }
│                                ← StrChunk ..0000.67786!27 len:27 { " \\mathit{cur}, \\mathit{mut}" }
│                              → StrChunk ..0000.67860!2 len:1 [2]
│                                ← StrChunk ..0000.68009!1 len:1 { "B" }
│                            → StrChunk ..0000.67721!6 len:22 [6]
│                              ← StrChunk ..0000.67933!6 len:6 { "A_p'$}" }
│                                ← StrChunk ..0000.67932!1 len:0 [1]
│                              → StrChunk ..0000.67530!16 len:16 { "\n\\end{prooftree}" }
│                                ← StrChunk ..0000.67646!2 len:0 [2]
│                        → StrChunk ..0000.35006!1 len:0 [1]
│                          ← StrChunk ..0000.34992!14 len:0 [14]
│                            ← StrChunk ..0000.35110!20 len:0 [20]
│                              ← StrChunk ..0000.29115!1 len:0 [1]
│                                ← StrChunk ..0000.28775!8 len:0 [8]
│                              → StrChunk ..0000.29116!2 len:0 [2]
│                                ← StrChunk ..0000.35011!13 len:0 [13]
│                            → StrChunk ..0000.35045!12 len:0 [12]
│                              ← StrChunk ..0000.35024!6 len:0 [6]
│                                ← StrChunk ..0000.35007!2 len:0 [2]
│                              → StrChunk ..0000.35009!2 len:0 [2]
│                                ← StrChunk ..0000.35030!1 len:0 [1]
│                          → StrChunk ..0000.35031!14 len:0 [14]
│                            ← StrChunk ..0000.29125!2 len:0 [2]
│                              ← StrChunk ..0000.28783!1 len:0 [1]
│                                ← StrChunk ..0000.29118!1 len:0 [1]
│                              → StrChunk ..0000.28882!11 len:0 [11]
│                                ← StrChunk ..0000.28784!20 len:0 [20]
│                            → StrChunk ..0000.28896!5 len:0 [5]
│                              ← StrChunk ..0000.28901!1 len:0 [1]
│                                ← StrChunk ..0000.28893!3 len:0 [3]
│                              → StrChunk ..0000.28804!30 len:0 [30]
│                                ← StrChunk ..0000.28902!15 len:0 [15]
│                      → StrChunk ..0000.29047!7 len:0 [7]
│                        ← StrChunk ..0000.28876!6 len:0 [6]
│                          ← StrChunk ..0000.28974!1 len:0 [1]
│                            ← StrChunk ..0000.28973!1 len:0 [1]
│                              ← StrChunk ..0000.29127!2 len:0 [2]
│                                ← StrChunk ..0000.28834!12 len:0 [12]
│                                → StrChunk ..0000.28846!1 len:0 [1]
│                              → StrChunk ..0000.28976!1 len:0 [1]
│                                ← StrChunk ..0000.35208!1 len:0 [1]
│                            → StrChunk ..0000.29042!5 len:0 [5]
│                              ← StrChunk ..0000.28857!3 len:0 [3]
│                                ← StrChunk ..0000.28847!6 len:0 [6]
│                              → StrChunk ..0000.29129!2 len:0 [2]
│                                ← StrChunk ..0000.28860!16 len:0 [16]
│                          → StrChunk ..0000.29021!2 len:0 [2]
│                            ← StrChunk ..0000.28946!1 len:0 [1]
│                              ← StrChunk ..0000.35210!1 len:0 [1]
│                                ← StrChunk ..0000.28920!26 len:0 [26]
│                              → StrChunk ..0000.28947!2 len:0 [2]
│                                ← StrChunk ..0000.28950!1 len:0 [1]
│                            → StrChunk ..0000.28959!13 len:0 [13]
│                              ← StrChunk ..0000.28951!6 len:0 [6]
│                                ← StrChunk ..0000.28949!1 len:0 [1]
│                              → StrChunk ..0000.29085!3 len:0 [3]
│                                ← StrChunk ..0000.29109!6 len:0 [6]
│                        → StrChunk ..0000.28430!41 len:0 [41]
│                          ← StrChunk ..0000.28623!1 len:0 [1]
│                            ← StrChunk ..0000.28853!2 len:0 [2]
│                              ← StrChunk ..0000.28957!1 len:0 [1]
│                                ← StrChunk ..0000.28972!1 len:0 [1]
│                              → StrChunk ..0000.28474!13 len:0 [13]
│                                ← StrChunk ..0000.28395!18 len:0 [18]
│                            → StrChunk ..0000.28624!8 len:0 [8]
│                              ← StrChunk ..0000.28487!1 len:0 [1]
│                                ← StrChunk ..0000.28613!10 len:0 [10]
│                              → StrChunk ..0000.28632!3 len:0 [3]
│                                ← StrChunk ..0000.29131!12 len:0 [12]
│                          → StrChunk ..0000.35206!1 len:0 [1]
│                            ← StrChunk ..0000.29143!2 len:0 [2]
│                              ← StrChunk ..0000.28503!1 len:0 [1]
│                                ← StrChunk ..0000.28491!10 len:0 [10]
│                              → StrChunk ..0000.29023!1 len:0 [1]
│                                ← StrChunk ..0000.28504!1 len:0 [1]
│                            → StrChunk ..0000.28577!9 len:0 [9]
│                              ← StrChunk ..0000.28505!33 len:0 [33]
│                                ← StrChunk ..0000.29024!1 len:0 [1]
│                              → StrChunk ..0000.29145!2 len:0 [2]
│                                ← StrChunk ..0000.28538!2 len:0 [2]
│                    → StrChunk ..0000.30463!1 len:62 [1]
│                      ← StrChunk ..0000.35204!1 len:1 [1]
│                        ← StrChunk ..0000.28471!3 len:1 [3]
│                          ← StrChunk ..0000.28761!3 len:0 [3]
│                            ← StrChunk ..0000.28760!1 len:0 [1]
│                              ← StrChunk ..0000.28757!3 len:0 [3]
│                                ← StrChunk ..0000.28552!4 len:0 [4]
│                                → StrChunk ..0000.28556!1 len:0 [1]
│                              → StrChunk ..0000.28586!16 len:0 [16]
│                                ← StrChunk ..0000.28557!19 len:0 [19]
│                            → StrChunk ..0000.28603!10 len:0 [10]
│                              ← StrChunk ..0000.28764!1 len:0 [1]
│                                ← StrChunk ..0000.28602!1 len:0 [1]
│                              → StrChunk ..0000.28501!2 len:0 [2]
│                                ← StrChunk ..0000.28548!2 len:0 [2]
│                          → StrChunk ..0000.29525!1 len:1 [1]
│                            ← StrChunk ..0000.32926!16 len:1 [16]
│                              ← StrChunk ..0000.29009!12 len:0 [12]
│                                ← StrChunk ..0000.28413!2 len:0 [2]
│                              → StrChunk ..0000.29490!1 len:1 [1]
│                                ← StrChunk ..0000.29123!1 len:1 { "\n" }
│                            → StrChunk ..0000.29583!9 len:0 [9]
│                              ← StrChunk ..0000.29526!27 len:0 [27]
│                                ← StrChunk ..0000.29800!16 len:0 [16]
│                              → StrChunk ..0000.29592!45 len:0 [45]
│                                ← StrChunk ..0000.35144!1 len:0 [1]
│                        → StrChunk ..0000.32539!1 len:0 [1]
│                          ← StrChunk ..0000.32557!2 len:0 [2]
│                            ← StrChunk ..0000.29661!21 len:0 [21]
│                              ← StrChunk ..0000.32535!4 len:0 [4]
│                                ← StrChunk ..0000.29637!24 len:0 [24]
│                              → StrChunk ..0000.29682!7 len:0 [7]
│                                ← StrChunk ..0000.32555!2 len:0 [2]
│                            → StrChunk ..0000.32544!1 len:0 [1]
│                              ← StrChunk ..0000.32541!1 len:0 [1]
│                                ← StrChunk ..0000.29689!20 len:0 [20]
│                              → StrChunk ..0000.29709!4 len:0 [4]
│                                ← StrChunk ..0000.32542!1 len:0 [1]
│                          → StrChunk ..0000.29816!16 len:0 [16]
│                            ← StrChunk ..0000.29713!13 len:0 [13]
│                              ← StrChunk ..0000.32540!1 len:0 [1]
│                                ← StrChunk ..0000.32546!1 len:0 [1]
│                              → StrChunk ..0000.29726!33 len:0 [33]
│                                ← StrChunk ..0000.31192!5 len:0 [5]
│                            → StrChunk ..0000.31385!17 len:0 [17]
│                              ← StrChunk ..0000.29833!1 len:0 [1]
│                                ← StrChunk ..0000.29759!1 len:0 [1]
│                              → StrChunk ..0000.30436!15 len:0 [15]
│                                ← StrChunk ..0000.29834!1 len:0 [1]
│                      → StrChunk ..0000.32551!2 len:61 [2]
│                        ← StrChunk ..0000.68017!2 len:0 [2]
│                          ← StrChunk ..0000.29491!17 len:0 [17]
│                            ← StrChunk ..0000.29842!11 len:0 [11]
│                              ← StrChunk ..0000.29835!5 len:0 [5]
│                                ← StrChunk ..0000.30451!11 len:0 [11]
│                              → StrChunk ..0000.29760!1 len:0 [1]
│                                ← StrChunk ..0000.29840!1 len:0 [1]
│                            → StrChunk ..0000.29272!9 len:0 [9]
│                              ← StrChunk ..0000.29223!1 len:0 [1]
│                                ← StrChunk ..0000.29124!1 len:0 [1]
│                              → StrChunk ..0000.29281!10 len:0 [10]
│                                ← StrChunk ..0000.68014!1 len:0 [1]
│                          → StrChunk ..0000.35202!1 len:0 [1]
│                            ← StrChunk ..0000.29294!4 len:0 [4]
│                              ← StrChunk ..0000.68020!1 len:0 [1]
│                                ← StrChunk ..0000.29291!3 len:0 [3]
│                              → StrChunk ..0000.29298!48 len:0 [48]
│                                ← StrChunk ..0000.68022!2 len:0 [2]
│                            → StrChunk ..0000.32527!4 len:0 [4]
│                              ← StrChunk ..0000.29363!9 len:0 [9]
│                                ← StrChunk ..0000.29346!15 len:0 [15]
│                              → StrChunk ..0000.29379!16 len:0 [16]
│                                ← StrChunk ..0000.29372!5 len:0 [5]
│                        → StrChunk ..0000.31343!15 len:61 [15]
│                          ← StrChunk ..0000.32534!1 len:0 [1]
│                            ← StrChunk ..0000.29402!20 len:0 [20]
│                              ← StrChunk ..0000.32553!2 len:0 [2]
│                                ← StrChunk ..0000.29395!7 len:0 [7]
│                              → StrChunk ..0000.32550!1 len:0 [1]
│                                ← StrChunk ..0000.32533!1 len:0 [1]
│                            → StrChunk ..0000.32548!1 len:0 [1]
│                              ← StrChunk ..0000.32531!1 len:0 [1]
│                                ← StrChunk ..0000.29422!4 len:0 [4]
│                              → StrChunk ..0000.29426!25 len:0 [25]
│                                ← StrChunk ..0000.32532!1 len:0 [1]
│                          → StrChunk ..0000.33798!2 len:61 { "op" }
│                            ← StrChunk ..0000.35200!1 len:43 { "," }
│                              ← StrChunk ..0000.31822!33 len:33 { "\n\\begin{prooftree}\n\\AxiomC{$A_p," … }
│                                ← StrChunk ..0000.31821!1 len:0 [1]
│                              → StrChunk ..0000.31856!9 len:9 { " \\mathit{" }
│                                ← StrChunk ..0000.31855!1 len:0 [1]
│                            → StrChunk ..0000.31882!15 len:16 [15]
│                              ← StrChunk ..0000.31868!14 len:14 { "} \\evalto A_p'" }
│                                ← StrChunk ..0000.31865!3 len:0 [3]
│                              → StrChunk ..0000.33330!10 len:2 [10]
│                                ← StrChunk ..0000.31897!2 len:2 { "$}" }
│                → StrChunk ..0000.69393!13 len:4588 { " The \\textsc{" }
│                  ← StrChunk ..0000.68208!29 len:1485 { "\n\\AxiomC{$\\mathit{op.id} \\not" }
│                    ← StrChunk ..0000.32133!1 len:338 [1]
│                      ← StrChunk ..0000.31976!1 len:173 { "'" }
│                        ← StrChunk ..0000.35198!1 len:92 { "," }
│                          ← StrChunk ..0000.31899!35 len:51 { "\n\\LeftLabel{\\textsc{Apply-Local}" … }
│                            ← StrChunk ..0000.33887!2 len:0 [2]
│                              ← StrChunk ..0000.33857!30 len:0 [30]
│                                ← StrChunk ..0000.33850!5 len:0 [5]
│                                → StrChunk ..0000.33891!38 len:0 [38]
│                              → StrChunk ..0000.33340!35 len:0 [35]
│                                ← StrChunk ..0000.33855!1 len:0 [1]
│                            → StrChunk ..0000.33328!2 len:16 [2]
│                              ← StrChunk ..0000.68091!1 len:1 [1]
│                                ← StrChunk ..0000.68090!1 len:1 { "U" }
│                              → StrChunk ..0000.31935!15 len:15 { "naryInfC{$A_p,\\" }
│                                ← StrChunk ..0000.31934!1 len:0 [1]
│                          → StrChunk ..0000.33775!2 len:40 { "op" }
│                            ← StrChunk ..0000.33779!15 len:24 { "\\mathsf{apply}(" }
│                              ← StrChunk ..0000.31951!1 len:1 { " " }
│                                ← StrChunk ..0000.31950!1 len:0 [1]
│                              → StrChunk ..0000.31952!8 len:8 { "\\mathit{" }
│                                ← StrChunk ..0000.33777!1 len:0 [1]
│                            → StrChunk ..0000.33794!1 len:14 { ")" }
│                              ← StrChunk ..0000.31963!1 len:1 { "}" }
│                                ← StrChunk ..0000.31960!3 len:0 [3]
│                              → StrChunk ..0000.33375!1 len:12 [1]
│                                ← StrChunk ..0000.31964!12 len:12 { " \\evalto A_p" }
│                        → StrChunk ..0000.33999!1 len:80 { "q" }
│                          ← StrChunk ..0000.68057!5 len:48 { "A_p'(" }
│                            ← StrChunk ..0000.32004!7 len:35 { "\\mapsto" }
│                              ← StrChunk ..0000.32559!2 len:25 { "\\," }
│                                ← StrChunk ..0000.31981!23 len:23 { "[\\,\n    \\mathsf{queue} " }
│                              → StrChunk ..0000.32011!1 len:3 { " " }
│                                ← StrChunk ..0000.32561!2 len:2 { "\\," }
│                            → StrChunk ..0000.34009!2 len:8 [2]
│                              ← StrChunk ..0000.68055!2 len:7 { "sf" }
│                                ← StrChunk ..0000.34000!5 len:5 { "\\math" }
│                              → StrChunk ..0000.34005!2 len:1 [2]
│                                ← StrChunk ..0000.34011!1 len:1 { "{" }
│                          → StrChunk ..0000.32130!1 len:31 [1]
│                            ← StrChunk ..0000.32012!3 len:31 [3]
│                              ← StrChunk ..0000.68062!26 len:31 { ") \\,\\cup\\, \\{\\mathit{op}\\}" }
│                                ← StrChunk ..0000.34012!5 len:5 { "ueue}" }
│                              → StrChunk ..0000.32015!18 len:0 [18]
│                                ← StrChunk ..0000.33376!1 len:0 [1]
│                            → StrChunk ..0000.32033!4 len:0 [4]
│                              ← StrChunk ..0000.32131!1 len:0 [1]
│                                ← StrChunk ..0000.32574!1 len:0 [1]
│                              → StrChunk ..0000.32572!1 len:0 [1]
│                                ← StrChunk ..0000.32132!1 len:0 [1]
│                      → StrChunk ..0000.32148!23 len:165 { "\\}\\,]$}\n\\end{prooftree}" }
│                        ← StrChunk ..0000.32110!16 len:77 { "'(\\mathsf{ops}) " }
│                          ← StrChunk ..0000.32098!7 len:36 { "\\mapsto" }
│                            ← StrChunk ..0000.32075!2 len:23 { ",\\" }
│                              ← StrChunk ..0000.33377!1 len:0 [1]
│                                ← StrChunk ..0000.32037!7 len:0 [7]
│                                → StrChunk ..0000.32044!31 len:0 [31]
│                              → StrChunk ..0000.32563!2 len:21 { "\\," }
│                                ← StrChunk ..0000.32079!19 len:19 { ";\n    \\mathsf{ops} " }
│                            → StrChunk ..0000.32106!1 len:6 [1]
│                              ← StrChunk ..0000.32105!1 len:3 { " " }
│                                ← StrChunk ..0000.32565!2 len:2 { "\\," }
│                              → StrChunk ..0000.33378!1 len:3 [1]
│                                ← StrChunk ..0000.32107!3 len:3 { "A_p" }
│                          → StrChunk ..0000.32568!1 len:25 { "," }
│                            ← StrChunk ..0000.32512!1 len:7 [1]
│                              ← StrChunk ..0000.32570!1 len:2 { "," }
│                                ← StrChunk ..0000.32511!1 len:1 { "\\" }
│                              → StrChunk ..0000.32513!1 len:5 { "\\" }
│                                ← StrChunk ..0000.32126!4 len:4 { "\\cup" }
│                            → StrChunk ..0000.68050!3 len:17 { ".id" }
│                              ← StrChunk ..0000.32134!13 len:13 { " \\{\\mathit{op" }
│                                ← StrChunk ..0000.32514!1 len:0 [1]
│                              → StrChunk ..0000.68026!12 len:1 [12]
│                                ← StrChunk ..0000.32147!1 len:1 { "}" }
│                        → StrChunk ..0000.30555!60 len:65 [60]
│                          ← StrChunk ..0000.30631!2 len:0 [2]
│                            ← StrChunk ..0000.29761!1 len:0 [1]
│                              ← StrChunk ..0000.31977!2 len:0 [2]
│                                ← StrChunk ..0000.32077!1 len:0 [1]
│                              → StrChunk ..0000.30615!9 len:0 [9]
│                                ← StrChunk ..0000.30478!12 len:0 [12]
│                            → StrChunk ..0000.30524!23 len:0 [23]
│                              ← StrChunk ..0000.30492!2 len:0 [2]
│                                ← StrChunk ..0000.30624!4 len:0 [4]
│                              → StrChunk ..0000.30547!6 len:0 [6]
│                                ← StrChunk ..0000.30554!1 len:0 [1]
│                          → StrChunk ..0000.29960!6 len:65 [6]
│                            ← StrChunk ..0000.29881!14 len:29 [14]
│                              ← StrChunk ..0000.30490!1 len:0 [1]
│                                ← StrChunk ..0000.30494!30 len:0 [30]
│                              → StrChunk ..0000.29950!10 len:29 { "\n\\AxiomC{$" }
│                                ← StrChunk ..0000.29915!19 len:19 { "\n\n\\begin{prooftree}" }
│                            → StrChunk ..0000.29994!3 len:36 { "op}" }
│                              ← StrChunk ..0000.29982!8 len:8 { "\\mathit{" }
│                                ← StrChunk ..0000.29972!10 len:0 [10]
│                              → StrChunk ..0000.29998!25 len:25 { " \\in A_p(\\mathsf{recv})$}" }
│                                ← StrChunk ..0000.29997!1 len:0 [1]
│                    → StrChunk ..0000.68276!162 len:1118 { "\n\n\\begin{prooftree}\n\\AxiomC{}\n\\L" … }
│                      ← StrChunk ..0000.30202!21 len:306 { " A_p'[\\,\\mathsf{ops} " }
│                        ← StrChunk ..0000.30092!52 len:206 { " \\mathit{op} \\evalto A_p'$}\n\\Lef" … }
│                          ← StrChunk ..0000.30035!8 len:94 { "\\mathit{" }
│                            ← StrChunk ..0000.68247!16 len:32 { "(\\mathsf{ops})$}" }
│                              ← StrChunk ..0000.68238!3 len:6 { "in " }
│                                ← StrChunk ..0000.68237!1 len:0 [1]
│                                → StrChunk ..0000.68242!3 len:3 { "A_p" }
│                              → StrChunk ..0000.30023!10 len:10 { "\n\\AxiomC{$" }
│                                ← StrChunk ..0000.68245!1 len:0 [1]
│                            → StrChunk ..0000.30275!1 len:54 { "\\" }
│                              ← StrChunk ..0000.30043!49 len:52 { "deps} \\subseteq A_p(\\mathsf{ops}" … }
│                                ← StrChunk ..0000.68205!3 len:3 { "op." }
│                              → StrChunk ..0000.30276!1 len:1 [1]
│                                ← StrChunk ..0000.35196!1 len:1 { "," }
│                          → StrChunk ..0000.30161!2 len:60 [2]
│                            ← StrChunk ..0000.30144!4 len:17 { "}}\n\\" }
│                              ← StrChunk ..0000.31512!2 len:7 [2]
│                                ← StrChunk ..0000.31626!7 len:7 { "-Remote" }
│                              → StrChunk ..0000.30148!1 len:6 [1]
│                                ← StrChunk ..0000.68266!6 len:6 { "Quater" }
│                            → StrChunk ..0000.30178!1 len:43 [1]
│                              ← StrChunk ..0000.35194!1 len:16 { "," }
│                                ← StrChunk ..0000.30163!15 len:15 { "naryInfC{$A_p,\\" }
│                              → StrChunk ..0000.32523!4 len:27 { "\n   " }
│                                ← StrChunk ..0000.30179!23 len:23 { " \\mathsf{yield} \\evalto" }
│                        → StrChunk ..0000.32522!1 len:79 [1]
│                          ← StrChunk ..0000.32576!1 len:39 { "," }
│                            ← StrChunk ..0000.32581!2 len:32 { "\\," }
│                              ← StrChunk ..0000.30223!7 len:9 { "\\mapsto" }
│                                ← StrChunk ..0000.32579!2 len:2 { "\\," }
│                              → StrChunk ..0000.32519!1 len:21 { "\\" }
│                                ← StrChunk ..0000.30230!20 len:20 { " A_p'(\\mathsf{ops}) " }
│                            → StrChunk ..0000.30250!4 len:6 { "\\cup" }
│                              ← StrChunk ..0000.32515!2 len:0 [2]
│                                ← StrChunk ..0000.32520!1 len:0 [1]
│                              → StrChunk ..0000.32578!1 len:2 { "," }
│                                ← StrChunk ..0000.32521!1 len:1 { "\\" }
│                          → StrChunk ..0000.30259!7 len:40 { "\\}\\,]$}" }
│                            ← StrChunk ..0000.30257!2 len:17 { "op" }
│                              ← StrChunk ..0000.30266!8 len:11 { "\\mathit{" }
│                                ← StrChunk ..0000.30254!3 len:3 { " \\{" }
│                              → StrChunk ..0000.30274!1 len:4 { "}" }
│                                ← StrChunk ..0000.68272!3 len:3 { ".id" }
│                            → StrChunk ..0000.29990!2 len:16 [2]
│                              ← StrChunk ..0000.30033!1 len:0 [1]
│                                ← StrChunk ..0000.30149!6 len:0 [6]
│                              → StrChunk ..0000.29934!16 len:16 { "\n\\end{prooftree}" }
│                                ← StrChunk ..0000.29966!3 len:0 [3]
│                      → StrChunk ..0000.31516!26 len:650 [26]
│                        ← StrChunk ..0000.68509!3 len:471 [3]
│                          ← StrChunk ..0000.68703!14 len:471 { "end{prooftree}" }
│                            ← StrChunk ..0000.154448!7 len:250 { "Replica" }
│                              ← StrChunk ..0000.68515!11 len:80 { "q: \\mathrm{" }
│                                ← StrChunk ..0000.68440!69 len:69 { "A_p(\\mathsf{queue})\\,]$}\n\\end{pr" … }
│                              → StrChunk ..0000.68530!163 len:163 { "ID}$}\n\\LeftLabel{\\textsc{Recv}}\n" … }
│                                ← StrChunk ..0000.68526!4 len:0 [4]
│                            → StrChunk ..0000.69264!5 len:207 { ",\\, \\" }
│                              ← StrChunk ..0000.69269!1 len:79 { "'" }
│                                ← StrChunk ..0000.69186!78 len:78 { "\n\n\\begin{prooftree}\n\\AxiomC{$A_p" … }
│                              → StrChunk ..0000.68693!5 len:123 [5]
│                                ← StrChunk ..0000.69270!123 len:123 { "mathsf{yield} \\evalto A_p''$}\n\\L" … }
│                          → StrChunk ..0000.31602!10 len:0 [10]
│                            ← StrChunk ..0000.31553!45 len:0 [45]
│                              ← StrChunk ..0000.31457!19 len:0 [19]
│                                ← StrChunk ..0000.68438!1 len:0 [1]
│                              → StrChunk ..0000.31598!3 len:0 [3]
│                                ← StrChunk ..0000.31601!1 len:0 [1]
│                            → StrChunk ..0000.31492!2 len:0 [2]
│                              ← StrChunk ..0000.31633!22 len:0 [22]
│                                ← StrChunk ..0000.31615!11 len:0 [11]
│                              → StrChunk ..0000.31494!18 len:0 [18]
│                                ← StrChunk ..0000.31614!1 len:0 [1]
│                        → StrChunk ..0000.34048!1 len:179 { "," }
│                          ← StrChunk ..0000.31476!16 len:39 [16]
│                            ← StrChunk ..0000.31685!136 len:0 [136]
│                              ← StrChunk ..0000.31655!28 len:0 [28]
│                                ← StrChunk ..0000.31550!3 len:0 [3]
│                              → StrChunk ..0000.31542!4 len:0 [4]
│                                ← StrChunk ..0000.31683!1 len:0 [1]
│                            → StrChunk ..0000.30309!18 len:39 [18]
│                              ← StrChunk ..0000.69172!10 len:30 { "generating" }
│                                ← StrChunk ..0000.30277!20 len:20 { "\n\\caption{Rules for " }
│                              → StrChunk ..0000.30339!3 len:9 { "ing" }
│                                ← StrChunk ..0000.30327!6 len:6 { ", send" }
│                          → StrChunk ..0000.30356!11 len:139 { " operations" }
│                            ← StrChunk ..0000.69182!4 len:14 { "and " }
│                              ← StrChunk ..0000.30346!1 len:1 { " " }
│                                ← StrChunk ..0000.30342!4 len:0 [4]
│                              → StrChunk ..0000.34049!14 len:9 [14]
│                                ← StrChunk ..0000.30347!9 len:9 { "receiving" }
│                            → StrChunk ..0000.66293!6 len:114 { "\n\nThe " }
│                              ← StrChunk ..0000.30367!37 len:38 { "}\n\\label{fig:send-recv}\n\\end{fig" … }
│                                ← StrChunk ..0000.154774!1 len:1 { "." }
│                              → StrChunk ..0000.66306!70 len:70 { "evaluation rules for commands ar" … }
│                                ← StrChunk ..0000.66299!7 len:0 [7]
│                  → StrChunk ..0000.71235!62 len:3090 { ", and it models all network comm" … }
│                    ← StrChunk ..0000.70485!2 len:1878 { ". " }
│                      ← StrChunk ..0000.258201!3 len:1187 [3]
│                        ← StrChunk ..0000.69673!128 len:784 { "generates a new Lamport timestam" … }
│                          ← StrChunk ..0000.69467!77 len:226 { "define how these respective comm" … }
│                            ← StrChunk ..0000.69423!20 len:66 { "Insert} and \\textsc{" }
│                              ← StrChunk ..0000.69406!17 len:27 { "Assign}, \\textsc{" }
│                                ← StrChunk ..0000.92993!5 len:5 { "Make-" }
│                                → StrChunk ..0000.92998!5 len:5 { "Make-" }
│                              → StrChunk ..0000.69443!14 len:19 { "Delete} rules " }
│                                ← StrChunk ..0000.93003!5 len:5 { "Make-" }
│                            → StrChunk ..0000.69581!3 len:83 [3]
│                              ← StrChunk ..0000.69599!2 len:31 { "to" }
│                                ← StrChunk ..0000.69552!29 len:29 { "to the \\textsc{Make-Op} rule " }
│                              → StrChunk ..0000.69605!44 len:52 { "e and apply the operation. \\text" … }
│                                ← StrChunk ..0000.69584!8 len:8 { " generat" }
│                          → StrChunk ..0000.69870!44 len:430 { ".\n\n\\textsc{Make-Op} constructs a" … }
│                            ← StrChunk ..0000.69807!51 len:68 { "set of all operation IDs that ha" … }
│                              ← StrChunk ..0000.69801!5 len:6 { " the " }
│                                ← StrChunk ..0000.69806!1 len:1 { "," }
│                              → StrChunk ..0000.69858!12 len:11 [12]
│                                ← StrChunk ..0000.154995!11 len:11 { "replica $p$" }
│                            → StrChunk ..0000.69918!255 len:318 { "tuple of the form described abov" … }
│                              ← StrChunk ..0000.69914!2 len:4 { "} " }
│                                ← StrChunk ..0000.69916!2 len:2 { "()" }
│                              → StrChunk ..0000.258207!3 len:59 { "the" }
│                                ← StrChunk ..0000.70181!56 len:56 { "generated operations $A_p(\\maths" … }
│                        → StrChunk ..0000.152844!2 len:403 { "s." }
│                          ← StrChunk ..0000.154466!1 len:281 [1]
│                            ← StrChunk ..0000.152629!168 len:236 { "\nThe \\textsf{yield} command, ins" … }
│                              ← StrChunk ..0000.70250!60 len:60 { " ID to the set of processed oper" … }
│                                ← StrChunk ..0000.70237!13 len:0 [13]
│                              → StrChunk ..0000.154468!2 len:8 { "as" }
│                                ← StrChunk ..0000.154460!6 len:6 { "replic" }
│                            → StrChunk ..0000.152840!3 len:45 [3]
│                              ← StrChunk ..0000.152802!38 len:38 { ", and applying operations from r" … }
│                                ← StrChunk ..0000.152797!5 len:0 [5]
│                              → StrChunk ..0000.154473!6 len:7 { "eplica" }
│                                ← StrChunk ..0000.152843!1 len:1 { "r" }
│                          → StrChunk ..0000.70331!29 len:120 [29]
│                            ← StrChunk ..0000.70311!4 len:11 { "The " }
│                              ← StrChunk ..0000.70310!1 len:1 [1]
│                                ← StrChunk ..0000.152847!1 len:1 { " " }
│                              → StrChunk ..0000.70325!6 len:6 { "rules " }
│                                ← StrChunk ..0000.70315!10 len:0 [10]
│                            → StrChunk ..0000.70459!4 len:109 [4]
│                              ← StrChunk ..0000.70364!95 len:95 { "\\textsc{Apply-Remote}, \\textsc{S" … }
│                                ← StrChunk ..0000.70362!2 len:0 [2]
│                              → StrChunk ..0000.70477!8 len:14 [8]
│                                ← StrChunk ..0000.70463!14 len:14 { "\\textsf{yield}" }
│                      → StrChunk ..0000.259732!1 len:689 { "s" }
│                        ← StrChunk ..0000.70689!14 len:264 { "e sent by one " }
│                          ← StrChunk ..0000.154482!6 len:155 [6]
│                            ← StrChunk ..0000.70593!57 len:145 { " is nondeterministic, which mode" … }
│                              ← StrChunk ..0000.180692!9 len:77 { "ir effect" }
│                                ← StrChunk ..0000.70515!68 len:68 { "Since any of these rules can be " … }
│                                → StrChunk ..0000.70583!10 len:0 [10]
│                              → StrChunk ..0000.70663!13 len:11 [13]
│                                ← StrChunk ..0000.70652!11 len:11 { "the network" }
│                            → StrChunk ..0000.70688!1 len:10 { "m" }
│                              ← StrChunk ..0000.70677!4 len:4 { ": a " }
│                                ← StrChunk ..0000.70676!1 len:0 [1]
│                              → StrChunk ..0000.70682!5 len:5 { "essag" }
│                                ← StrChunk ..0000.70681!1 len:0 [1]
│                          → StrChunk ..0000.70730!1 len:95 { "r" }
│                            ← StrChunk ..0000.154491!6 len:27 { "eplica" }
│                              ← StrChunk ..0000.70706!1 len:1 { "r" }
│                                ← StrChunk ..0000.70703!3 len:0 [3]
│                              → StrChunk ..0000.70727!3 len:20 [3]
│                                ← StrChunk ..0000.70707!20 len:20 { " arrives at another " }
│                            → StrChunk ..0000.70752!39 len:67 { "at some arbitrarily later point " … }
│                              ← StrChunk ..0000.70731!1 len:7 { " " }
│                                ← StrChunk ..0000.154500!6 len:6 { "eplica" }
│                              → StrChunk ..0000.70843!3 len:21 { "mes" }
│                                ← StrChunk ..0000.70792!18 len:18 { ", and there is no " }
│                        → StrChunk ..0000.71104!41 len:424 { " $q$ and adds them to the receiv" … }
│                          ← StrChunk ..0000.70852!14 len:289 { "\\textsc{Send} " }
│                            ← StrChunk ..0000.70791!1 len:44 { "." }
│                              ← StrChunk ..0000.70810!33 len:37 { "ordering guarantee in the networ" … }
│                                ← StrChunk ..0000.70846!4 len:4 { "age " }
│                              → StrChunk ..0000.70866!4 len:6 { "The " }
│                                ← StrChunk ..0000.70850!2 len:2 { "\n\n" }
│                            → StrChunk ..0000.71100!3 len:231 [3]
│                              ← StrChunk ..0000.70921!179 len:224 { " $A_p(\\mathsf{queue})$ by \\texts" … }
│                                ← StrChunk ..0000.70870!45 len:45 { "rule takes any operations that w" … }
│                              → StrChunk ..0000.154509!6 len:7 { "eplica" }
│                                ← StrChunk ..0000.71103!1 len:1 { "r" }
│                          → StrChunk ..0000.71174!1 len:94 { "r" }
│                            ← StrChunk ..0000.71153!4 len:24 [4]
│                              ← StrChunk ..0000.71345!4 len:10 { "math" }
│                                ← StrChunk ..0000.71147!6 len:6 { "$A_p(\\" }
│                              → StrChunk ..0000.71171!3 len:14 [3]
│                                ← StrChunk ..0000.71157!14 len:14 { "sf{recv})$ of " }
│                            → StrChunk ..0000.71231!3 len:69 [3]
│                              ← StrChunk ..0000.71175!56 len:62 { " $p$. This is the only rule that" … }
│                                ← StrChunk ..0000.154518!6 len:6 { "eplica" }
│                              → StrChunk ..0000.154527!6 len:7 { "eplica" }
│                                ← StrChunk ..0000.71234!1 len:1 { "r" }
│                    → StrChunk ..0000.82291!22 len:1150 { "\\evalto \\mathit{child}" }
│                      ← StrChunk ..0000.71779!34 len:579 { " the operations, which we discus" … }
│                        ← StrChunk ..0000.258270!7 len:433 { "applies" }
│                          ← StrChunk ..0000.71483!1 len:238 { "s" }
│                            ← StrChunk ..0000.71335!4 len:116 [4]
│                              ← StrChunk ..0000.71353!4 len:40 { "math" }
│                                ← StrChunk ..0000.71299!36 len:36 { "appears in the receive buffer $A" … }
│                                → StrChunk ..0000.71357!1 len:0 [1]
│                              → StrChunk ..0000.71359!74 len:76 { "{recv})$, the rule \\textsc{Apply" … }
│                                ← StrChunk ..0000.71339!2 len:2 { "sf" }
│                            → StrChunk ..0000.71524!9 len:121 { "are satis" }
│                              ← StrChunk ..0000.71484!34 len:84 { " and that its causal dependencie" … }
│                                ← StrChunk ..0000.71433!50 len:50 { " that the operation has not alre" … }
│                              → StrChunk ..0000.71534!28 len:28 { "fied, \\textsc{Apply-Remote} " }
│                                ← StrChunk ..0000.71533!1 len:0 [1]
│                          → StrChunk ..0000.71641!1 len:188 { " " }
│                            ← StrChunk ..0000.71600!38 len:68 { "way as \\textsc{Apply-Local}, and" … }
│                              ← StrChunk ..0000.71571!27 len:27 { " the operation in the same " }
│                                ← StrChunk ..0000.71562!9 len:0 [9]
│                              → StrChunk ..0000.71638!3 len:3 [3]
│                                ← StrChunk ..0000.258223!3 len:3 { "its" }
│                            → StrChunk ..0000.258253!8 len:119 { "applying" }
│                              ← StrChunk ..0000.71652!111 len:111 { "ID to the set of processed opera" … }
│                                ← StrChunk ..0000.71642!10 len:0 [10]
│                              → StrChunk ..0000.71777!2 len:0 [2]
│                                ← StrChunk ..0000.71763!8 len:0 [8]
│                        → StrChunk ..0000.71875!8 len:112 [8]
│                          ← StrChunk ..0000.71833!23 len:41 { "\n\n\\subsection{Applying " }
│                            ← StrChunk ..0000.71832!1 len:5 [1]
│                              ← StrChunk ..0000.71813!9 len:4 [9]
│                                ← StrChunk ..0000.224768!4 len:4 { "next" }
│                              → StrChunk ..0000.71831!1 len:1 { "." }
│                                ← StrChunk ..0000.71822!9 len:0 [9]
│                            → StrChunk ..0000.71856!1 len:13 [1]
│                              ← StrChunk ..0000.252354!1 len:1 [1]
│                                ← StrChunk ..0000.252357!1 len:1 { "O" }
│                              → StrChunk ..0000.71873!2 len:12 { "\n\n" }
│                                ← StrChunk ..0000.71857!10 len:10 { "perations}" }
│                          → StrChunk ..0000.71897!1 len:71 { "}" }
│                            ← StrChunk ..0000.71890!6 len:22 { "figure" }
│                              ← StrChunk ..0000.84717!8 len:15 { "sideways" }
│                                ← StrChunk ..0000.71883!7 len:7 { "\\begin{" }
│                              → StrChunk ..0000.71896!1 len:1 [1]
│                                ← StrChunk ..0000.84861!1 len:1 { "*" }
│                            → StrChunk ..0000.72072!21 len:48 [21]
│                              ← StrChunk ..0000.72060!10 len:28 { "\n\\AxiomC{$" }
│                                ← StrChunk ..0000.72026!18 len:18 { "\n\\begin{prooftree}" }
│                              → StrChunk ..0000.82281!8 len:20 { ",\\, k_1 " }
│                                ← StrChunk ..0000.72093!12 len:12 { "\\mathit{ctx}" }
│                      → StrChunk ..0000.82446!25 len:549 { ") \\evalto \\mathit{ctx}'$}" }
│                        ← StrChunk ..0000.72180!80 len:245 { "\n    \\mathsf{cursor}(\\langle k_2" … }
│                          ← StrChunk ..0000.82320!4 len:69 { "hild" }
│                            ← StrChunk ..0000.72106!12 len:21 { "$}\n\\AxiomC{$" }
│                              ← StrChunk ..0000.72105!1 len:0 [1]
│                                ← StrChunk ..0000.82289!1 len:0 [1]
│                              → StrChunk ..0000.72118!9 len:9 { "\\mathit{c" }
│                                ← StrChunk ..0000.82324!19 len:0 [19]
│                            → StrChunk ..0000.72130!5 len:44 [5]
│                              ← StrChunk ..0000.72129!1 len:1 { "}" }
│                                ← StrChunk ..0000.72127!2 len:0 [2]
│                              → StrChunk ..0000.82343!3 len:43 [3]
│                                ← StrChunk ..0000.72135!43 len:43 { ",\\, \\mathsf{op}(\\mathit{id}, \\ma" … }
│                          → StrChunk ..0000.82356!1 len:96 { "'" }
│                            ← StrChunk ..0000.82351!5 len:22 { "child" }
│                              ← StrChunk ..0000.72260!16 len:16 { "\\evalto \\mathit{" }
│                                ← StrChunk ..0000.82375!7 len:0 [7]
│                              → StrChunk ..0000.72281!1 len:1 { "}" }
│                                ← StrChunk ..0000.72276!5 len:0 [5]
│                            → StrChunk ..0000.72282!2 len:73 [2]
│                              ← StrChunk ..0000.82357!18 len:2 [18]
│                                ← StrChunk ..0000.85109!2 len:2 { "$}" }
│                              → StrChunk ..0000.203914!14 len:71 { ", \\mathit{mut}" }
│                                ← StrChunk ..0000.82389!57 len:57 { "\n\\AxiomC{$\\mathit{ctx},\\, \\maths" … }
│                        → StrChunk ..0000.72529!2 len:279 { "\\," }
│                          ← StrChunk ..0000.82474!1 len:227 { "'" }
│                            ← StrChunk ..0000.72315!1 len:208 [1]
│                              ← StrChunk ..0000.82472!2 len:33 { "Tr" }
│                                ← StrChunk ..0000.72284!31 len:31 { "\n\\LeftLabel{\\textsc{Descend}}\n\\" }
│                              → StrChunk ..0000.72329!164 len:175 { "\\mathit{ctx},\\, \\mathsf{op}(\\mat" … }
│                                ← StrChunk ..0000.72316!11 len:11 { "inaryInfC{$" }
│                            → StrChunk ..0000.72528!1 len:18 { "\\" }
│                              ← StrChunk ..0000.72493!8 len:9 { "[\\, k_1 " }
│                                ← StrChunk ..0000.82486!1 len:1 { " " }
│                              → StrChunk ..0000.72501!7 len:8 { "\\mapsto" }
│                                ← StrChunk ..0000.72527!1 len:1 { "," }
│                          → StrChunk ..0000.72523!4 len:50 { " \\,]" }
│                            ← StrChunk ..0000.72517!5 len:16 [5]
│                              ← StrChunk ..0000.82480!5 len:14 { "child" }
│                                ← StrChunk ..0000.72508!9 len:9 { " \\mathit{" }
│                              → StrChunk ..0000.82485!1 len:2 { "'" }
│                                ← StrChunk ..0000.72522!1 len:1 { "}" }
│                            → StrChunk ..0000.72070!1 len:30 [1]
│                              ← StrChunk ..0000.72178!1 len:2 [1]
│                                ← StrChunk ..0000.72327!2 len:2 { "$}" }
│                              → StrChunk ..0000.155006!12 len:28 { "\\vspace{6pt}" }
│                                ← StrChunk ..0000.72044!16 len:16 { "\n\\end{prooftree}" }
│            → StrChunk ..0000.27420!1 len:15655 { "\n" }
│              ← StrChunk ..0000.34098!9 len:5011 [9]
│                ← StrChunk ..0000.75267!15 len:4020 { "egin{prooftree}" }
│                  ← StrChunk ..0000.83565!1 len:1951 { "{" }
│                    ← StrChunk ..0000.82977!55 len:1451 { "}\n\\UnaryInfC{$\\mathit{ctx},\\, \\m" … }
│                      ← StrChunk ..0000.82832!1 len:448 [1]
│                        ← StrChunk ..0000.82766!13 len:352 { "\\textsc{Child" }
│                          ← StrChunk ..0000.82591!3 len:247 [3]
│                            ← StrChunk ..0000.82577!13 len:88 { "\\textsc{Child" }
│                              ← StrChunk ..0000.82514!56 len:70 { "\n\\AxiomC{$k \\in \\mathrm{dom}(\\ma" … }
│                                ← StrChunk ..0000.82487!14 len:14 { "\\begin{center}" }
│                                → StrChunk ..0000.82576!1 len:0 [1]
│                              → StrChunk ..0000.82590!1 len:5 { "}" }
│                                ← StrChunk ..0000.83244!4 len:4 { "-Get" }
│                            → StrChunk ..0000.82677!51 len:159 { "space{3em}\n%\n\\AxiomC{$\\mathsf{ma" … }
│                              ← StrChunk ..0000.82626!43 len:73 { "k \\evalto \\mathit{ctx}(k)$}\n\\Dis" … }
│                                ← StrChunk ..0000.82594!30 len:30 { "}\n\\UnaryInfC{$\\mathit{ctx},\\, " }
│                              → StrChunk ..0000.82765!1 len:35 [1]
│                                ← StrChunk ..0000.82730!35 len:35 { "rm{dom}(\\mathit{ctx})$}\n\\LeftLab" … }
│                          → StrChunk ..0000.87078!11 len:92 { "hspace{3em}" }
│                            ← StrChunk ..0000.82782!3 len:81 [3]
│                              ← StrChunk ..0000.82781!1 len:5 { "}" }
│                                ← StrChunk ..0000.83251!4 len:4 { "-Map" }
│                              → StrChunk ..0000.82834!29 len:76 { "\\evalto \\{\\}$}\n\\DisplayProof\\" }
│                                ← StrChunk ..0000.82785!47 len:47 { "}\n\\UnaryInfC{$\\mathit{ctx},\\, \\m" … }
│                            → StrChunk ..0000.82863!13 len:0 [13]
│                              ← StrChunk ..0000.85146!11 len:0 [11]
│                                ← StrChunk ..0000.85213!28 len:0 [28]
│                              → StrChunk ..0000.82876!3 len:0 [3]
│                                ← StrChunk ..0000.82882!2 len:0 [2]
│                        → StrChunk ..0000.85186!1 len:96 { "\n" }
│                          ← StrChunk ..0000.82501!13 len:2 [13]
│                            ← StrChunk ..0000.82669!4 len:0 [4]
│                              ← StrChunk ..0000.82728!1 len:0 [1]
│                                ← StrChunk ..0000.82779!1 len:0 [1]
│                              → StrChunk ..0000.82570!3 len:0 [3]
│                                ← StrChunk ..0000.82624!1 len:0 [1]
│                            → StrChunk ..0000.85170!1 len:2 [1]
│                              ← StrChunk ..0000.87049!1 len:2 { "%" }
│                                ← StrChunk ..0000.82884!1 len:1 { "\n" }
│                              → StrChunk ..0000.85187!14 len:0 [14]
│                                ← StrChunk ..0000.82885!1 len:0 [1]
│                          → StrChunk ..0000.82911!48 len:93 { " \\notin \\mathrm{dom}(\\mathit{ctx" … }
│                            ← StrChunk ..0000.83147!15 len:26 { "\\mathsf{listT}(" }
│                              ← StrChunk ..0000.82901!9 len:9 { "\\AxiomC{$" }
│                                ← StrChunk ..0000.82886!15 len:0 [15]
│                              → StrChunk ..0000.83162!1 len:2 { ")" }
│                                ← StrChunk ..0000.82910!1 len:1 { "k" }
│                            → StrChunk ..0000.83257!5 len:19 { "-List" }
│                              ← StrChunk ..0000.82960!13 len:13 { "\\textsc{Child" }
│                                ← StrChunk ..0000.82959!1 len:0 [1]
│                              → StrChunk ..0000.82974!3 len:1 [3]
│                                ← StrChunk ..0000.82973!1 len:1 { "}" }
│                      → StrChunk ..0000.87535!2 len:948 [2]
│                        ← StrChunk ..0000.87130!14 len:715 { "\\begin{center}" }
│                          ← StrChunk ..0000.83082!35 len:127 { "\\mathsf{tail} \\,\\}$}\n\\DisplayPro" … }
│                            ← StrChunk ..0000.83066!7 len:50 { "\\mapsto" }
│                              ← StrChunk ..0000.83032!34 len:40 { " \\{\\,\\mathsf{next}(\\mathsf{head}" … }
│                                ← StrChunk ..0000.83078!4 len:4 { "\n   " }
│                                → StrChunk ..0000.83074!2 len:2 { "\\," }
│                              → StrChunk ..0000.83073!1 len:3 { " " }
│                                ← StrChunk ..0000.83076!2 len:2 { "\\," }
│                            → StrChunk ..0000.87128!1 len:42 { "\n" }
│                              ← StrChunk ..0000.155018!12 len:40 { "\\vspace{6pt}" }
│                                ← StrChunk ..0000.87100!28 len:28 { "proofSkipAmount\n\\end{center}" }
│                              → StrChunk ..0000.83128!1 len:1 { "\n" }
│                                ← StrChunk ..0000.83117!11 len:0 [11]
│                          → StrChunk ..0000.87177!58 len:574 { "AxiomC{$\\mathsf{pres}(k) \\in \\ma" … }
│                            ← StrChunk ..0000.83266!94 len:183 { "\\textsc{Child-Reg}}\n\\UnaryInfC{$" … }
│                              ← StrChunk ..0000.83163!74 len:74 { "\n\\AxiomC{$\\mathsf{regT}(k) \\noti" … }
│                                ← StrChunk ..0000.83129!1 len:0 [1]
│                              → StrChunk ..0000.87235!1 len:15 { "\\" }
│                                ← StrChunk ..0000.87163!14 len:14 { "hspace{3em}\n%\n" }
│                            → StrChunk ..0000.87247!16 len:333 { "\\textsc{Presence" }
│                              ← StrChunk ..0000.87263!1 len:12 { "$" }
│                                ← StrChunk ..0000.87236!11 len:11 { "\\LeftLabel{" }
│                              → StrChunk ..0000.87539!36 len:305 { "\\{\\}$}\n\\DisplayProof\\proofSkipAm" … }
│                                ← StrChunk ..0000.87266!269 len:269 { "}_1$}\n\\UnaryInfC{$\\mathit{ctx},\\" … }
│                        → StrChunk ..0000.83408!9 len:233 [9]
│                          ← StrChunk ..0000.83388!11 len:40 { "end{center}" }
│                            ← StrChunk ..0000.83239!1 len:2 [1]
│                              ← StrChunk ..0000.83360!15 len:0 [15]
│                                ← StrChunk ..0000.87264!1 len:0 [1]
│                              → StrChunk ..0000.83132!2 len:2 { "\n\\" }
│                                ← StrChunk ..0000.83237!1 len:0 [1]
│                            → StrChunk ..0000.203937!6 len:27 { "center" }
│                              ← StrChunk ..0000.83399!9 len:21 { "\n\n\\begin{" }
│                                ← StrChunk ..0000.155030!12 len:12 { "\\vspace{6pt}" }
│                              → StrChunk ..0000.85250!6 len:0 [6]
│                                ← StrChunk ..0000.87581!9 len:0 [9]
│                          → StrChunk ..0000.83534!18 len:193 { "\\mathsf{pres}(k) \\" }
│                            ← StrChunk ..0000.83434!75 len:161 { "\n\\AxiomC{$k_\\mathit{tag} \\in \\{\\" … }
│                              ← StrChunk ..0000.204008!46 len:47 { "\n\\AxiomC{$\\mathit{mut} \\not= \\ma" … }
│                                ← StrChunk ..0000.83417!1 len:1 { "}" }
│                              → StrChunk ..0000.87605!16 len:39 { "\\mathit{ctx},\\, " }
│                                ← StrChunk ..0000.83511!23 len:23 { "{regT}(k)\\}$}\n\\AxiomC{$" }
│                            → StrChunk ..0000.83557!6 len:14 { " \\math" }
│                              ← StrChunk ..0000.83552!5 len:6 [5]
│                                ← StrChunk ..0000.87626!6 len:6 { "evalto" }
│                              → StrChunk ..0000.83563!2 len:2 [2]
│                                ← StrChunk ..0000.87634!2 len:2 { "it" }
│                    → StrChunk ..0000.204054!43 len:499 { "\\AxiomC{$\\mathit{mut} = \\mathsf{" … }
│                      ← StrChunk ..0000.83809!31 len:258 [31]
│                        ← StrChunk ..0000.83622!152 len:39 [152]
│                          ← StrChunk ..0000.83600!1 len:39 [1]
│                            ← StrChunk ..0000.83572!14 len:20 [14]
│                              ← StrChunk ..0000.83566!3 len:5 [3]
│                                ← StrChunk ..0000.87639!4 len:4 { "pres" }
│                                → StrChunk ..0000.83569!1 len:1 { "}" }
│                              → StrChunk ..0000.204097!1 len:15 { "$" }
│                                ← StrChunk ..0000.83586!14 len:14 { "$}\n\\LeftLabel{" }
│                            → StrChunk ..0000.204098!3 len:19 { "_1$" }
│                              ← StrChunk ..0000.83617!1 len:15 { "}" }
│                                ← StrChunk ..0000.83601!14 len:14 { "\\textsc{Add-ID" }
│                              → StrChunk ..0000.83621!1 len:1 { "}" }
│                                ← StrChunk ..0000.83618!3 len:0 [3]
│                          → StrChunk ..0000.85368!4 len:0 [4]
│                            ← StrChunk ..0000.83509!1 len:0 [1]
│                              ← StrChunk ..0000.83570!1 len:0 [1]
│                                ← StrChunk ..0000.83615!1 len:0 [1]
│                              → StrChunk ..0000.85270!14 len:0 [14]
│                                ← StrChunk ..0000.83418!2 len:0 [2]
│                            → StrChunk ..0000.83774!1 len:0 [1]
│                              ← StrChunk ..0000.83420!14 len:0 [14]
│                                ← StrChunk ..0000.85284!10 len:0 [10]
│                              → StrChunk ..0000.83775!18 len:0 [18]
│                                ← StrChunk ..0000.85294!1 len:0 [1]
│                        → StrChunk ..0000.84140!5 len:219 { "\\math" }
│                          ← StrChunk ..0000.83995!22 len:146 { "inaryInfC{$\\mathit{ctx" }
│                            ← StrChunk ..0000.83992!2 len:4 { "\n\\" }
│                              ← StrChunk ..0000.83957!35 len:0 [35]
│                                ← StrChunk ..0000.83842!113 len:0 [113]
│                              → StrChunk ..0000.83994!1 len:2 [1]
│                                ← StrChunk ..0000.204006!2 len:2 { "Tr" }
│                            → StrChunk ..0000.203991!14 len:120 { ", \\mathit{mut}" }
│                              ← StrChunk ..0000.84031!37 len:47 { "sf{addId}(k_\\mathit{tag}, \\mathi" … }
│                                ← StrChunk ..0000.84019!10 len:10 { "},\\, \\math" }
│                              → StrChunk ..0000.84127!13 len:59 [13]
│                                ← StrChunk ..0000.84068!59 len:59 { ") \\evalto\n    \\mathit{ctx}[\\, \\m" … }
│                          → StrChunk ..0000.84184!2 len:68 { "\\," }
│                            ← StrChunk ..0000.84147!6 len:9 { "{pres}" }
│                              ← StrChunk ..0000.84145!2 len:2 [2]
│                                ← StrChunk ..0000.88050!2 len:2 { "it" }
│                              → StrChunk ..0000.84157!1 len:1 { " " }
│                                ← StrChunk ..0000.84153!4 len:0 [4]
│                            → StrChunk ..0000.84162!22 len:57 { " \\{\\mathit{id}\\} \\,]$}" }
│                              ← StrChunk ..0000.84186!2 len:6 { "\\," }
│                                ← StrChunk ..0000.84158!4 len:4 { "\\cup" }
│                              → StrChunk ..0000.203970!21 len:29 { "yProof\\hspace{3em}\n%\n" }
│                                ← StrChunk ..0000.203958!8 len:8 { "\n\\Displa" }
│                      → StrChunk ..0000.72940!2 len:198 [2]
│                        ← StrChunk ..0000.85322!6 len:194 [6]
│                          ← StrChunk ..0000.84017!1 len:181 [1]
│                            ← StrChunk ..0000.203966!2 len:169 [2]
│                              ← StrChunk ..0000.204121!157 len:169 { "textsc{Add-ID}_2$}\n\\UnaryInfC{$\\" … }
│                                ← StrChunk ..0000.204101!12 len:12 { "LeftLabel{$\\" }
│                                → StrChunk ..0000.204113!4 len:0 [4]
│                              → StrChunk ..0000.84029!1 len:0 [1]
│                                ← StrChunk ..0000.85328!30 len:0 [30]
│                            → StrChunk ..0000.83793!6 len:12 { "\n\\end{" }
│                              ← StrChunk ..0000.83840!1 len:0 [1]
│                                ← StrChunk ..0000.83955!1 len:0 [1]
│                              → StrChunk ..0000.87596!9 len:6 [9]
│                                ← StrChunk ..0000.203952!6 len:6 { "center" }
│                          → StrChunk ..0000.72533!17 len:13 [17]
│                            ← StrChunk ..0000.155042!12 len:13 { "\\vspace{6pt}" }
│                              ← StrChunk ..0000.83808!1 len:1 { "}" }
│                                ← StrChunk ..0000.83799!9 len:0 [9]
│                              → StrChunk ..0000.83130!1 len:0 [1]
│                                ← StrChunk ..0000.83134!13 len:0 [13]
│                            → StrChunk ..0000.73082!1 len:0 [1]
│                              ← StrChunk ..0000.72670!27 len:0 [27]
│                                ← StrChunk ..0000.72566!98 len:0 [98]
│                              → StrChunk ..0000.72896!35 len:0 [35]
│                                ← StrChunk ..0000.72697!197 len:0 [197]
│                        → StrChunk ..0000.73209!2 len:4 [2]
│                          ← StrChunk ..0000.72664!3 len:4 [3]
│                            ← StrChunk ..0000.73058!23 len:0 [23]
│                              ← StrChunk ..0000.72942!114 len:0 [114]
│                                ← StrChunk ..0000.72931!9 len:0 [9]
│                              → StrChunk ..0000.72894!1 len:0 [1]
│                                ← StrChunk ..0000.73056!1 len:0 [1]
│                            → StrChunk ..0000.81719!2 len:4 { "\\b" }
│                              ← StrChunk ..0000.73083!2 len:2 { "\n\n" }
│                                ← StrChunk ..0000.72550!16 len:0 [16]
│                              → StrChunk ..0000.73685!19 len:0 [19]
│                                ← StrChunk ..0000.73085!124 len:0 [124]
│                          → StrChunk ..0000.73562!82 len:0 [82]
│                            ← StrChunk ..0000.73312!102 len:0 [102]
│                              ← StrChunk ..0000.73704!3 len:0 [3]
│                                ← StrChunk ..0000.73219!93 len:0 [93]
│                              → StrChunk ..0000.73414!147 len:0 [147]
│                                ← StrChunk ..0000.73707!18 len:0 [18]
│                            → StrChunk ..0000.73211!4 len:0 [4]
│                              ← StrChunk ..0000.73644!1 len:0 [1]
│                                ← StrChunk ..0000.73646!39 len:0 [39]
│                              → StrChunk ..0000.75264!3 len:0 [3]
│                                ← StrChunk ..0000.71912!1 len:0 [1]
│                  → StrChunk ..0000.85892!23 len:2054 { "evalto \\mathit{child}$}" }
│                    ← StrChunk ..0000.75818!34 len:1094 { "deps},\n    \\mathsf{cursor}(\\lang" … }
│                      ← StrChunk ..0000.75557!71 len:508 [71]
│                        ← StrChunk ..0000.84544!45 len:342 { " \\mathsf{addId}(\\mathsf{regT}(k)" … }
│                          ← StrChunk ..0000.84223!2 len:238 [2]
│                            ← StrChunk ..0000.75410!34 len:210 [34]
│                              ← StrChunk ..0000.75386!10 len:108 { "{\\string}}" }
│                                ← StrChunk ..0000.75298!86 len:86 { "\n\\AxiomC{$\\mathit{val} \\not= \\te" … }
│                                → StrChunk ..0000.75398!12 len:12 { "$}\n\\AxiomC{$" }
│                              → StrChunk ..0000.84227!90 len:102 { ",\\, \\mathsf{clear}(\\mathit{deps}" … }
│                                ← StrChunk ..0000.75444!12 len:12 { "\\mathit{ctx}" }
│                            → StrChunk ..0000.75463!8 len:28 { "AxiomC{$" }
│                              ← StrChunk ..0000.75457!4 len:4 { "$}\n\\" }
│                                ← StrChunk ..0000.75456!1 len:0 [1]
│                              → StrChunk ..0000.85764!2 len:16 { "\\," }
│                                ← StrChunk ..0000.84530!14 len:14 { "\\mathit{ctx}'," }
│                          → StrChunk ..0000.75471!12 len:59 [12]
│                            ← StrChunk ..0000.204309!4 len:59 { "\n   " }
│                              ← StrChunk ..0000.84589!1 len:32 { ")" }
│                                ← StrChunk ..0000.204278!31 len:31 { ", \\mathsf{assign}(\\mathit{val})" }
│                              → StrChunk ..0000.75538!19 len:23 [19]
│                                ← StrChunk ..0000.84590!23 len:23 { " \\evalto \\mathit{ctx}''" }
│                            → StrChunk ..0000.75491!25 len:0 [25]
│                              ← StrChunk ..0000.75483!4 len:0 [4]
│                                ← StrChunk ..0000.76022!6 len:0 [6]
│                              → StrChunk ..0000.76028!4 len:0 [4]
│                                ← StrChunk ..0000.75530!8 len:0 [8]
│                        → StrChunk ..0000.75722!2 len:166 { "te" }
│                          ← StrChunk ..0000.85762!2 len:84 { "\\," }
│                            ← StrChunk ..0000.75638!58 len:27 [58]
│                              ← StrChunk ..0000.75628!6 len:0 [6]
│                                ← StrChunk ..0000.75635!2 len:0 [2]
│                              → StrChunk ..0000.84613!25 len:27 { "\n\\AxiomC{$\\mathit{ctx}''," }
│                                ← StrChunk ..0000.75696!2 len:2 { "$}" }
│                            → StrChunk ..0000.85372!1 len:55 [1]
│                              ← StrChunk ..0000.75698!12 len:54 { "\n\\LeftLabel{" }
│                                ← StrChunk ..0000.84638!42 len:42 { " \\mathsf{regT}(k) \\evalto \\mathi" … }
│                              → StrChunk ..0000.75711!1 len:1 { "\\" }
│                                ← StrChunk ..0000.75710!1 len:0 [1]
│                          → StrChunk ..0000.75740!3 len:80 [3]
│                            ← StrChunk ..0000.75726!4 len:12 { "sc{A" }
│                              ← StrChunk ..0000.75724!2 len:2 [2]
│                                ← StrChunk ..0000.75732!2 len:2 { "xt" }
│                              → StrChunk ..0000.85373!3 len:6 [3]
│                                ← StrChunk ..0000.75734!6 len:6 { "ssign}" }
│                            → StrChunk ..0000.75746!3 len:68 [3]
│                              ← StrChunk ..0000.84702!6 len:9 { "Quater" }
│                                ← StrChunk ..0000.75743!3 len:3 { "}\n\\" }
│                              → StrChunk ..0000.75809!1 len:59 { "{" }
│                                ← StrChunk ..0000.75749!58 len:58 { "naryInfC{$\\mathit{ctx},\\, \\maths" … }
│                      → StrChunk ..0000.75396!1 len:552 [1]
│                        ← StrChunk ..0000.75967!3 len:172 [3]
│                          ← StrChunk ..0000.84684!2 len:122 { "''" }
│                            ← StrChunk ..0000.78913!2 len:70 { "it" }
│                              ← StrChunk ..0000.76734!1 len:63 { ")" }
│                                ← StrChunk ..0000.75854!44 len:44 { "\\rangle,\\, k), \\mathsf{assign}(\\" … }
│                                → StrChunk ..0000.75898!18 len:18 { " \\evalto\n    \\math" }
│                              → StrChunk ..0000.75918!5 len:5 { "{ctx}" }
│                                ← StrChunk ..0000.75916!2 len:0 [2]
│                            → StrChunk ..0000.76032!4 len:50 { "\n   " }
│                              ← StrChunk ..0000.75948!9 len:32 { "\\mapsto\\," }
│                                ← StrChunk ..0000.75923!23 len:23 { "[\\, \\mathsf{regT}(k) \\," }
│                              → StrChunk ..0000.84695!4 len:14 { "hild" }
│                                ← StrChunk ..0000.75957!10 len:10 { " \\mathit{c" }
│                          → StrChunk ..0000.75807!1 len:50 [1]
│                            ← StrChunk ..0000.75946!1 len:50 [1]
│                              ← StrChunk ..0000.75970!50 len:50 { "}[\\, \\mathit{id} \\,\\mapsto\\, \\ma" … }
│                                ← StrChunk ..0000.76036!6 len:0 [6]
│                              → StrChunk ..0000.75810!4 len:0 [4]
│                                ← StrChunk ..0000.75852!1 len:0 [1]
│                            → StrChunk ..0000.75516!7 len:0 [7]
│                              ← StrChunk ..0000.75634!1 len:0 [1]
│                                ← StrChunk ..0000.75712!5 len:0 [5]
│                              → StrChunk ..0000.75461!1 len:0 [1]
│                                ← StrChunk ..0000.75487!2 len:0 [2]
│                        → StrChunk ..0000.85646!37 len:380 { ",\\, \\mathsf{clearElem}(\\mathit{d" … }
│                          ← StrChunk ..0000.76087!42 len:121 [42]
│                            ← StrChunk ..0000.155054!12 len:57 { "\\vspace{6pt}" }
│                              ← StrChunk ..0000.75282!16 len:16 { "\n\\end{prooftree}" }
│                                ← StrChunk ..0000.75384!1 len:0 [1]
│                              → StrChunk ..0000.76077!10 len:29 { "\n\\AxiomC{$" }
│                                ← StrChunk ..0000.76042!19 len:19 { "\n\n\\begin{prooftree}" }
│                            → StrChunk ..0000.76146!39 len:64 { "= \\texttt{\\string{\\string}}$}\n\\A" … }
│                              ← StrChunk ..0000.76142!4 len:13 [4]
│                                ← StrChunk ..0000.76129!13 len:13 { "\\mathit{val} " }
│                              → StrChunk ..0000.76222!12 len:12 { "\\mathit{ctx}" }
│                                ← StrChunk ..0000.76185!37 len:0 [37]
│                          → StrChunk ..0000.85766!23 len:222 { "\\mathsf{addId}(\\mathsf{" }
│                            ← StrChunk ..0000.76234!1 len:71 [1]
│                              ← StrChunk ..0000.85683!5 len:42 [5]
│                                ← StrChunk ..0000.85693!42 len:42 { " k) \\evalto \\mathit{ctx}',\\, \\ma" … }
│                              → StrChunk ..0000.85735!27 len:29 { "\n\\AxiomC{$\\mathit{ctx}',\\, " }
│                                ← StrChunk ..0000.76235!2 len:2 { "$}" }
│                            → StrChunk ..0000.85816!1 len:128 { ")" }
│                              ← StrChunk ..0000.204313!31 len:52 { ", \\mathsf{assign}(\\mathit{val})" }
│                                ← StrChunk ..0000.85795!21 len:21 { "mapT}(k), \\mathit{id}" }
│                              → StrChunk ..0000.85817!71 len:75 { " \\evalto \\mathit{ctx}''$}\n\\Axiom" … }
│                                ← StrChunk ..0000.204344!4 len:4 { "\n   " }
│                    → StrChunk ..0000.86173!1 len:937 [1]
│                      ← StrChunk ..0000.76430!2 len:907 [2]
│                        ← StrChunk ..0000.76273!37 len:197 { "naryInfC{$\\mathit{ctx},\\, \\maths" … }
│                          ← StrChunk ..0000.76258!6 len:39 [6]
│                            ← StrChunk ..0000.76249!1 len:29 [1]
│                              ← StrChunk ..0000.85789!3 len:12 [3]
│                                ← StrChunk ..0000.85888!2 len:0 [2]
│                                → StrChunk ..0000.76237!12 len:12 { "\n\\LeftLabel{" }
│                              → StrChunk ..0000.85426!9 len:17 { "Empty-Map" }
│                                ← StrChunk ..0000.76250!8 len:8 { "\\textsc{" }
│                            → StrChunk ..0000.76268!3 len:10 { "}\n\\" }
│                              ← StrChunk ..0000.76265!3 len:1 [3]
│                                ← StrChunk ..0000.76264!1 len:1 { "}" }
│                              → StrChunk ..0000.76271!2 len:6 [2]
│                                ← StrChunk ..0000.85917!6 len:6 { "Quater" }
│                          → StrChunk ..0000.85392!16 len:121 [16]
│                            ← StrChunk ..0000.85596!1 len:98 [1]
│                              ← StrChunk ..0000.85409!1 len:88 { "\\" }
│                                ← StrChunk ..0000.76312!87 len:87 { "(\\mathit{id}, \\mathit{deps},\n   " … }
│                              → StrChunk ..0000.85410!7 len:10 [7]
│                                ← StrChunk ..0000.85597!10 len:10 { "mathit{val" }
│                            → StrChunk ..0000.76733!1 len:23 { ")" }
│                              ← StrChunk ..0000.76399!12 len:1 [12]
│                                ← StrChunk ..0000.85408!1 len:1 { "}" }
│                              → StrChunk ..0000.78909!2 len:21 { "it" }
│                                ← StrChunk ..0000.76411!19 len:19 { ") \\evalto\n    \\math" }
│                        → StrChunk ..0000.76061!16 len:710 { "\n\\end{prooftree}" }
│                          ← StrChunk ..0000.76453!10 len:60 { "}(k) \\,\\ma" }
│                            ← StrChunk ..0000.76437!12 len:23 { "[\\, \\mathsf{" }
│                              ← StrChunk ..0000.85525!2 len:7 { "''" }
│                                ← StrChunk ..0000.76432!5 len:5 { "{ctx}" }
│                              → StrChunk ..0000.76449!4 len:4 [4]
│                                ← StrChunk ..0000.85503!4 len:4 { "mapT" }
│                            → StrChunk ..0000.76463!56 len:27 [56]
│                              ← StrChunk ..0000.85507!18 len:25 { "\\mathit{child} \\,]" }
│                                ← StrChunk ..0000.85492!7 len:7 { "psto\\, " }
│                              → StrChunk ..0000.76310!1 len:2 [1]
│                                ← StrChunk ..0000.76519!2 len:2 { "$}" }
│                          → StrChunk ..0000.204348!31 len:634 { ", \\mathsf{assign}(\\mathit{val})" }
│                            ← StrChunk ..0000.85997!17 len:244 { "\\begin{prooftree}" }
│                              ← StrChunk ..0000.85923!2 len:14 { "\n\n" }
│                                ← StrChunk ..0000.155066!12 len:12 { "\\vspace{6pt}" }
│                              → StrChunk ..0000.86175!70 len:213 { "AxiomC{$\\mathit{ctx}',\\, \\mathsf" … }
│                                ← StrChunk ..0000.86030!143 len:143 { "\n\\AxiomC{$\\mathit{val} = \\texttt" … }
│                            → StrChunk ..0000.86246!331 len:359 { " \\evalto \\mathit{ctx}''$}\n\\Axiom" … }
│                              ← StrChunk ..0000.204379!4 len:5 { "\n   " }
│                                ← StrChunk ..0000.86245!1 len:1 { ")" }
│                              → StrChunk ..0000.86577!1 len:23 [1]
│                                ← StrChunk ..0000.86579!23 len:23 { "\\, \\mathit{child} \\,]$}" }
│                      → StrChunk ..0000.70487!2 len:30 [2]
│                        ← StrChunk ..0000.71939!5 len:28 [5]
│                          ← StrChunk ..0000.85960!7 len:28 [7]
│                            ← StrChunk ..0000.85925!8 len:28 [8]
│                              ← StrChunk ..0000.155078!12 len:28 { "\\vspace{6pt}" }
│                                ← StrChunk ..0000.86014!16 len:16 { "\n\\end{prooftree}" }
│                              → StrChunk ..0000.85933!13 len:0 [13]
│                                ← StrChunk ..0000.85968!1 len:0 [1]
│                            → StrChunk ..0000.71949!45 len:0 [45]
│                              ← StrChunk ..0000.71913!26 len:0 [26]
│                                ← StrChunk ..0000.85946!7 len:0 [7]
│                              → StrChunk ..0000.71994!3 len:0 [3]
│                                ← StrChunk ..0000.72000!26 len:0 [26]
│                          → StrChunk ..0000.71297!1 len:0 [1]
│                            ← StrChunk ..0000.71771!3 len:0 [3]
│                              ← StrChunk ..0000.71867!3 len:0 [3]
│                                ← StrChunk ..0000.71898!14 len:0 [14]
│                              → StrChunk ..0000.71518!3 len:0 [3]
│                                ← StrChunk ..0000.71598!1 len:0 [1]
│                            → StrChunk ..0000.70742!5 len:0 [5]
│                              ← StrChunk ..0000.70915!3 len:0 [3]
│                                ← StrChunk ..0000.71145!1 len:0 [1]
│                              → StrChunk ..0000.70650!1 len:0 [1]
│                                ← StrChunk ..0000.70732!5 len:0 [5]
│                        → StrChunk ..0000.29451!1 len:2 [1]
│                          ← StrChunk ..0000.69592!4 len:0 [4]
│                            ← StrChunk ..0000.70360!1 len:0 [1]
│                              ← StrChunk ..0000.70489!4 len:0 [4]
│                                ← StrChunk ..0000.70497!8 len:0 [8]
│                              → StrChunk ..0000.69649!12 len:0 [12]
│                                ← StrChunk ..0000.70173!4 len:0 [4]
│                            → StrChunk ..0000.30333!3 len:0 [3]
│                              ← StrChunk ..0000.69457!5 len:0 [5]
│                                ← StrChunk ..0000.69544!4 len:0 [4]
│                              → StrChunk ..0000.29762!12 len:0 [12]
│                                ← StrChunk ..0000.30297!6 len:0 [6]
│                          → StrChunk ..0000.29224!24 len:2 [24]
│                            ← StrChunk ..0000.29452!12 len:0 [12]
│                              ← StrChunk ..0000.29476!14 len:0 [14]
│                                ← StrChunk ..0000.29568!15 len:0 [15]
│                              → StrChunk ..0000.29361!1 len:0 [1]
│                                ← StrChunk ..0000.29377!1 len:0 [1]
│                            → StrChunk ..0000.30404!1 len:2 { "\n" }
│                              ← StrChunk ..0000.28429!1 len:1 { "\n" }
│                                ← StrChunk ..0000.28415!14 len:0 [14]
│                              → StrChunk ..0000.34063!18 len:0 [18]
│                                ← StrChunk ..0000.30405!15 len:0 [15]
│                → StrChunk ..0000.28636!4 len:991 [4]
│                  ← StrChunk ..0000.30888!2 len:166 [2]
│                    ← StrChunk ..0000.30890!10 len:0 [10]
│                      ← StrChunk ..0000.34081!17 len:0 [17]
│                        ← StrChunk ..0000.34246!47 len:0 [47]
│                          ← StrChunk ..0000.34159!15 len:0 [15]
│                            ← StrChunk ..0000.34112!30 len:0 [30]
│                              ← StrChunk ..0000.34107!5 len:0 [5]
│                                ← StrChunk ..0000.34158!1 len:0 [1]
│                                → StrChunk ..0000.35189!2 len:0 [2]
│                              → StrChunk ..0000.34142!16 len:0 [16]
│                                ← StrChunk ..0000.35192!1 len:0 [1]
│                            → StrChunk ..0000.34206!1 len:0 [1]
│                              ← StrChunk ..0000.34174!25 len:0 [25]
│                                ← StrChunk ..0000.35187!1 len:0 [1]
│                              → StrChunk ..0000.34207!35 len:0 [35]
│                                ← StrChunk ..0000.34199!6 len:0 [6]
│                          → StrChunk ..0000.35183!1 len:0 [1]
│                            ← StrChunk ..0000.34305!8 len:0 [8]
│                              ← StrChunk ..0000.34293!10 len:0 [10]
│                                ← StrChunk ..0000.35185!1 len:0 [1]
│                              → StrChunk ..0000.34334!1 len:0 [1]
│                                ← StrChunk ..0000.34317!15 len:0 [15]
│                            → StrChunk ..0000.34313!2 len:0 [2]
│                              ← StrChunk ..0000.34332!1 len:0 [1]
│                                ← StrChunk ..0000.34335!15 len:0 [15]
│                              → StrChunk ..0000.34242!2 len:0 [2]
│                                ← StrChunk ..0000.34303!1 len:0 [1]
│                        → StrChunk ..0000.30735!15 len:0 [15]
│                          ← StrChunk ..0000.30712!4 len:0 [4]
│                            ← StrChunk ..0000.30834!37 len:0 [37]
│                              ← StrChunk ..0000.30822!10 len:0 [10]
│                                ← StrChunk ..0000.30633!18 len:0 [18]
│                              → StrChunk ..0000.30700!10 len:0 [10]
│                                ← StrChunk ..0000.30832!1 len:0 [1]
│                            → StrChunk ..0000.30719!1 len:0 [1]
│                              ← StrChunk ..0000.35179!1 len:0 [1]
│                                ← StrChunk ..0000.30718!1 len:0 [1]
│                              → StrChunk ..0000.30720!14 len:0 [14]
│                                ← StrChunk ..0000.30734!1 len:0 [1]
│                          → StrChunk ..0000.30710!2 len:0 [2]
│                            ← StrChunk ..0000.30764!1 len:0 [1]
│                              ← StrChunk ..0000.30750!8 len:0 [8]
│                                ← StrChunk ..0000.35181!1 len:0 [1]
│                              → StrChunk ..0000.30716!1 len:0 [1]
│                                ← StrChunk ..0000.30758!5 len:0 [5]
│                            → StrChunk ..0000.33434!31 len:0 [31]
│                              ← StrChunk ..0000.35177!1 len:0 [1]
│                                ← StrChunk ..0000.33418!16 len:0 [16]
│                              → StrChunk ..0000.33465!49 len:0 [49]
│                                ← StrChunk ..0000.34032!2 len:0 [2]
│                      → StrChunk ..0000.33522!15 len:0 [15]
│                        ← StrChunk ..0000.30767!18 len:0 [18]
│                          ← StrChunk ..0000.30900!7 len:0 [7]
│                            ← StrChunk ..0000.31104!31 len:0 [31]
│                              ← StrChunk ..0000.31039!55 len:0 [55]
│                                ← StrChunk ..0000.30914!11 len:0 [11]
│                                → StrChunk ..0000.31096!6 len:0 [6]
│                              → StrChunk ..0000.31094!1 len:0 [1]
│                                ← StrChunk ..0000.31102!2 len:0 [2]
│                            → StrChunk ..0000.33415!3 len:0 [3]
│                              ← StrChunk ..0000.30765!2 len:0 [2]
│                                ← StrChunk ..0000.30670!28 len:0 [28]
│                              → StrChunk ..0000.31138!6 len:0 [6]
│                                ← StrChunk ..0000.32924!2 len:0 [2]
│                          → StrChunk ..0000.30801!20 len:0 [20]
│                            ← StrChunk ..0000.33400!3 len:0 [3]
│                              ← StrChunk ..0000.30785!16 len:0 [16]
│                                ← StrChunk ..0000.35175!1 len:0 [1]
│                              → StrChunk ..0000.33384!3 len:0 [3]
│                                ← StrChunk ..0000.33390!5 len:0 [5]
│                            → StrChunk ..0000.30874!8 len:0 [8]
│                              ← StrChunk ..0000.30821!1 len:0 [1]
│                                ← StrChunk ..0000.30871!3 len:0 [3]
│                              → StrChunk ..0000.35173!1 len:0 [1]
│                                ← StrChunk ..0000.33514!8 len:0 [8]
│                        → StrChunk ..0000.31028!10 len:0 [10]
│                          ← StrChunk ..0000.30943!3 len:0 [3]
│                            ← StrChunk ..0000.32584!53 len:0 [53]
│                              ← StrChunk ..0000.30882!5 len:0 [5]
│                                ← StrChunk ..0000.30926!5 len:0 [5]
│                              → StrChunk ..0000.30931!8 len:0 [8]
│                                ← StrChunk ..0000.30887!1 len:0 [1]
│                            → StrChunk ..0000.31181!5 len:0 [5]
│                              ← StrChunk ..0000.30946!30 len:0 [30]
│                                ← StrChunk ..0000.31170!5 len:0 [5]
│                              → StrChunk ..0000.31010!12 len:0 [12]
│                                ← StrChunk ..0000.30976!16 len:0 [16]
│                          → StrChunk ..0000.31144!20 len:0 [20]
│                            ← StrChunk ..0000.30992!11 len:0 [11]
│                              ← StrChunk ..0000.31008!1 len:0 [1]
│                                ← StrChunk ..0000.31022!3 len:0 [3]
│                              → StrChunk ..0000.31003!2 len:0 [2]
│                                ← StrChunk ..0000.31038!1 len:0 [1]
│                            → StrChunk ..0000.31428!3 len:0 [3]
│                              ← StrChunk ..0000.31434!23 len:0 [23]
│                                ← StrChunk ..0000.31402!26 len:0 [26]
│                              → StrChunk ..0000.30939!2 len:0 [2]
│                                ← StrChunk ..0000.31005!3 len:0 [3]
│                    → StrChunk ..0000.34591!16 len:166 [16]
│                      ← StrChunk ..0000.33696!6 len:0 [6]
│                        ← StrChunk ..0000.34034!2 len:0 [2]
│                          ← StrChunk ..0000.33113!31 len:0 [31]
│                            ← StrChunk ..0000.33014!19 len:0 [19]
│                              ← StrChunk ..0000.30651!6 len:0 [6]
│                                ← StrChunk ..0000.30698!1 len:0 [1]
│                                → StrChunk ..0000.30659!10 len:0 [10]
│                              → StrChunk ..0000.35169!1 len:0 [1]
│                                ← StrChunk ..0000.33049!64 len:0 [64]
│                            → StrChunk ..0000.33601!16 len:0 [16]
│                              ← StrChunk ..0000.33144!15 len:0 [15]
│                                ← StrChunk ..0000.35171!1 len:0 [1]
│                              → StrChunk ..0000.33617!31 len:0 [31]
│                                ← StrChunk ..0000.35167!1 len:0 [1]
│                          → StrChunk ..0000.33599!2 len:0 [2]
│                            ← StrChunk ..0000.33177!1 len:0 [1]
│                              ← StrChunk ..0000.33159!13 len:0 [13]
│                                ← StrChunk ..0000.33648!48 len:0 [48]
│                              → StrChunk ..0000.33178!13 len:0 [13]
│                                ← StrChunk ..0000.33172!4 len:0 [4]
│                            → StrChunk ..0000.33208!15 len:0 [15]
│                              ← StrChunk ..0000.35163!1 len:0 [1]
│                                ← StrChunk ..0000.33191!17 len:0 [17]
│                              → StrChunk ..0000.33223!32 len:0 [32]
│                                ← StrChunk ..0000.33409!4 len:0 [4]
│                        → StrChunk ..0000.35161!1 len:0 [1]
│                          ← StrChunk ..0000.33255!60 len:0 [60]
│                            ← StrChunk ..0000.35165!1 len:0 [1]
│                              ← StrChunk ..0000.33764!1 len:0 [1]
│                                ← StrChunk ..0000.33771!1 len:0 [1]
│                              → StrChunk ..0000.33702!2 len:0 [2]
│                                ← StrChunk ..0000.33765!6 len:0 [6]
│                            → StrChunk ..0000.34417!46 len:0 [46]
│                              ← StrChunk ..0000.34350!19 len:0 [19]
│                                ← StrChunk ..0000.33033!16 len:0 [16]
│                              → StrChunk ..0000.34489!5 len:0 [5]
│                                ← StrChunk ..0000.34465!13 len:0 [13]
│                          → StrChunk ..0000.34524!14 len:0 [14]
│                            ← StrChunk ..0000.34508!16 len:0 [16]
│                              ← StrChunk ..0000.34478!11 len:0 [11]
│                                ← StrChunk ..0000.34494!14 len:0 [14]
│                              → StrChunk ..0000.34385!32 len:0 [32]
│                                ← StrChunk ..0000.34463!1 len:0 [1]
│                            → StrChunk ..0000.34545!38 len:0 [38]
│                              ← StrChunk ..0000.35159!1 len:0 [1]
│                                ← StrChunk ..0000.34540!5 len:0 [5]
│                              → StrChunk ..0000.34583!4 len:0 [4]
│                                ← StrChunk ..0000.34587!4 len:0 [4]
│                      → StrChunk ..0000.29149!2 len:166 [2]
│                        ← StrChunk ..0000.27452!1 len:39 [1]
│                          ← StrChunk ..0000.30669!1 len:0 [1]
│                            ← StrChunk ..0000.34616!42 len:0 [42]
│                              ← StrChunk ..0000.34607!7 len:0 [7]
│                                ← StrChunk ..0000.34614!2 len:0 [2]
│                              → StrChunk ..0000.34369!16 len:0 [16]
│                                ← StrChunk ..0000.34538!2 len:0 [2]
│                            → StrChunk ..0000.28303!1 len:0 [1]
│                              ← StrChunk ..0000.29054!7 len:0 [7]
│                                ← StrChunk ..0000.30657!1 len:0 [1]
│                              → StrChunk ..0000.28304!6 len:0 [6]
│                                ← StrChunk ..0000.28316!9 len:0 [9]
│                          → StrChunk ..0000.28383!1 len:39 [1]
│                            ← StrChunk ..0000.28385!7 len:17 [7]
│                              ← StrChunk ..0000.28342!41 len:17 [41]
│                                ← StrChunk ..0000.27453!17 len:17 { "\\begin{prooftree}" }
│                              → StrChunk ..0000.28392!3 len:0 [3]
│                                ← StrChunk ..0000.29147!2 len:0 [2]
│                            → StrChunk ..0000.27494!9 len:22 { "\\AxiomC{$" }
│                              ← StrChunk ..0000.27490!4 len:1 [4]
│                                ← StrChunk ..0000.27489!1 len:1 { "\n" }
│                              → StrChunk ..0000.27503!31 len:12 [31]
│                                ← StrChunk ..0000.76573!12 len:12 { "\\mathit{ctx}" }
│                        → StrChunk ..0000.27572!3 len:127 { "$}\n" }
│                          ← StrChunk ..0000.28203!15 len:46 [15]
│                            ← StrChunk ..0000.27535!13 len:33 { "\\mathit{prev}" }
│                              ← StrChunk ..0000.76585!14 len:15 { "\\mathsf{next}(" }
│                                ← StrChunk ..0000.27534!1 len:1 { "(" }
│                              → StrChunk ..0000.27548!4 len:5 { ") = " }
│                                ← StrChunk ..0000.76599!1 len:1 { ")" }
│                            → StrChunk ..0000.27555!3 len:13 [3]
│                              ← StrChunk ..0000.29152!13 len:0 [13]
│                                ← StrChunk ..0000.27552!3 len:0 [3]
│                              → StrChunk ..0000.27571!1 len:13 [1]
│                                ← StrChunk ..0000.27558!13 len:13 { "\\mathit{next}" }
│                          → StrChunk ..0000.34745!2 len:78 { "\\," }
│                            ← StrChunk ..0000.34658!26 len:37 [26]
│                              ← StrChunk ..0000.27579!9 len:9 { "\\AxiomC{$" }
│                                ← StrChunk ..0000.27575!4 len:0 [4]
│                              → StrChunk ..0000.34710!1 len:28 { " " }
│                                ← StrChunk ..0000.27588!27 len:27 { "\\mathit{next} < \\mathit{id}" }
│                            → StrChunk ..0000.34715!30 len:39 { " \\mathit{next} = \\mathsf{tail}" }
│                              ← StrChunk ..0000.34747!2 len:6 { "\\," }
│                                ← StrChunk ..0000.34711!4 len:4 { "\\vee" }
│                              → StrChunk ..0000.28635!1 len:3 { "\n" }
│                                ← StrChunk ..0000.27615!2 len:2 { "$}" }
│                  → StrChunk ..0000.27857!1 len:825 { "$" }
│                    ← StrChunk ..0000.27685!14 len:502 { "}(\\mathit{id}," }
│                      ← StrChunk ..0000.27918!6 len:244 [6]
│                        ← StrChunk ..0000.28651!35 len:192 [35]
│                          ← StrChunk ..0000.28649!1 len:169 [1]
│                            ← StrChunk ..0000.76699!2 len:169 [2]
│                              ← StrChunk ..0000.76678!21 len:32 { "\\mathit{ctx},\\, \\math" }
│                                ← StrChunk ..0000.28640!9 len:9 { "\\AxiomC{$" }
│                                → StrChunk ..0000.77065!2 len:2 { "sf" }
│                              → StrChunk ..0000.76735!105 len:137 { "\n    \\mathsf{cursor}(\\langle\\ran" … }
│                                ← StrChunk ..0000.76701!32 len:32 { "{op}(\\mathit{id}, \\mathit{deps}," }
│                            → StrChunk ..0000.29025!1 len:0 [1]
│                              ← StrChunk ..0000.28650!1 len:0 [1]
│                                ← StrChunk ..0000.29165!2 len:0 [2]
│                              → StrChunk ..0000.29026!1 len:0 [1]
│                                ← StrChunk ..0000.35157!1 len:0 [1]
│                          → StrChunk ..0000.27622!11 len:23 { "\\LeftLabel{" }
│                            ← StrChunk ..0000.28687!2 len:3 { "$}" }
│                              ← StrChunk ..0000.28686!1 len:0 [1]
│                                ← StrChunk ..0000.29169!2 len:0 [2]
│                              → StrChunk ..0000.27618!4 len:1 [4]
│                                ← StrChunk ..0000.27617!1 len:1 { "\n" }
│                            → StrChunk ..0000.27845!4 len:9 { "text" }
│                              ← StrChunk ..0000.27633!1 len:2 { "\\" }
│                                ← StrChunk ..0000.27634!1 len:1 { "$" }
│                              → StrChunk ..0000.27639!3 len:3 { "sc{" }
│                                ← StrChunk ..0000.27635!4 len:0 [4]
│                        → StrChunk ..0000.76861!12 len:52 { "\\mathit{ctx}" }
│                          ← StrChunk ..0000.76855!3 len:26 { "Tri" }
│                            ← StrChunk ..0000.27645!6 len:13 { "}_1$}\n" }
│                              ← StrChunk ..0000.76840!3 len:6 { "ert" }
│                                ← StrChunk ..0000.27642!3 len:3 { "Ins" }
│                              → StrChunk ..0000.27655!1 len:1 { "\\" }
│                                ← StrChunk ..0000.27651!4 len:0 [4]
│                            → StrChunk ..0000.28341!1 len:10 { "n" }
│                              ← StrChunk ..0000.28338!3 len:0 [3]
│                                ← StrChunk ..0000.28692!6 len:0 [6]
│                              → StrChunk ..0000.27659!9 len:9 { "aryInfC{$" }
│                                ← StrChunk ..0000.27656!3 len:0 [3]
│                          → StrChunk ..0000.29028!1 len:14 [1]
│                            ← StrChunk ..0000.27669!1 len:3 { "," }
│                              ← StrChunk ..0000.29167!2 len:0 [2]
│                                ← StrChunk ..0000.27668!1 len:0 [1]
│                              → StrChunk ..0000.35155!1 len:2 { "," }
│                                ← StrChunk ..0000.29027!1 len:1 { "\\" }
│                            → StrChunk ..0000.27679!6 len:11 [6]
│                              ← StrChunk ..0000.76880!1 len:10 { "o" }
│                                ← StrChunk ..0000.27670!9 len:9 { " \\mathsf{" }
│                              → StrChunk ..0000.34037!1 len:1 { "p" }
│                                ← StrChunk ..0000.34036!1 len:0 [1]
│                      → StrChunk ..0000.27777!3 len:244 [3]
│                        ← StrChunk ..0000.29171!2 len:170 [2]
│                          ← StrChunk ..0000.27716!9 len:125 { ") \\evalto" }
│                            ← StrChunk ..0000.27713!2 len:99 { ", " }
│                              ← StrChunk ..0000.27699!14 len:68 { " \\mathit{prev}" }
│                                ← StrChunk ..0000.76881!53 len:53 { " \\mathit{deps},\n    \\mathsf{curs" … }
│                                → StrChunk ..0000.76934!1 len:1 { ")" }
│                              → StrChunk ..0000.27715!1 len:29 [1]
│                                ← StrChunk ..0000.76936!29 len:29 { "\\mathsf{insert}(\\mathit{val})" }
│                            → StrChunk ..0000.27732!4 len:17 { "    " }
│                              ← StrChunk ..0000.27728!4 len:1 [4]
│                                ← StrChunk ..0000.27727!1 len:1 { "\n" }
│                              → StrChunk ..0000.27751!1 len:12 [1]
│                                ← StrChunk ..0000.76968!12 len:12 { "\\mathit{ctx}" }
│                          → StrChunk ..0000.27768!1 len:45 { " " }
│                            ← StrChunk ..0000.76980!14 len:32 { "\\mathsf{next}(" }
│                              ← StrChunk ..0000.27752!3 len:4 { "[\\," }
│                                ← StrChunk ..0000.28698!1 len:1 { "'" }
│                              → StrChunk ..0000.76994!1 len:14 { ")" }
│                                ← StrChunk ..0000.27755!13 len:13 { "\\mathit{prev}" }
│                            → StrChunk ..0000.33317!2 len:12 { "\\," }
│                              ← StrChunk ..0000.27769!7 len:9 { "\\mapsto" }
│                                ← StrChunk ..0000.33315!2 len:2 { "\\," }
│                              → StrChunk ..0000.28218!15 len:1 [15]
│                                ← StrChunk ..0000.27776!1 len:1 { " " }
│                        → StrChunk ..0000.27799!11 len:74 { "\\mathit{id}" }
│                          ← StrChunk ..0000.27795!3 len:33 { ",\\;" }
│                            ← StrChunk ..0000.27780!3 len:11 [3]
│                              ← StrChunk ..0000.29174!1 len:0 [1]
│                                ← StrChunk ..0000.29176!13 len:0 [13]
│                              → StrChunk ..0000.27794!1 len:11 [1]
│                                ← StrChunk ..0000.27783!11 len:11 { "\\mathit{id}" }
│                            → StrChunk ..0000.28239!4 len:19 { "    " }
│                              ← StrChunk ..0000.28235!4 len:1 [4]
│                                ← StrChunk ..0000.28234!1 len:1 { "\n" }
│                              → StrChunk ..0000.27798!1 len:14 [1]
│                                ← StrChunk ..0000.77028!14 len:14 { "\\mathsf{next}(" }
│                          → StrChunk ..0000.27818!1 len:30 { " " }
│                            ← StrChunk ..0000.33319!2 len:13 { "\\," }
│                              ← StrChunk ..0000.27810!1 len:2 { " " }
│                                ← StrChunk ..0000.77042!1 len:1 { ")" }
│                              → StrChunk ..0000.33321!2 len:9 { "\\," }
│                                ← StrChunk ..0000.27811!7 len:7 { "\\mapsto" }
│                            → StrChunk ..0000.27823!13 len:16 { "\\mathit{next}" }
│                              ← StrChunk ..0000.27819!4 len:0 [4]
│                                ← StrChunk ..0000.28243!15 len:0 [15]
│                              → StrChunk ..0000.27837!3 len:3 { "\\,]" }
│                                ← StrChunk ..0000.27836!1 len:0 [1]
│                    → StrChunk ..0000.26822!2 len:322 [2]
│                      ← StrChunk ..0000.27417!3 len:119 [3]
│                        ← StrChunk ..0000.27277!1 len:70 { "\n" }
│                          ← StrChunk ..0000.77068!41 len:48 [41]
│                            ← StrChunk ..0000.27473!15 len:29 { "\\end{prooftree}" }
│                              ← StrChunk ..0000.27725!1 len:2 [1]
│                                ← StrChunk ..0000.27840!1 len:1 { "}" }
│                                → StrChunk ..0000.27470!1 len:1 { "\n" }
│                              → StrChunk ..0000.27488!1 len:12 [1]
│                                ← StrChunk ..0000.155090!12 len:12 { "\\vspace{6pt}" }
│                            → StrChunk ..0000.26518!19 len:19 [19]
│                              ← StrChunk ..0000.27471!1 len:1 [1]
│                                ← StrChunk ..0000.77109!1 len:1 { "\n" }
│                              → StrChunk ..0000.27278!17 len:18 { "\\begin{prooftree}" }
│                                ← StrChunk ..0000.26555!1 len:1 { "\n" }
│                          → StrChunk ..0000.27237!4 len:21 [4]
│                            ← StrChunk ..0000.77113!12 len:21 { "\\mathit{ctx}" }
│                              ← StrChunk ..0000.27323!9 len:9 { "\\AxiomC{$" }
│                                ← StrChunk ..0000.27319!4 len:0 [4]
│                              → StrChunk ..0000.26556!6 len:0 [6]
│                                ← StrChunk ..0000.77125!1 len:0 [1]
│                            → StrChunk ..0000.26605!14 len:0 [14]
│                              ← StrChunk ..0000.26579!7 len:0 [7]
│                                ← StrChunk ..0000.26562!5 len:0 [5]
│                              → StrChunk ..0000.26761!17 len:0 [17]
│                                ← StrChunk ..0000.26758!1 len:0 [1]
│                        → StrChunk ..0000.28258!15 len:49 [15]
│                          ← StrChunk ..0000.26781!1 len:34 { "(" }
│                            ← StrChunk ..0000.27010!2 len:0 [2]
│                              ← StrChunk ..0000.26778!1 len:0 [1]
│                                ← StrChunk ..0000.27015!12 len:0 [12]
│                              → StrChunk ..0000.29189!2 len:0 [2]
│                                ← StrChunk ..0000.26779!2 len:0 [2]
│                            → StrChunk ..0000.77141!1 len:33 { ")" }
│                              ← StrChunk ..0000.26782!13 len:27 { "\\mathit{prev}" }
│                                ← StrChunk ..0000.77127!14 len:14 { "\\mathsf{next}(" }
│                              → StrChunk ..0000.77176!1 len:5 { "\\" }
│                                ← StrChunk ..0000.26795!4 len:4 { ") = " }
│                          → StrChunk ..0000.27404!1 len:15 { "$" }
│                            ← StrChunk ..0000.26802!4 len:12 [4]
│                              ← StrChunk ..0000.29192!13 len:0 [13]
│                                ← StrChunk ..0000.26799!3 len:0 [3]
│                              → StrChunk ..0000.26820!1 len:12 [1]
│                                ← StrChunk ..0000.26808!12 len:12 { "mathit{next}" }
│                            → StrChunk ..0000.27242!2 len:2 [2]
│                              ← StrChunk ..0000.26821!1 len:1 [1]
│                                ← StrChunk ..0000.27335!1 len:1 { "}" }
│                              → StrChunk ..0000.27245!4 len:1 [4]
│                                ← StrChunk ..0000.27244!1 len:1 { "\n" }
│                      → StrChunk ..0000.34039!1 len:203 { "p" }
│                        ← StrChunk ..0000.27358!1 len:64 { "$" }
│                          ← StrChunk ..0000.26945!1 len:47 [1]
│                            ← StrChunk ..0000.26824!27 len:38 { "\\mathit{id} < \\mathit{next}" }
│                              ← StrChunk ..0000.27359!1 len:9 { "$" }
│                                ← StrChunk ..0000.27336!8 len:8 { "\\AxiomC{" }
│                              → StrChunk ..0000.27347!1 len:2 { "}" }
│                                ← StrChunk ..0000.27360!1 len:1 { "$" }
│                            → StrChunk ..0000.26947!1 len:9 { "\n" }
│                              ← StrChunk ..0000.26946!1 len:0 [1]
│                                ← StrChunk ..0000.27251!2 len:0 [2]
│                              → StrChunk ..0000.27348!8 len:8 { "\\AxiomC{" }
│                                ← StrChunk ..0000.26948!4 len:0 [4]
│                          → StrChunk ..0000.35153!1 len:16 { "," }
│                            ← StrChunk ..0000.29207!2 len:5 [2]
│                              ← StrChunk ..0000.26952!1 len:3 [1]
│                                ← StrChunk ..0000.77181!3 len:3 { "ctx" }
│                              → StrChunk ..0000.29029!1 len:2 { "\\" }
│                                ← StrChunk ..0000.26953!1 len:1 { "," }
│                            → StrChunk ..0000.77191!1 len:10 { "o" }
│                              ← StrChunk ..0000.26954!9 len:9 { " \\mathsf{" }
│                                ← StrChunk ..0000.29030!1 len:0 [1]
│                              → StrChunk ..0000.34038!1 len:0 [1]
│                                ← StrChunk ..0000.26963!6 len:0 [6]
│                        → StrChunk ..0000.26999!1 len:138 { "v" }
│                          ← StrChunk ..0000.77245!1 len:108 { ")" }
│                            ← StrChunk ..0000.26983!1 len:81 { " " }
│                              ← StrChunk ..0000.77192!19 len:33 { " \\mathit{deps},\n   " }
│                                ← StrChunk ..0000.26969!14 len:14 { "}(\\mathit{id}," }
│                              → StrChunk ..0000.26984!13 len:47 { "\\mathit{next}" }
│                                ← StrChunk ..0000.77211!34 len:34 { "\\mathsf{cursor}(\\langle\\rangle,\\" … }
│                            → StrChunk ..0000.81081!6 len:26 { "insert" }
│                              ← StrChunk ..0000.77246!8 len:10 { "\\mathsf{" }
│                                ← StrChunk ..0000.26997!2 len:2 { ", " }
│                              → StrChunk ..0000.77260!10 len:10 { "}(\\mathit{" }
│                                ← StrChunk ..0000.77254!6 len:0 [6]
│                          → StrChunk ..0000.77277!12 len:29 { "\\mathit{ctx}" }
│                            ← StrChunk ..0000.27031!8 len:14 { " \\evalto" }
│                              ← StrChunk ..0000.27000!1 len:5 { ")" }
│                                ← StrChunk ..0000.77270!4 len:4 { "al})" }
│                              → StrChunk ..0000.27005!1 len:1 { " " }
│                                ← StrChunk ..0000.27001!4 len:0 [4]
│                            → StrChunk ..0000.27007!1 len:3 { "'" }
│                              ← StrChunk ..0000.29205!2 len:0 [2]
│                                ← StrChunk ..0000.27006!1 len:0 [1]
│                              → StrChunk ..0000.27356!1 len:2 { "}" }
│                                ← StrChunk ..0000.27357!1 len:1 { "$" }
│              → StrChunk ..0000.78800!14 len:10643 { "\\mathit{deps}," }
│                ← StrChunk ..0000.77787!13 len:4929 [13]
│                  ← StrChunk ..0000.258498!5 len:2902 { " keys" }
│                    ← StrChunk ..0000.29211!2 len:955 [2]
│                      ← StrChunk ..0000.35151!1 len:207 { "," }
│                        ← StrChunk ..0000.27450!1 len:60 { "}" }
│                          ← StrChunk ..0000.27437!4 len:26 [4]
│                            ← StrChunk ..0000.27436!1 len:17 { "\\" }
│                              ← StrChunk ..0000.27425!11 len:12 { "\\LeftLabel{" }
│                                ← StrChunk ..0000.27421!4 len:0 [4]
│                                → StrChunk ..0000.27736!1 len:1 { "$" }
│                              → StrChunk ..0000.27741!4 len:4 [4]
│                                ← StrChunk ..0000.27853!4 len:4 { "text" }
│                            → StrChunk ..0000.27444!3 len:9 { "Ins" }
│                              ← StrChunk ..0000.27924!6 len:3 [6]
│                                ← StrChunk ..0000.27441!3 len:3 { "sc{" }
│                              → StrChunk ..0000.27447!3 len:3 [3]
│                                ← StrChunk ..0000.77289!3 len:3 { "ert" }
│                          → StrChunk ..0000.27385!1 len:33 { "$" }
│                            ← StrChunk ..0000.26851!1 len:18 { "\n" }
│                              ← StrChunk ..0000.27451!1 len:4 { "}" }
│                                ← StrChunk ..0000.27748!3 len:3 { "_2$" }
│                              → StrChunk ..0000.27367!13 len:13 { "\\TrinaryInfC{" }
│                                ← StrChunk ..0000.27363!4 len:0 [4]
│                            → StrChunk ..0000.29209!2 len:14 [2]
│                              ← StrChunk ..0000.26852!8 len:12 [8]
│                                ← StrChunk ..0000.77301!12 len:12 { "\\mathit{ctx}" }
│                              → StrChunk ..0000.29031!1 len:2 { "\\" }
│                                ← StrChunk ..0000.26860!1 len:1 { "," }
│                        → StrChunk ..0000.26921!13 len:146 { "\\mathit{prev}" }
│                          ← StrChunk ..0000.34040!1 len:79 [1]
│                            ← StrChunk ..0000.26892!8 len:10 { "\\mathsf{" }
│                              ← StrChunk ..0000.26861!1 len:1 { " " }
│                                ← StrChunk ..0000.29032!1 len:0 [1]
│                              → StrChunk ..0000.26900!6 len:1 [6]
│                                ← StrChunk ..0000.77320!1 len:1 { "o" }
│                            → StrChunk ..0000.77321!19 len:69 { " \\mathit{deps},\n   " }
│                              ← StrChunk ..0000.26906!14 len:15 { "}(\\mathit{id}," }
│                                ← StrChunk ..0000.34041!1 len:1 { "p" }
│                              → StrChunk ..0000.77340!34 len:35 { "\\mathsf{cursor}(\\langle\\rangle,\\" … }
│                                ← StrChunk ..0000.26920!1 len:1 { " " }
│                          → StrChunk ..0000.26937!1 len:54 [1]
│                            ← StrChunk ..0000.77375!24 len:33 { "\\mathsf{insert}(\\mathit{" }
│                              ← StrChunk ..0000.26934!2 len:3 { ", " }
│                                ← StrChunk ..0000.77374!1 len:1 { ")" }
│                              → StrChunk ..0000.77399!5 len:6 { "al}))" }
│                                ← StrChunk ..0000.26936!1 len:1 { "v" }
│                            → StrChunk ..0000.26942!1 len:21 { " " }
│                              ← StrChunk ..0000.26938!4 len:8 [4]
│                                ← StrChunk ..0000.27043!8 len:8 { " \\evalto" }
│                              → StrChunk ..0000.26943!1 len:12 [1]
│                                ← StrChunk ..0000.77408!12 len:12 { "\\mathit{ctx}" }
│                      → StrChunk ..0000.97388!1 len:748 [1]
│                        ← StrChunk ..0000.84983!29 len:294 [29]
│                          ← StrChunk ..0000.84962!10 len:117 [10]
│                            ← StrChunk ..0000.27389!15 len:72 { "\\end{prooftree}" }
│                              ← StrChunk ..0000.27386!2 len:4 { "$}" }
│                                ← StrChunk ..0000.26944!1 len:1 { "'" }
│                                → StrChunk ..0000.27008!1 len:1 { "\n" }
│                              → StrChunk ..0000.154785!33 len:53 { "applying insertion and assignmen" … }
│                                ← StrChunk ..0000.84942!20 len:20 { "\n\\caption{Rules for " }
│                            → StrChunk ..0000.154874!7 len:45 { "update " }
│                              ← StrChunk ..0000.154848!4 len:15 { " to " }
│                                ← StrChunk ..0000.84972!11 len:11 { " operations" }
│                              → StrChunk ..0000.154847!1 len:23 { "." }
│                                ← StrChunk ..0000.154852!22 len:22 { "the state of a replica" }
│                          → StrChunk ..0000.258296!2 len:177 { "to" }
│                            ← StrChunk ..0000.258285!5 len:139 { "apply" }
│                              ← StrChunk ..0000.97253!56 len:106 { "\n\nFigure~\\ref{fig:operation-rule" … }
│                                ← StrChunk ..0000.85012!50 len:50 { "}\\label{fig:operation-rules}\n\\en" … }
│                              → StrChunk ..0000.97317!28 len:28 { " an operation $\\mathsf{op}$ " }
│                                ← StrChunk ..0000.97309!8 len:0 [8]
│                            → StrChunk ..0000.97377!4 len:36 [4]
│                              ← StrChunk ..0000.97351!26 len:26 { " a context $\\mathit{ctx}$," }
│                                ← StrChunk ..0000.97345!6 len:0 [6]
│                              → StrChunk ..0000.258303!3 len:10 { "ing" }
│                                ← StrChunk ..0000.97381!7 len:7 { " produc" }
│                        → StrChunk ..0000.97568!9 len:454 { "operation" }
│                          ← StrChunk ..0000.155243!8 len:285 { "subtrees" }
│                            ← StrChunk ..0000.155102!43 len:104 { " The context is initially the re" … }
│                              ← StrChunk ..0000.97401!34 len:36 { "n updated context $\\mathit{ctx}'" … }
│                                ← StrChunk ..0000.97389!2 len:2 { " a" }
│                              → StrChunk ..0000.155152!22 len:25 { "_p$, but may refer to " }
│                                ← StrChunk ..0000.155147!3 len:3 { " $A" }
│                            → StrChunk ..0000.155150!1 len:173 [1]
│                              ← StrChunk ..0000.155185!47 len:47 { " of the state as rules are recur" … }
│                                ← StrChunk ..0000.155174!11 len:0 [11]
│                              → StrChunk ..0000.97435!126 len:126 { " These rules are used by \\textsc" … }
│                                ← StrChunk ..0000.155145!1 len:0 [1]
│                          → StrChunk ..0000.97580!52 len:160 [52]
│                            ← StrChunk ..0000.97561!6 len:39 { "cursor" }
│                              ← StrChunk ..0000.97579!1 len:1 { " " }
│                                ← StrChunk ..0000.97577!2 len:0 [2]
│                              → StrChunk ..0000.97567!1 len:32 { " " }
│                                ← StrChunk ..0000.258308!31 len:31 { "'s vector of keys is non-empty," }
│                            → StrChunk ..0000.97696!39 len:121 { "recursively descends the documen" … }
│                              ← StrChunk ..0000.97650!44 len:44 { "the \\textsc{Descend} rule first " … }
│                                ← StrChunk ..0000.97634!16 len:0 [16]
│                              → StrChunk ..0000.258496!2 len:38 [2]
│                                ← StrChunk ..0000.258458!38 len:38 { "by following the path described " … }
│                    → StrChunk ..0000.97974!1 len:1942 [1]
│                      ← StrChunk ..0000.98580!10 len:1157 { " register," }
│                        ← StrChunk ..0000.204397!1 len:720 { "$" }
│                          ← StrChunk ..0000.97858!6 len:226 { " state" }
│                            ← StrChunk ..0000.97854!3 len:54 [3]
│                              ← StrChunk ..0000.97786!33 len:47 { ". If the tree node already exist" … }
│                                ← StrChunk ..0000.97735!51 len:0 [51]
│                                → StrChunk ..0000.97840!14 len:14 { " in the local " }
│                              → StrChunk ..0000.154536!6 len:7 { "eplica" }
│                                ← StrChunk ..0000.97857!1 len:1 { "r" }
│                            → StrChunk ..0000.97929!41 len:166 { "create an empty map or list resp" … }
│                              ← StrChunk ..0000.97864!63 len:84 { "finds it, otherwise \\textsc{Chil" … }
│                                ← StrChunk ..0000.97819!21 len:21 { ", \\textsc{Child-Get} " }
│                              → StrChunk ..0000.97976!39 len:41 { "The \\textsc{Descend} rule also i" … }
│                                ← StrChunk ..0000.97972!2 len:2 { "\n\n" }
│                          → StrChunk ..0000.258171!17 len:493 { "which is the case" }
│                            ← StrChunk ..0000.204398!7 len:328 { "_{1,2}$" }
│                              ← StrChunk ..0000.98028!4 len:15 { "-ID}" }
│                                ← StrChunk ..0000.98015!11 len:11 { "\\textsc{Add" }
│                              → StrChunk ..0000.98198!146 len:306 { "a mutation made by this operatio" … }
│                                ← StrChunk ..0000.98032!160 len:160 { " at each tree node along the pat" … }
│                            → StrChunk ..0000.98429!19 len:148 { "The \\textsc{Assign}" }
│                              ← StrChunk ..0000.98348!79 len:79 { " when descended to the context o" … }
│                                ← StrChunk ..0000.98344!4 len:0 [4]
│                              → StrChunk ..0000.155251!21 len:50 { " primitive value to a" }
│                                ← StrChunk ..0000.98551!29 len:29 { " rule handles assignment of a" }
│                        → StrChunk ..0000.98541!6 len:427 { "assign" }
│                          ← StrChunk ..0000.98498!7 len:123 { " handle" }
│                            ← StrChunk ..0000.98590!71 len:114 { " handles assignment where the va" … }
│                              ← StrChunk ..0000.98449!19 len:19 { " \\textsc{Empty-Map}" }
│                                ← StrChunk ..0000.98448!1 len:0 [1]
│                              → StrChunk ..0000.98492!6 len:24 [6]
│                                ← StrChunk ..0000.98468!24 len:24 { " and \\textsc{Empty-List}" }
│                            → StrChunk ..0000.98506!18 len:2 [18]
│                              ← StrChunk ..0000.98505!1 len:2 { " " }
│                                ← StrChunk ..0000.98667!1 len:1 { "s" }
│                              → StrChunk ..0000.98534!7 len:0 [7]
│                                ← StrChunk ..0000.98526!2 len:0 [2]
│                          → StrChunk ..0000.98547!3 len:298 [3]
│                            ← StrChunk ..0000.98738!11 len:298 [11]
│                              ← StrChunk ..0000.98755!6 len:46 { "three " }
│                                ← StrChunk ..0000.98698!40 len:40 { "ment of the empty list \\verb|[]|" … }
│                              → StrChunk ..0000.98772!246 len:252 { "for \\textsf{assign} have a simil" … }
│                                ← StrChunk ..0000.98749!6 len:6 { "rules " }
│                            → StrChunk ..0000.98427!1 len:0 [1]
│                              ← StrChunk ..0000.98524!1 len:0 [1]
│                                ← StrChunk ..0000.98528!3 len:0 [3]
│                              → StrChunk ..0000.98026!1 len:0 [1]
│                                ← StrChunk ..0000.98192!3 len:0 [3]
│                      → StrChunk ..0000.154558!6 len:785 { "eplica" }
│                        ← StrChunk ..0000.154547!8 len:662 { "replicas" }
│                          ← StrChunk ..0000.27930!1 len:361 { "\n" }
│                            ← StrChunk ..0000.97694!1 len:0 [1]
│                              ← StrChunk ..0000.97927!1 len:0 [1]
│                                ← StrChunk ..0000.97970!1 len:0 [1]
│                              → StrChunk ..0000.97391!5 len:0 [5]
│                                ← StrChunk ..0000.97632!1 len:0 [1]
│                            → StrChunk ..0000.99139!107 len:360 { "fers to the list element $\\mathi" … }
│                              ← StrChunk ..0000.99020!117 len:118 { "The $\\textsc{Insert}_{1,2}$ rule" … }
│                                ← StrChunk ..0000.99018!1 len:1 { "\n" }
│                              → StrChunk ..0000.99346!51 len:135 { ". $\\textsc{Insert}_2$ handles th" … }
│                                ← StrChunk ..0000.99254!84 len:84 { "$\\textsc{Insert}_1$ performs the" … }
│                          → StrChunk ..0000.99632!1 len:293 [1]
│                            ← StrChunk ..0000.99546!56 len:162 { "uses the ordering relation $<$ o" … }
│                              ← StrChunk ..0000.99402!64 len:64 { " concurrently inserting list ele" … }
│                                ← StrChunk ..0000.99397!5 len:0 [5]
│                              → StrChunk ..0000.99602!29 len:42 { "determine the insertion point" }
│                                ← StrChunk ..0000.99634!13 len:13 { "consistently " }
│                            → StrChunk ..0000.99647!43 len:131 { " We show later that these rules " … }
│                              ← StrChunk ..0000.155272!86 len:87 { " Our approach for handling inser" … }
│                                ← StrChunk ..0000.99631!1 len:1 { "." }
│                              → StrChunk ..0000.99693!1 len:1 { "r" }
│                                ← StrChunk ..0000.99690!3 len:0 [3]
│                        → StrChunk ..0000.99755!5 len:117 { "rior " }
│                          ← StrChunk ..0000.99246!4 len:61 [4]
│                            ← StrChunk ..0000.99498!9 len:34 [9]
│                              ← StrChunk ..0000.99466!30 len:34 [30]
│                                ← StrChunk ..0000.99694!34 len:34 { "s converge towards the same stat" … }
│                              → StrChunk ..0000.99338!4 len:0 [4]
│                                ← StrChunk ..0000.99496!1 len:0 [1]
│                            → StrChunk ..0000.99729!25 len:27 { "\n\\subsubsection{Clearing " }
│                              ← StrChunk ..0000.99019!1 len:1 { "\n" }
│                                ← StrChunk ..0000.99137!1 len:0 [1]
│                              → StrChunk ..0000.99754!1 len:1 [1]
│                                ← StrChunk ..0000.252359!1 len:1 { "P" }
│                          → StrChunk ..0000.27931!18 len:51 { "\n\\begin{prooftree}" }
│                            ← StrChunk ..0000.99761!5 len:23 { "tate}" }
│                              ← StrChunk ..0000.99760!1 len:1 [1]
│                                ← StrChunk ..0000.252361!1 len:1 { "S" }
│                              → StrChunk ..0000.85062!16 len:17 { "\n\\begin{figure*}" }
│                                ← StrChunk ..0000.99728!1 len:1 { "\n" }
│                            → StrChunk ..0000.27970!9 len:10 { "\\AxiomC{$" }
│                              ← StrChunk ..0000.27966!4 len:1 [4]
│                                ← StrChunk ..0000.27965!1 len:1 { "\n" }
│                              → StrChunk ..0000.77525!5 len:0 [5]
│                                ← StrChunk ..0000.77493!30 len:0 [30]
│                  → StrChunk ..0000.86847!2 len:2027 { "\n\n" }
│                    ← StrChunk ..0000.29219!2 len:288 [2]
│                      ← StrChunk ..0000.28718!35 len:146 [35]
│                        ← StrChunk ..0000.77800!1 len:93 [1]
│                          ← StrChunk ..0000.27989!6 len:91 [6]
│                            ← StrChunk ..0000.27980!1 len:11 [1]
│                              ← StrChunk ..0000.27979!1 len:0 [1]
│                                ← StrChunk ..0000.77523!1 len:0 [1]
│                                → StrChunk ..0000.29213!2 len:0 [2]
│                              → StrChunk ..0000.77479!3 len:11 { "ctx" }
│                                ← StrChunk ..0000.27981!8 len:8 { "\\mathit{" }
│                            → StrChunk ..0000.86831!16 len:80 { "\\, \\mathit{pres}" }
│                              ← StrChunk ..0000.86766!63 len:64 { ",\\, \\mathsf{clearElem}(\\mathit{d" … }
│                                ← StrChunk ..0000.27995!1 len:1 { "}" }
│                              → StrChunk ..0000.86764!1 len:0 [1]
│                                ← StrChunk ..0000.86829!1 len:0 [1]
│                          → StrChunk ..0000.28702!15 len:2 [15]
│                            ← StrChunk ..0000.28273!15 len:2 [15]
│                              ← StrChunk ..0000.27996!4 len:0 [4]
│                                ← StrChunk ..0000.77487!3 len:0 [3]
│                              → StrChunk ..0000.28018!2 len:2 { "$}" }
│                                ← StrChunk ..0000.28000!18 len:0 [18]
│                            → StrChunk ..0000.29033!1 len:0 [1]
│                              ← StrChunk ..0000.28717!1 len:0 [1]
│                                ← StrChunk ..0000.29215!2 len:0 [2]
│                              → StrChunk ..0000.29034!1 len:0 [1]
│                                ← StrChunk ..0000.35149!1 len:0 [1]
│                        → StrChunk ..0000.28051!3 len:53 { "Del" }
│                          ← StrChunk ..0000.28036!1 len:20 [1]
│                            ← StrChunk ..0000.28020!1 len:12 { "\n" }
│                              ← StrChunk ..0000.28753!3 len:0 [3]
│                                ← StrChunk ..0000.29217!2 len:0 [2]
│                              → StrChunk ..0000.28025!11 len:11 { "\\LeftLabel{" }
│                                ← StrChunk ..0000.28021!4 len:0 [4]
│                            → StrChunk ..0000.77471!2 len:8 [2]
│                              ← StrChunk ..0000.77467!2 len:8 [2]
│                                ← StrChunk ..0000.28037!8 len:8 { "\\textsc{" }
│                              → StrChunk ..0000.28045!6 len:0 [6]
│                                ← StrChunk ..0000.77469!1 len:0 [1]
│                          → StrChunk ..0000.77786!1 len:30 { "U" }
│                            ← StrChunk ..0000.28058!2 len:7 { "}\n" }
│                              ← StrChunk ..0000.28054!1 len:4 { "}" }
│                                ← StrChunk ..0000.86712!3 len:3 { "ete" }
│                              → StrChunk ..0000.28064!1 len:1 { "\\" }
│                                ← StrChunk ..0000.28060!4 len:0 [4]
│                            → StrChunk ..0000.28066!10 len:22 { "naryInfC{$" }
│                              ← StrChunk ..0000.28065!1 len:0 [1]
│                                ← StrChunk ..0000.28700!2 len:0 [2]
│                              → StrChunk ..0000.28076!1 len:12 [1]
│                                ← StrChunk ..0000.77625!12 len:12 { "\\mathit{ctx}" }
│                      → StrChunk ..0000.77723!12 len:142 { "\\mathit{ctx}" }
│                        ← StrChunk ..0000.86602!2 len:111 [2]
│                          ← StrChunk ..0000.77645!2 len:71 { "op" }
│                            ← StrChunk ..0000.29036!1 len:12 [1]
│                              ← StrChunk ..0000.29035!1 len:3 { "\\" }
│                                ← StrChunk ..0000.28077!1 len:1 { "," }
│                                → StrChunk ..0000.35147!1 len:1 { "," }
│                              → StrChunk ..0000.28084!7 len:9 { "mathsf{" }
│                                ← StrChunk ..0000.28078!2 len:2 { " \\" }
│                            → StrChunk ..0000.28097!8 len:57 { "}(\\mathi" }
│                              ← StrChunk ..0000.34042!2 len:0 [2]
│                                ← StrChunk ..0000.28091!6 len:0 [6]
│                              → StrChunk ..0000.77647!42 len:49 { "\\mathit{deps},\n    \\mathsf{curso" … }
│                                ← StrChunk ..0000.28107!7 len:7 { "t{id}, " }
│                          → StrChunk ..0000.86629!6 len:40 { "delete" }
│                            ← StrChunk ..0000.28114!15 len:23 [15]
│                              ← StrChunk ..0000.86621!1 len:12 { "k" }
│                                ← StrChunk ..0000.77689!11 len:11 { "\\rangle,\\, " }
│                              → StrChunk ..0000.77700!10 len:11 { ", \\mathsf{" }
│                                ← StrChunk ..0000.28129!1 len:1 { ")" }
│                            → StrChunk ..0000.28130!8 len:11 { " \\evalto" }
│                              ← StrChunk ..0000.77717!2 len:2 { "})" }
│                                ← StrChunk ..0000.77710!7 len:0 [7]
│                              → StrChunk ..0000.28140!9 len:1 [9]
│                                ← StrChunk ..0000.86706!1 len:1 { " " }
│                        → StrChunk ..0000.33325!2 len:19 [2]
│                          ← StrChunk ..0000.77735!17 len:1 [17]
│                            ← StrChunk ..0000.29221!2 len:1 [2]
│                              ← StrChunk ..0000.28149!1 len:1 [1]
│                                ← StrChunk ..0000.86700!1 len:1 { "'" }
│                              → StrChunk ..0000.28150!3 len:0 [3]
│                                ← StrChunk ..0000.28756!1 len:0 [1]
│                            → StrChunk ..0000.28168!1 len:0 [1]
│                              ← StrChunk ..0000.77752!1 len:0 [1]
│                                ← StrChunk ..0000.28153!15 len:0 [15]
│                              → StrChunk ..0000.28169!7 len:0 [7]
│                                ← StrChunk ..0000.33323!2 len:0 [2]
│                          → StrChunk ..0000.28201!2 len:18 { "$}" }
│                            ← StrChunk ..0000.77759!4 len:0 [4]
│                              ← StrChunk ..0000.28288!8 len:0 [8]
│                                ← StrChunk ..0000.28176!1 len:0 [1]
│                              → StrChunk ..0000.28177!24 len:0 [24]
│                                ← StrChunk ..0000.28296!7 len:0 [7]
│                            → StrChunk ..0000.28080!2 len:16 [2]
│                              ← StrChunk ..0000.28105!1 len:0 [1]
│                                ← StrChunk ..0000.28138!1 len:0 [1]
│                              → StrChunk ..0000.27949!16 len:16 { "\n\\end{prooftree}" }
│                                ← StrChunk ..0000.28055!1 len:0 [1]
│                    → StrChunk ..0000.87147!1 len:1737 [1]
│                      ← StrChunk ..0000.88169!1 len:482 { "_" }
│                        ← StrChunk ..0000.88132!22 len:229 { "\\evalto \\mathit{pres}_" }
│                          ← StrChunk ..0000.88412!1 len:163 { "1" }
│                            ← StrChunk ..0000.87145!1 len:116 [1]
│                              ← StrChunk ..0000.86849!17 len:18 { "\\begin{prooftree}" }
│                                ← StrChunk ..0000.87144!1 len:0 [1]
│                                → StrChunk ..0000.86882!1 len:1 { "\n" }
│                              → StrChunk ..0000.88114!1 len:98 { "_" }
│                                ← StrChunk ..0000.86883!97 len:97 { "\\AxiomC{$\\mathit{ctx},\\, \\mathsf" … }
│                            → StrChunk ..0000.86980!2 len:46 { "$}" }
│                              ← StrChunk ..0000.88112!1 len:0 [1]
│                                ← StrChunk ..0000.88115!14 len:0 [14]
│                              → StrChunk ..0000.88129!1 len:44 { " " }
│                                ← StrChunk ..0000.88069!43 len:43 { "\n\\AxiomC{$\\mathit{ctx}',\\, \\math" … }
│                          → StrChunk ..0000.87146!1 len:44 [1]
│                            ← StrChunk ..0000.88167!2 len:4 { "$}" }
│                              ← StrChunk ..0000.88154!13 len:1 [13]
│                                ← StrChunk ..0000.88440!1 len:1 { "2" }
│                              → StrChunk ..0000.86982!1 len:1 { "\n" }
│                                ← StrChunk ..0000.88130!1 len:0 [1]
│                            → StrChunk ..0000.88471!1 len:40 [1]
│                              ← StrChunk ..0000.88473!2 len:24 { "_3" }
│                                ← StrChunk ..0000.86983!22 len:22 { "\\AxiomC{$\\mathit{pres}" }
│                              → StrChunk ..0000.87006!16 len:16 { " = \\mathit{pres}" }
│                                ← StrChunk ..0000.87005!1 len:0 [1]
│                        → StrChunk ..0000.88336!4 len:252 { "\n   " }
│                          ← StrChunk ..0000.100919!24 len:159 { " \\setminus \\mathit{deps}" }
│                            ← StrChunk ..0000.87022!10 len:26 { " \\,\\cup\\, " }
│                              ← StrChunk ..0000.88170!14 len:1 [14]
│                                ← StrChunk ..0000.88469!1 len:1 { "1" }
│                              → StrChunk ..0000.88454!1 len:15 { "2" }
│                                ← StrChunk ..0000.88184!14 len:14 { "\\mathit{pres}_" }
│                            → StrChunk ..0000.88211!25 len:109 { "\n\\LeftLabel{\\textsc{Clear" }
│                              ← StrChunk ..0000.87032!2 len:2 { "$}" }
│                                ← StrChunk ..0000.88198!13 len:0 [13]
│                              → StrChunk ..0000.88313!9 len:82 { ") \\evalto" }
│                                ← StrChunk ..0000.88238!73 len:73 { "-Elem}}\n\\TrinaryInfC{$\\mathit{ct" … }
│                          → StrChunk ..0000.88479!2 len:89 { "_3" }
│                            ← StrChunk ..0000.88476!2 len:84 { "_3" }
│                              ← StrChunk ..0000.88340!47 len:61 { " [\\, \\mathsf{pres}(k) \\,\\mapsto\\" … }
│                                ← StrChunk ..0000.88322!14 len:14 { " \\mathit{ctx}'" }
│                              → StrChunk ..0000.88388!21 len:21 { " \\,],\\, \\mathit{pres}" }
│                                ← StrChunk ..0000.88387!1 len:0 [1]
│                            → StrChunk ..0000.88311!1 len:3 [1]
│                              ← StrChunk ..0000.88410!2 len:2 { "$}" }
│                                ← StrChunk ..0000.88409!1 len:0 [1]
│                              → StrChunk ..0000.86866!1 len:1 { "\n" }
│                                ← StrChunk ..0000.88236!1 len:0 [1]
│                      → StrChunk ..0000.89400!2 len:1255 [2]
│                        ← StrChunk ..0000.89206!1 len:908 [1]
│                          ← StrChunk ..0000.88982!90 len:702 { " \\end{matrix}$}\n\\LeftLabel{\\text" … }
│                            ← StrChunk ..0000.88516!119 len:492 { "\n\\AxiomC{$\\begin{matrix}\n    \\ma" … }
│                              ← StrChunk ..0000.88481!19 len:34 { "\n\n\\begin{prooftree}" }
│                                ← StrChunk ..0000.86867!15 len:15 { "\\end{prooftree}" }
│                              → StrChunk ..0000.88798!180 len:339 { "}_2,\\, \\mathit{pres}_2 \\end{matr" … }
│                                ← StrChunk ..0000.88637!159 len:159 { "}_1,\\, \\mathit{pres}_1 \\end{matr" … }
│                            → StrChunk ..0000.89142!37 len:120 { "it{pres}_1 \\,\\cup\\, \\mathit{pres" … }
│                              ← StrChunk ..0000.89129!11 len:58 { "_3,\\, \\math" }
│                                ← StrChunk ..0000.89080!47 len:47 { "Any}(\\mathit{deps}, k) \\evalto\n " … }
│                              → StrChunk ..0000.89208!2 len:25 { "$}" }
│                                ← StrChunk ..0000.89183!23 len:23 { ",\\cup\\, \\mathit{pres}_3" }
│                          → StrChunk ..0000.88796!1 len:206 [1]
│                            ← StrChunk ..0000.89127!1 len:0 [1]
│                              ← StrChunk ..0000.89140!1 len:0 [1]
│                                ← StrChunk ..0000.89179!2 len:0 [2]
│                              → StrChunk ..0000.88978!2 len:0 [2]
│                                ← StrChunk ..0000.89072!4 len:0 [4]
│                            → StrChunk ..0000.89210!19 len:206 { "\n\n\\begin{prooftree}" }
│                              ← StrChunk ..0000.88500!16 len:16 { "\n\\end{prooftree}" }
│                                ← StrChunk ..0000.88635!1 len:0 [1]
│                              → StrChunk ..0000.89404!16 len:171 { "t{ctx},\\, \\{\\}$}" }
│                                ← StrChunk ..0000.89245!155 len:155 { "\n\\AxiomC{$k \\notin \\mathrm{dom}(" … }
│                        → StrChunk ..0000.78603!2 len:347 [2]
│                          ← StrChunk ..0000.78972!1 len:172 [1]
│                            ← StrChunk ..0000.78458!21 len:140 { "{regT}(k) \\in \\mathrm" }
│                              ← StrChunk ..0000.78420!36 len:52 { "\n\n\\begin{prooftree}\n\\AxiomC{$\\ma" … }
│                                ← StrChunk ..0000.89229!16 len:16 { "\n\\end{prooftree}" }
│                              → StrChunk ..0000.78518!46 len:67 { "\n\\AxiomC{$\\mathit{concurrent} = " … }
│                                ← StrChunk ..0000.78481!21 len:21 { "{dom}(\\mathit{ctx})$}" }
│                            → StrChunk ..0000.78575!4 len:32 { "to v" }
│                              ← StrChunk ..0000.78565!6 len:6 { " \\maps" }
│                                ← StrChunk ..0000.78564!1 len:0 [1]
│                              → StrChunk ..0000.78581!22 len:22 { " \\mid\n    (\\mathit{id}" }
│                                ← StrChunk ..0000.78579!2 len:0 [2]
│                          → StrChunk ..0000.78686!71 len:175 { " \\notin \\mathit{deps} \\}$}\n\\Left" … }
│                            ← StrChunk ..0000.78617!36 len:73 { ") \\in \\mathit{ctx}(\\mathsf{regT}" … }
│                              ← StrChunk ..0000.78615!2 len:10 [2]
│                                ← StrChunk ..0000.78605!10 len:10 { " \\mapsto v" }
│                              → StrChunk ..0000.78684!2 len:27 [2]
│                                ← StrChunk ..0000.78657!27 len:27 { "\n    \\,\\wedge\\, \\mathit{id}" }
│                            → StrChunk ..0000.78783!2 len:31 [2]
│                              ← StrChunk ..0000.89422!5 len:29 { "clear" }
│                                ← StrChunk ..0000.78759!24 len:24 { "\\mathit{ctx},\\, \\mathsf{" }
│                              → StrChunk ..0000.78787!13 len:2 [13]
│                                ← StrChunk ..0000.78785!2 len:2 { "}(" }
│                → StrChunk ..0000.80156!119 len:5700 [119]
│                  ← StrChunk ..0000.79129!9 len:2553 { "it{deps}," }
│                    ← StrChunk ..0000.90131!31 len:1615 { "\\wedge\\, k \\notin \\mathit{done}" }
│                      ← StrChunk ..0000.89823!4 len:677 { "\n   " }
│                        ← StrChunk ..0000.78943!1 len:322 [1]
│                          ← StrChunk ..0000.78971!1 len:136 { " " }
│                            ← StrChunk ..0000.78885!10 len:46 { "\n    \\math" }
│                              ← StrChunk ..0000.78814!59 len:26 [59]
│                                ← StrChunk ..0000.89440!26 len:26 { " \\mathsf{regT}(k)) \\evalto" }
│                                → StrChunk ..0000.78875!10 len:0 [10]
│                              → StrChunk ..0000.78915!2 len:10 { "\\," }
│                                ← StrChunk ..0000.78899!8 len:8 { "it{ctx}[" }
│                            → StrChunk ..0000.89535!9 len:89 { ",\\, \\math" }
│                              ← StrChunk ..0000.78945!26 len:52 { "\\, \\mathit{concurrent} \\,]" }
│                                ← StrChunk ..0000.78917!26 len:26 { "\\mathsf{regT}(k) \\,\\mapsto" }
│                              → StrChunk ..0000.89544!3 len:28 [3]
│                                ← StrChunk ..0000.89550!28 len:28 { "rm{dom}(\\mathit{concurrent})" }
│                          → StrChunk ..0000.78502!16 len:186 { "\n\\end{prooftree}" }
│                            ← StrChunk ..0000.78757!2 len:2 { "$}" }
│                              ← StrChunk ..0000.78873!1 len:0 [1]
│                                ← StrChunk ..0000.78895!2 len:0 [2]
│                              → StrChunk ..0000.78571!2 len:0 [2]
│                                ← StrChunk ..0000.78653!2 len:0 [2]
│                            → StrChunk ..0000.89721!22 len:168 { "\n\\AxiomC{$\\mathit{ctx}" }
│                              ← StrChunk ..0000.89623!59 len:78 { "\n\\AxiomC{$\\mathsf{mapT}(k) \\in \\" … }
│                                ← StrChunk ..0000.89588!19 len:19 { "\n\n\\begin{prooftree}" }
│                              → StrChunk ..0000.89767!50 len:68 { ",\\, \\mathsf{clearMap}(\\mathit{de" … }
│                                ← StrChunk ..0000.89747!18 len:18 { "(\\mathsf{mapT}(k))" }
│                        → StrChunk ..0000.89914!132 len:351 { "}(\\mathit{deps}, \\mathsf{mapT}(k" … }
│                          ← StrChunk ..0000.89682!12 len:114 { "\n\\LeftLabel{" }
│                            ← StrChunk ..0000.89857!6 len:36 [6]
│                              ← StrChunk ..0000.89827!30 len:36 { "it{cleared},\\, \\mathit{pres}$}" }
│                                ← StrChunk ..0000.89817!6 len:6 { " \\math" }
│                              → StrChunk ..0000.89743!2 len:0 [2]
│                                ← StrChunk ..0000.89765!1 len:0 [1]
│                            → StrChunk ..0000.89716!3 len:66 { "_1$" }
│                              ← StrChunk ..0000.89694!18 len:19 { "\\textsc{Clear-Map}" }
│                                ← StrChunk ..0000.89715!1 len:1 { "$" }
│                              → StrChunk ..0000.89869!43 len:44 { "\n\\BinaryInfC{$\\mathit{ctx},\\, \\m" … }
│                                ← StrChunk ..0000.89712!1 len:1 { "}" }
│                          → StrChunk ..0000.90608!14 len:105 { "\\begin{matrix}" }
│                            ← StrChunk ..0000.89607!16 len:45 { "\n\\end{prooftree}" }
│                              ← StrChunk ..0000.89713!2 len:0 [2]
│                                ← StrChunk ..0000.89912!1 len:0 [1]
│                              → StrChunk ..0000.90085!10 len:29 { "\n\\AxiomC{$" }
│                                ← StrChunk ..0000.90046!19 len:19 { "\n\n\\begin{prooftree}" }
│                            → StrChunk ..0000.90095!35 len:46 { "k \\in \\mathrm{keys}(\\mathit{ctx}" … }
│                              ← StrChunk ..0000.90622!1 len:5 { " " }
│                                ← StrChunk ..0000.90623!4 len:4 { "\n   " }
│                              → StrChunk ..0000.90130!1 len:6 [1]
│                                ← StrChunk ..0000.90628!6 len:6 { "\\\n    " }
│                      → StrChunk ..0000.90584!4 len:907 { "\\cup" }
│                        ← StrChunk ..0000.90296!21 len:487 { ",\\, \\mathsf{clearMap}" }
│                          ← StrChunk ..0000.90226!39 len:199 { " \\evalto \\mathit{ctx}', \\mathit{" … }
│                            ← StrChunk ..0000.90174!52 len:103 { "\\mathit{ctx},\\, \\mathsf{clearEle" … }
│                              ← StrChunk ..0000.90162!12 len:44 { "$}\n\\AxiomC{$" }
│                                ← StrChunk ..0000.90634!13 len:13 { " \\end{matrix}" }
│                                → StrChunk ..0000.90647!19 len:19 { "\\begin{matrix}\n    " }
│                              → StrChunk ..0000.90666!1 len:7 [1]
│                                ← StrChunk ..0000.90668!7 len:7 { " \\\\\n   " }
│                            → StrChunk ..0000.90688!19 len:57 { "\\begin{matrix}\n    " }
│                              ← StrChunk ..0000.90265!12 len:25 { "$}\n\\AxiomC{$" }
│                                ← StrChunk ..0000.90675!13 len:13 { " \\end{matrix}" }
│                              → StrChunk ..0000.90277!13 len:13 { "\\mathit{ctx}'" }
│                                ← StrChunk ..0000.90707!1 len:0 [1]
│                          → StrChunk ..0000.90521!8 len:267 [8]
│                            ← StrChunk ..0000.90360!46 len:218 { "\n    \\evalto \\mathit{ctx}'',\\, \\" … }
│                              ← StrChunk ..0000.90709!3 len:44 { " \\\\" }
│                                ← StrChunk ..0000.90319!41 len:41 { "(\\mathit{deps}, \\mathit{done} \\c" … }
│                              → StrChunk ..0000.90406!115 len:128 { "$}\n\\LeftLabel{$\\textsc{Clear-Map" … }
│                                ← StrChunk ..0000.90712!13 len:13 { " \\end{matrix}" }
│                            → StrChunk ..0000.90534!5 len:49 { "\\math" }
│                              ← StrChunk ..0000.90539!8 len:13 { "\\evalto " }
│                                ← StrChunk ..0000.90529!5 len:5 { "\n    " }
│                              → StrChunk ..0000.91443!2 len:31 { "\\," }
│                                ← StrChunk ..0000.90555!29 len:29 { "it{ctx}'',\\, \\mathit{pres}_1 " }
│                        → StrChunk ..0000.90926!5 len:416 [5]
│                          ← StrChunk ..0000.90290!3 len:222 [3]
│                            ← StrChunk ..0000.90603!5 len:20 { "}_2$}" }
│                              ← StrChunk ..0000.90588!13 len:15 { " \\mathit{pres" }
│                                ← StrChunk ..0000.91445!2 len:2 { "\\," }
│                              → StrChunk ..0000.90317!1 len:0 [1]
│                                ← StrChunk ..0000.90601!1 len:0 [1]
│                            → StrChunk ..0000.90725!19 len:202 { "\n\n\\begin{prooftree}" }
│                              ← StrChunk ..0000.90071!14 len:16 { "end{prooftree}" }
│                                ← StrChunk ..0000.90065!2 len:2 { "\n\\" }
│                              → StrChunk ..0000.90966!1 len:167 { " " }
│                                ← StrChunk ..0000.90760!166 len:166 { "\n\\AxiomC{$\\mathit{done} = \\mathr" … }
│                          → StrChunk ..0000.78973!132 len:194 { "\n\n\\begin{prooftree}\n\\AxiomC{$\\ma" … }
│                            ← StrChunk ..0000.90952!7 len:46 { " \\{\\}$}" }
│                              ← StrChunk ..0000.90959!2 len:23 { "\\," }
│                                ← StrChunk ..0000.90931!21 len:21 { "\\evalto \\mathit{ctx}," }
│                              → StrChunk ..0000.90067!2 len:16 [2]
│                                ← StrChunk ..0000.90744!16 len:16 { "\n\\end{prooftree}" }
│                            → StrChunk ..0000.79107!2 len:16 { "}(" }
│                              ← StrChunk ..0000.79105!2 len:9 [2]
│                                ← StrChunk ..0000.91086!9 len:9 { "clearList" }
│                              → StrChunk ..0000.79122!5 len:5 { "\\math" }
│                                ← StrChunk ..0000.79109!13 len:0 [13]
│                    → StrChunk ..0000.79691!2 len:929 { "}(" }
│                      ← StrChunk ..0000.91466!2 len:499 { " \\" }
│                        ← StrChunk ..0000.79312!2 len:360 [2]
│                          ← StrChunk ..0000.79240!14 len:142 { "$}\n\\LeftLabel{" }
│                            ← StrChunk ..0000.79212!4 len:61 [4]
│                              ← StrChunk ..0000.79138!5 len:20 { "\n    " }
│                                ← StrChunk ..0000.91108!15 len:15 { " \\mathsf{head})" }
│                                → StrChunk ..0000.79143!67 len:0 [67]
│                              → StrChunk ..0000.91194!17 len:41 { ",\\, \\mathit{pres}" }
│                                ← StrChunk ..0000.79216!24 len:24 { "\\evalto \\mathit{cleared}" }
│                            → StrChunk ..0000.91211!3 len:67 { "_1$" }
│                              ← StrChunk ..0000.79254!19 len:20 { "\\textsc{Clear-List}" }
│                                ← StrChunk ..0000.91214!1 len:1 { "$" }
│                              → StrChunk ..0000.90969!5 len:44 { "clear" }
│                                ← StrChunk ..0000.79273!39 len:39 { "}\n\\BinaryInfC{$\\mathit{ctx},\\, \\" … }
│                          → StrChunk ..0000.79413!71 len:218 { "\n    \\mathit{ctx}[\\, \\mathsf{lis" … }
│                            ← StrChunk ..0000.79329!14 len:43 { "\\mathit{deps}," }
│                              ← StrChunk ..0000.79316!13 len:2 [13]
│                                ← StrChunk ..0000.79314!2 len:2 { "}(" }
│                              → StrChunk ..0000.79343!70 len:27 [70]
│                                ← StrChunk ..0000.90987!27 len:27 { " \\mathsf{listT}(k)) \\evalto" }
│                            → StrChunk ..0000.79522!11 len:104 { "}\n\\AxiomC{$" }
│                              ← StrChunk ..0000.79484!36 len:53 { "$}\n\\end{prooftree}\n\n\\begin{proof" … }
│                                ← StrChunk ..0000.91215!17 len:17 { ",\\, \\mathit{pres}" }
│                              → StrChunk ..0000.79543!21 len:40 { "k \\not= \\mathsf{tail}" }
│                                ← StrChunk ..0000.91447!19 len:19 { "\\begin{matrix}\n    " }
│                        → StrChunk ..0000.79576!46 len:137 { "\\mathit{ctx}(\\mathsf{next}(k)) =" … }
│                          ← StrChunk ..0000.80152!2 len:14 [2]
│                            ← StrChunk ..0000.80142!3 len:9 [3]
│                              ← StrChunk ..0000.91468!5 len:1 [5]
│                                ← StrChunk ..0000.91481!1 len:1 { "," }
│                              → StrChunk ..0000.91483!1 len:8 { "\\" }
│                                ← StrChunk ..0000.80145!7 len:7 { "\\wedge\\" }
│                            → StrChunk ..0000.79566!1 len:5 { "\n" }
│                              ← StrChunk ..0000.79634!31 len:0 [31]
│                                ← StrChunk ..0000.79564!2 len:0 [2]
│                              → StrChunk ..0000.79567!9 len:4 [9]
│                                ← StrChunk ..0000.91515!4 len:4 { "    " }
│                          → StrChunk ..0000.91544!19 len:77 { "\\begin{matrix}\n    " }
│                            ← StrChunk ..0000.91524!12 len:25 { "\\end{matrix}" }
│                              ← StrChunk ..0000.91519!5 len:1 [5]
│                                ← StrChunk ..0000.91543!1 len:1 { " " }
│                              → StrChunk ..0000.79622!12 len:12 { "$}\n\\AxiomC{$" }
│                                ← StrChunk ..0000.91536!1 len:0 [1]
│                            → StrChunk ..0000.91572!4 len:33 { "Elem" }
│                              ← StrChunk ..0000.91565!5 len:29 { "clear" }
│                                ← StrChunk ..0000.79665!24 len:24 { "\\mathit{ctx},\\, \\mathsf{" }
│                              → StrChunk ..0000.79689!2 len:0 [2]
│                                ← StrChunk ..0000.91570!1 len:0 [1]
│                      → StrChunk ..0000.91233!1 len:428 { "2" }
│                        ← StrChunk ..0000.91684!1 len:267 [1]
│                          ← StrChunk ..0000.79987!13 len:76 [13]
│                            ← StrChunk ..0000.91589!6 len:25 { " k) \\\\" }
│                              ← StrChunk ..0000.79706!14 len:14 { "\\mathit{deps}," }
│                                ← StrChunk ..0000.79693!13 len:0 [13]
│                              → StrChunk ..0000.79725!34 len:5 [34]
│                                ← StrChunk ..0000.79720!5 len:5 { "\n    " }
│                            → StrChunk ..0000.79786!21 len:51 { "\\evalto \\mathit{ctx}'" }
│                              ← StrChunk ..0000.79782!4 len:0 [4]
│                                ← StrChunk ..0000.79759!21 len:0 [21]
│                              → StrChunk ..0000.91686!12 len:30 { "\\end{matrix}" }
│                                ← StrChunk ..0000.91666!18 len:18 { ", \\mathit{pres}_1 " }
│                          → StrChunk ..0000.79834!1 len:191 { "$" }
│                            ← StrChunk ..0000.91732!126 len:170 { "mathit{ctx}',\\, \\mathsf{clearLis" … }
│                              ← StrChunk ..0000.91698!30 len:32 { "\n\\AxiomC{$\\begin{matrix}\n    \\" }
│                                ← StrChunk ..0000.79807!2 len:2 { "$}" }
│                              → StrChunk ..0000.79809!12 len:12 { "\n\\LeftLabel{" }
│                                ← StrChunk ..0000.91728!2 len:0 [2]
│                            → StrChunk ..0000.91239!4 len:20 { "List" }
│                              ← StrChunk ..0000.79835!5 len:14 { "lear-" }
│                                ← StrChunk ..0000.79821!9 len:9 { "\\textsc{C" }
│                              → StrChunk ..0000.79845!2 len:2 { "}_" }
│                                ← StrChunk ..0000.79840!5 len:0 [5]
│                        → StrChunk ..0000.79923!28 len:160 [28]
│                          ← StrChunk ..0000.91245!9 len:77 { "clearList" }
│                            ← StrChunk ..0000.80127!3 len:41 { "Tri" }
│                              ← StrChunk ..0000.79848!4 len:4 { "$}\n\\" }
│                                ← StrChunk ..0000.79847!1 len:0 [1]
│                              → StrChunk ..0000.79858!34 len:34 { "naryInfC{$\\mathit{ctx},\\, \\maths" … }
│                                ← StrChunk ..0000.79852!6 len:0 [6]
│                            → StrChunk ..0000.79896!13 len:27 [13]
│                              ← StrChunk ..0000.79894!2 len:2 { "}(" }
│                                ← StrChunk ..0000.79892!2 len:0 [2]
│                              → StrChunk ..0000.91267!11 len:25 { " k) \\evalto" }
│                                ← StrChunk ..0000.79909!14 len:14 { "\\mathit{deps}," }
│                          → StrChunk ..0000.91402!41 len:83 { " \\mathit{pres}_1 \\,\\cup\\, \\mathi" … }
│                            ← StrChunk ..0000.80012!18 len:22 { "\n    \\mathit{ctx}'" }
│                              ← StrChunk ..0000.80000!10 len:0 [10]
│                                ← StrChunk ..0000.79953!33 len:0 [33]
│                              → StrChunk ..0000.91858!2 len:4 { "\\," }
│                                ← StrChunk ..0000.91400!2 len:2 { "'," }
│                            → StrChunk ..0000.80072!31 len:20 [31]
│                              ← StrChunk ..0000.80040!12 len:0 [12]
│                                ← StrChunk ..0000.80030!9 len:0 [9]
│                              → StrChunk ..0000.80154!2 len:20 { "\n\n" }
│                                ← StrChunk ..0000.80103!18 len:18 { "$}\n\\end{prooftree}" }
│                  → StrChunk ..0000.100558!23 len:3147 { " by delegating to \\text" }
│                    ← StrChunk ..0000.92531!5 len:1054 { "delet" }
│                      ← StrChunk ..0000.80308!1 len:223 [1]
│                        ← StrChunk ..0000.80826!2 len:194 [2]
│                          ← StrChunk ..0000.80719!19 len:128 { "\n\\AxiomC{$k = \\math" }
│                            ← StrChunk ..0000.80650!22 len:17 [22]
│                              ← StrChunk ..0000.80310!323 len:0 [323]
│                                ← StrChunk ..0000.80277!31 len:0 [31]
│                                → StrChunk ..0000.80637!11 len:0 [11]
│                              → StrChunk ..0000.80686!17 len:17 { "\\begin{prooftree}" }
│                                ← StrChunk ..0000.80674!12 len:0 [12]
│                            → StrChunk ..0000.80779!5 len:92 [5]
│                              ← StrChunk ..0000.92383!4 len:41 { "List" }
│                                ← StrChunk ..0000.80742!37 len:37 { "sf{tail}$}\n\\LeftLabel{$\\textsc{C" … }
│                              → StrChunk ..0000.92389!9 len:51 { "clearList" }
│                                ← StrChunk ..0000.80784!42 len:42 { "}_3$}\n\\UnaryInfC{$\\mathit{ctx},\\" … }
│                          → StrChunk ..0000.80943!16 len:66 { "\n\\end{prooftree}" }
│                            ← StrChunk ..0000.80843!14 len:50 { "\\mathit{deps}," }
│                              ← StrChunk ..0000.80830!13 len:2 [13]
│                                ← StrChunk ..0000.80828!2 len:2 { "}(" }
│                              → StrChunk ..0000.80857!86 len:34 [86]
│                                ← StrChunk ..0000.92411!34 len:34 { " k) \\evalto \\mathit{ctx},\\, \\{\\}" … }
│                            → StrChunk ..0000.80672!1 len:0 [1]
│                              ← StrChunk ..0000.80703!16 len:0 [16]
│                                ← StrChunk ..0000.80738!2 len:0 [2]
│                              → StrChunk ..0000.80633!2 len:0 [2]
│                                ← StrChunk ..0000.80648!1 len:0 [1]
│                        → StrChunk ..0000.79127!1 len:29 [1]
│                          ← StrChunk ..0000.79951!1 len:0 [1]
│                            ← StrChunk ..0000.80063!1 len:0 [1]
│                              ← StrChunk ..0000.80052!7 len:0 [7]
│                                ← StrChunk ..0000.80275!1 len:0 [1]
│                              → StrChunk ..0000.80010!1 len:0 [1]
│                                ← StrChunk ..0000.80059!2 len:0 [2]
│                            → StrChunk ..0000.79533!5 len:0 [5]
│                              ← StrChunk ..0000.79780!1 len:0 [1]
│                                ← StrChunk ..0000.79830!2 len:0 [2]
│                              → StrChunk ..0000.79210!1 len:0 [1]
│                                ← StrChunk ..0000.79520!1 len:0 [1]
│                          → StrChunk ..0000.26806!1 len:29 [1]
│                            ← StrChunk ..0000.35211!2 len:0 [2]
│                              ← StrChunk ..0000.78456!1 len:0 [1]
│                                ← StrChunk ..0000.78479!1 len:0 [1]
│                              → StrChunk ..0000.26862!15 len:0 [15]
│                                ← StrChunk ..0000.27009!1 len:0 [1]
│                            → StrChunk ..0000.26390!6 len:29 { "\n\\capt" }
│                              ← StrChunk ..0000.26567!6 len:0 [6]
│                                ← StrChunk ..0000.26759!1 len:0 [1]
│                              → StrChunk ..0000.154903!9 len:23 { "applying " }
│                                ← StrChunk ..0000.26398!14 len:14 { "ion{Rules for " }
│                      → StrChunk ..0000.84862!1 len:826 [1]
│                        ← StrChunk ..0000.26412!25 len:85 [25]
│                          ← StrChunk ..0000.154943!1 len:51 { "." }
│                            ← StrChunk ..0000.154930!7 len:47 [7]
│                              ← StrChunk ..0000.154951!10 len:28 { "update the" }
│                                ← StrChunk ..0000.154912!18 len:18 { "ion operations to " }
│                                → StrChunk ..0000.154961!1 len:0 [1]
│                              → StrChunk ..0000.154963!13 len:19 { " of a replica" }
│                                ← StrChunk ..0000.154937!6 len:6 { " state" }
│                            → StrChunk ..0000.92544!6 len:3 [6]
│                              ← StrChunk ..0000.84916!8 len:0 [8]
│                                ← StrChunk ..0000.92536!8 len:0 [8]
│                              → StrChunk ..0000.75038!50 len:3 [50]
│                                ← StrChunk ..0000.84924!3 len:3 { "}\\l" }
│                          → StrChunk ..0000.26437!22 len:34 [22]
│                            ← StrChunk ..0000.84936!5 len:21 { "clear" }
│                              ← StrChunk ..0000.75090!9 len:9 { "abel{fig:" }
│                                ← StrChunk ..0000.75088!2 len:0 [2]
│                              → StrChunk ..0000.75108!7 len:7 { "-rules}" }
│                                ← StrChunk ..0000.75099!9 len:0 [9]
│                            → StrChunk ..0000.84709!8 len:13 [8]
│                              ← StrChunk ..0000.26376!6 len:6 { "\n\\end{" }
│                                ← StrChunk ..0000.26396!1 len:0 [1]
│                              → StrChunk ..0000.85086!1 len:7 { "*" }
│                                ← StrChunk ..0000.26382!6 len:6 { "figure" }
│                        → StrChunk ..0000.100199!25 len:741 { "any concurrent operations" }
│                          ← StrChunk ..0000.99879!35 len:491 { ", while also ensuring that concu" … }
│                            ← StrChunk ..0000.3225!1 len:114 { "\n" }
│                              ← StrChunk ..0000.26389!1 len:1 { "}" }
│                                ← StrChunk ..0000.26388!1 len:0 [1]
│                              → StrChunk ..0000.99766!111 len:112 { "Assignment and deletion operatio" … }
│                                ← StrChunk ..0000.62572!1 len:1 { "\n" }
│                            → StrChunk ..0000.99945!210 len:342 { ". The rules to handle this clear" … }
│                              ← StrChunk ..0000.155358!47 len:76 { ", as illustrated in Figure~\\ref{" … }
│                                ← StrChunk ..0000.99916!29 len:29 { "nt modifications are not lost" }
│                              → StrChunk ..0000.100224!14 len:56 { "the effect of " }
│                                ← StrChunk ..0000.100157!42 len:42 { "cede the current operation, whil" … }
│                          → StrChunk ..0000.100319!1 len:225 [1]
│                            ← StrChunk ..0000.100251!39 len:40 [39]
│                              ← StrChunk ..0000.100399!2 len:15 { "A " }
│                                ← StrChunk ..0000.100238!13 len:13 { " untouched.\n\n" }
│                              → StrChunk ..0000.100309!10 len:25 { " operation" }
│                                ← StrChunk ..0000.100290!15 len:15 { "\\textsf{delete}" }
│                            → StrChunk ..0000.100328!29 len:185 { "can be used to delete either " }
│                              ← StrChunk ..0000.100321!7 len:1 [7]
│                                ← StrChunk ..0000.100320!1 len:1 { " " }
│                              → StrChunk ..0000.100557!1 len:155 [1]
│                                ← StrChunk ..0000.100402!155 len:155 { "an element from an ordered list " … }
│                    → StrChunk ..0000.101232!100 len:2070 { "As defined by the \\textsc{Assign" … }
│                      ← StrChunk ..0000.77856!83 len:554 [83]
│                        ← StrChunk ..0000.100915!4 len:310 { "math" }
│                          ← StrChunk ..0000.100950!1 len:296 { "-" }
│                            ← StrChunk ..0000.100949!1 len:8 { "C" }
│                              ← StrChunk ..0000.100581!2 len:3 [2]
│                                ← StrChunk ..0000.100945!2 len:2 { "sc" }
│                                → StrChunk ..0000.100583!1 len:1 { "{" }
│                              → StrChunk ..0000.100585!4 len:4 { "lear" }
│                                ← StrChunk ..0000.100584!1 len:0 [1]
│                            → StrChunk ..0000.100595!48 len:287 { " \\textsc{Clear-Elem} uses \\texts" … }
│                              ← StrChunk ..0000.100951!9 len:15 { " In turn," }
│                                ← StrChunk ..0000.100589!6 len:6 { "Elem}." }
│                              → StrChunk ..0000.100708!189 len:224 { ", regardless of whether it is of" … }
│                                ← StrChunk ..0000.100671!35 len:35 { "clear out any data with a given " … }
│                          → StrChunk ..0000.99914!1 len:10 [1]
│                            ← StrChunk ..0000.100706!1 len:10 [1]
│                              ← StrChunk ..0000.100901!10 len:10 { "it{deps}$." }
│                                ← StrChunk ..0000.100897!4 len:0 [4]
│                              → StrChunk ..0000.100155!1 len:0 [1]
│                                ← StrChunk ..0000.100643!14 len:0 [14]
│                            → StrChunk ..0000.77976!8 len:0 [8]
│                              ← StrChunk ..0000.77801!39 len:0 [39]
│                                ← StrChunk ..0000.99877!1 len:0 [1]
│                              → StrChunk ..0000.77984!24 len:0 [24]
│                                ← StrChunk ..0000.78088!55 len:0 [55]
│                        → StrChunk ..0000.78008!49 len:244 [49]
│                          ← StrChunk ..0000.78143!42 len:0 [42]
│                            ← StrChunk ..0000.78058!5 len:0 [5]
│                              ← StrChunk ..0000.77939!27 len:0 [27]
│                                ← StrChunk ..0000.78063!1 len:0 [1]
│                              → StrChunk ..0000.77966!1 len:0 [1]
│                                ← StrChunk ..0000.77967!9 len:0 [9]
│                            → StrChunk ..0000.80984!91 len:0 [91]
│                              ← StrChunk ..0000.80975!7 len:0 [7]
│                                ← StrChunk ..0000.78189!11 len:0 [11]
│                              → StrChunk ..0000.78185!2 len:0 [2]
│                                ← StrChunk ..0000.80982!1 len:0 [1]
│                          → StrChunk ..0000.78302!1 len:244 [1]
│                            ← StrChunk ..0000.78207!10 len:0 [10]
│                              ← StrChunk ..0000.78219!10 len:0 [10]
│                                ← StrChunk ..0000.78200!7 len:0 [7]
│                              → StrChunk ..0000.78304!9 len:0 [9]
│                                ← StrChunk ..0000.78230!72 len:0 [72]
│                            → StrChunk ..0000.62573!1 len:244 { "\n" }
│                              ← StrChunk ..0000.77840!16 len:0 [16]
│                                ← StrChunk ..0000.78217!1 len:0 [1]
│                              → StrChunk ..0000.100962!242 len:243 { "The premises of \\textsc{Clear-An" … }
│                                ← StrChunk ..0000.100960!1 len:1 { "\n" }
│                      → StrChunk ..0000.102133!3 len:1416 { "are" }
│                        ← StrChunk ..0000.101411!4 len:757 { "i.e." }
│                          ← StrChunk ..0000.101555!4 len:101 { "math" }
│                            ← StrChunk ..0000.101332!22 len:86 { "updates a register by " }
│                              ← StrChunk ..0000.101204!19 len:20 { "\\textsc{Clear-Reg} " }
│                                ← StrChunk ..0000.101231!1 len:1 { " " }
│                              → StrChunk ..0000.101357!39 len:44 { "ing all operation IDs that appea" … }
│                                ← StrChunk ..0000.101223!5 len:5 { "remov" }
│                            → StrChunk ..0000.101409!1 len:11 [1]
│                              ← StrChunk ..0000.101400!9 len:9 { "it{deps}$" }
│                                ← StrChunk ..0000.101396!4 len:0 [4]
│                              → StrChunk ..0000.101504!1 len:2 { "(" }
│                                ← StrChunk ..0000.101410!1 len:1 { " " }
│                          → StrChunk ..0000.101505!1 len:652 { ")" }
│                            ← StrChunk ..0000.101422!4 len:47 [4]
│                              ← StrChunk ..0000.101415!7 len:8 { " which " }
│                                ← StrChunk ..0000.258505!1 len:1 { "," }
│                              → StrChunk ..0000.101440!29 len:39 { "recede the clearing operation" }
│                                ← StrChunk ..0000.101426!10 len:10 { "causally p" }
│                            → StrChunk ..0000.101538!13 len:604 { "mathit{deps}$" }
│                              ← StrChunk ..0000.101506!24 len:58 { "that do not appear in $\\" }
│                                ← StrChunk ..0000.101469!34 len:34 { ", but retaining all operation ID" … }
│                              → StrChunk ..0000.101752!342 len:533 { "\\textsf{clearElem}, and presence" … }
│                                ← StrChunk ..0000.101559!191 len:191 { " (from assignment operations tha" … }
│                        → StrChunk ..0000.168064!17 len:656 { "[valid execution]" }
│                          ← StrChunk ..0000.155506!126 len:377 { "As outlined in Section~\\ref{sec:" … }
│                            ← StrChunk ..0000.102127!2 len:62 { "d." }
│                              ← StrChunk ..0000.102098!9 len:9 { " preserve" }
│                                ← StrChunk ..0000.102094!4 len:0 [4]
│                              → StrChunk ..0000.155421!50 len:51 { "\n\\subsection{Convergence}\\label{" … }
│                                ← StrChunk ..0000.142235!1 len:1 { "\n" }
│                            → StrChunk ..0000.155671!88 len:189 { "We now formalize this notion, an" … }
│                              ← StrChunk ..0000.155632!2 len:33 { ". " }
│                                ← StrChunk ..0000.155640!31 len:31 { " -- a key requirement of a CRDT" }
│                              → StrChunk ..0000.155963!20 len:68 { "\n\n\\begin{definition}" }
│                                ← StrChunk ..0000.155761!48 len:48 { "~\\ref{fig:clear-rules} satisfy t" … }
│                          → StrChunk ..0000.156126!4 len:262 { ", ea" }
│                            ← StrChunk ..0000.156035!69 len:123 { "set of operations generated by a" … }
│                              ← StrChunk ..0000.156000!31 len:53 { "\nA \\emph{valid execution} is a " }
│                                ← StrChunk ..0000.172425!22 len:22 { "\\label{def:valid-exec}" }
│                              → StrChunk ..0000.156104!22 len:1 [22]
│                                ← StrChunk ..0000.225420!1 len:1 { "$" }
│                            → StrChunk ..0000.156247!22 len:135 { " without getting stuck" }
│                              ← StrChunk ..0000.156221!25 len:112 { "} \\mathit{cmd}_n \\rangle$" }
│                                ← StrChunk ..0000.156132!87 len:87 { "ch reducing a sequence of comman" … }
│                              → StrChunk ..0000.156219!1 len:1 [1]
│                                ← StrChunk ..0000.156246!1 len:1 { "." }
│          → StrChunk ..0000.169099!4 len:26901 [4]
│            ← StrChunk ..0000.164383!8 len:19910 [8]
│              ← StrChunk ..0000.229574!2 len:10707 [2]
│                ← StrChunk ..0000.252363!1 len:5982 { "F" }
│                  ← StrChunk ..0000.158003!6 len:3147 { "histor" }
│                    ← StrChunk ..0000.157538!1 len:1512 { "W" }
│                      ← StrChunk ..0000.258000!1 len:790 { "\\" }
│                        ← StrChunk ..0000.156431!28 len:204 { "satisfied. For example, the " }
│                          ← StrChunk ..0000.158403!2 len:104 { "ll" }
│                            ← StrChunk ..0000.156311!26 len:88 { "A reduction gets stuck if " }
│                              ← StrChunk ..0000.155983!17 len:19 { "\n\\end{definition}" }
│                                ← StrChunk ..0000.156031!2 len:0 [2]
│                                → StrChunk ..0000.156269!2 len:2 { "\n\n" }
│                              → StrChunk ..0000.156379!1 len:43 { "a" }
│                                ← StrChunk ..0000.158361!42 len:42 { "there is no application of rules" … }
│                            → StrChunk ..0000.156388!1 len:14 { " " }
│                              ← StrChunk ..0000.158405!1 len:9 { "s" }
│                                ← StrChunk ..0000.156380!8 len:8 { " premise" }
│                              → StrChunk ..0000.156389!42 len:4 [42]
│                                ← StrChunk ..0000.158448!4 len:4 { "are " }
│                          → StrChunk ..0000.156472!3 len:72 { "}_{" }
│                            ← StrChunk ..0000.156467!1 len:12 { "{" }
│                              ← StrChunk ..0000.156459!7 len:8 { "\\textsc" }
│                                ← StrChunk ..0000.156466!1 len:1 { "$" }
│                              → StrChunk ..0000.156468!4 len:3 [4]
│                                ← StrChunk ..0000.257980!3 len:3 { "Idx" }
│                            → StrChunk ..0000.258021!2 len:57 { ",4" }
│                              ← StrChunk ..0000.156477!1 len:1 { "3" }
│                                ← StrChunk ..0000.156475!2 len:0 [2]
│                              → StrChunk ..0000.257990!1 len:54 { "$" }
│                                ← StrChunk ..0000.156478!53 len:53 { "}$ rules in Figure~\\ref{fig:expr" … }
│                        → StrChunk ..0000.258030!8 len:585 [8]
│                          ← StrChunk ..0000.257987!3 len:78 { "idx" }
│                            ← StrChunk ..0000.258001!4 len:7 [4]
│                              ← StrChunk ..0000.258009!3 len:4 [3]
│                                ← StrChunk ..0000.258015!4 len:4 { "math" }
│                              → StrChunk ..0000.156536!3 len:3 { "sf{" }
│                                ← StrChunk ..0000.156531!5 len:0 [5]
│                            → StrChunk ..0000.257991!4 len:68 { "(n)$" }
│                              ← StrChunk ..0000.156543!1 len:1 { "}" }
│                                ← StrChunk ..0000.156539!4 len:0 [4]
│                              → StrChunk ..0000.258113!23 len:63 { ", which would happen if" }
│                                ← StrChunk ..0000.156544!40 len:40 { " tries to iterate past the end o" … }
│                          → StrChunk ..0000.156727!1 len:507 [1]
│                            ← StrChunk ..0000.156584!1 len:124 [1]
│                              ← StrChunk ..0000.156724!3 len:70 { "; i" }
│                                ← StrChunk ..0000.258038!67 len:67 { " $n$ is greater than the number " … }
│                              → StrChunk ..0000.156666!54 len:54 { "n a real implementation this wou" … }
│                                ← StrChunk ..0000.156663!3 len:0 [3]
│                            → StrChunk ..0000.156729!68 len:383 { "ure that operations only refer t" … }
│                              ← StrChunk ..0000.156608!55 len:72 { "valid executions to those that d" … }
│                                ← StrChunk ..0000.156585!17 len:17 { " By constraining " }
│                              → StrChunk ..0000.157340!134 len:243 { "invokes the \\textsf{yield} comma" … }
│                                ← StrChunk ..0000.157219!109 len:109 { "\n\nNote that it is valid for an e" … }
│                      → StrChunk ..0000.157020!2 len:721 { "\n\n" }
│                        ← StrChunk ..0000.168055!9 len:322 { "[history]" }
│                          ← StrChunk ..0000.157594!11 len:98 { "gets stuck." }
│                            ← StrChunk ..0000.157497!9 len:67 [9]
│                              ← StrChunk ..0000.157495!2 len:48 { "e " }
│                                ← StrChunk ..0000.157474!7 len:0 [7]
│                                → StrChunk ..0000.157548!46 len:46 { "need only a replica's local stat" … }
│                              → StrChunk ..0000.157528!3 len:19 { "on " }
│                                ← StrChunk ..0000.157506!16 len:16 { " whether reducti" }
│                            → StrChunk ..0000.157328!6 len:20 [6]
│                              ← StrChunk ..0000.157481!7 len:0 [7]
│                                ← StrChunk ..0000.157522!3 len:0 [3]
│                              → StrChunk ..0000.156797!20 len:20 { "\n\n\\begin{definition}" }
│                                ← StrChunk ..0000.157217!1 len:0 [1]
│                          → StrChunk ..0000.156858!14 len:215 { " sequence of o" }
│                            ← StrChunk ..0000.156852!3 len:41 { "is " }
│                              ← StrChunk ..0000.156817!18 len:37 { "\nA \\emph{history} " }
│                                ← StrChunk ..0000.172406!19 len:19 { "\\label{def:history}" }
│                              → StrChunk ..0000.156855!3 len:1 [3]
│                                ← StrChunk ..0000.156875!1 len:1 { "a" }
│                            → StrChunk ..0000.156945!75 len:160 { " by application of the rules \\te" … }
│                              ← StrChunk ..0000.156944!1 len:67 [1]
│                                ← StrChunk ..0000.156876!67 len:67 { "perations in the order it was ap" … }
│                              → StrChunk ..0000.156835!17 len:18 { "\n\\end{definition}" }
│                                ← StrChunk ..0000.156943!1 len:1 { "." }
│                        → StrChunk ..0000.157200!14 len:397 { "any concurrent" }
│                          ← StrChunk ..0000.157024!20 len:257 { "Even if two replicas" }
│                            ← StrChunk ..0000.160252!19 len:117 { " at a given replica" }
│                              ← StrChunk ..0000.158048!34 len:69 { "ally apply one operation at a ti" … }
│                                ← StrChunk ..0000.158011!35 len:35 { "Since the evaluation rules seque" … }
│                              → StrChunk ..0000.158046!1 len:29 [1]
│                                ← StrChunk ..0000.158082!29 len:29 { ", the order is well-defined. " }
│                            → StrChunk ..0000.157091!6 len:120 { ", i.e." }
│                              ← StrChunk ..0000.157044!35 len:47 { " applied the same set of operati" … }
│                                ← StrChunk ..0000.157079!12 len:12 { " $p$ and $q$" }
│                              → StrChunk ..0000.157097!64 len:67 { " $A_p(\\mathsf{ops}) = A_q(\\maths" … }
│                                ← StrChunk ..0000.157214!3 len:3 { " if" }
│                          → StrChunk ..0000.157776!4 len:126 [4]
│                            ← StrChunk ..0000.157771!1 len:34 { " " }
│                              ← StrChunk ..0000.157164!33 len:33 { " operations in a different order" … }
│                                ← StrChunk ..0000.157161!3 len:0 [3]
│                              → StrChunk ..0000.157784!93 len:0 [93]
│                                ← StrChunk ..0000.157772!4 len:0 [4]
│                            → StrChunk ..0000.157712!59 len:92 { "deps} \\subseteq A_p(\\mathsf{ops}" … }
│                              ← StrChunk ..0000.157677!31 len:31 { "Due to the premise $\\mathit{op." }
│                                ← StrChunk ..0000.157676!1 len:0 [1]
│                              → StrChunk ..0000.157999!4 len:2 [4]
│                                ← StrChunk ..0000.157948!2 len:2 { ", " }
│                    → StrChunk ..0000.160073!57 len:1629 { "he definition of document state " … }
│                      ← StrChunk ..0000.160250!1 len:576 { ")" }
│                        ← StrChunk ..0000.158214!9 len:370 { " operatio" }
│                          ← StrChunk ..0000.157962!26 len:40 { " consistent with causality" }
│                            ← StrChunk ..0000.157959!1 len:7 { " " }
│                              ← StrChunk ..0000.158009!1 len:3 [1]
│                                ← StrChunk ..0000.160277!3 len:3 { "ies" }
│                                → StrChunk ..0000.157950!9 len:0 [9]
│                              → StrChunk ..0000.157960!2 len:3 [2]
│                                ← StrChunk ..0000.160273!3 len:3 { "are" }
│                            → StrChunk ..0000.157989!1 len:7 [1]
│                              ← StrChunk ..0000.157988!1 len:2 { " " }
│                                ← StrChunk ..0000.158453!1 len:1 { ":" }
│                              → StrChunk ..0000.158209!5 len:5 [5]
│                                ← StrChunk ..0000.158263!5 len:5 { "if an" }
│                          → StrChunk ..0000.172385!21 len:321 { "\\label{def:doc-state}" }
│                            ← StrChunk ..0000.158360!1 len:128 { "." }
│                              ← StrChunk ..0000.158359!1 len:91 [1]
│                                ← StrChunk ..0000.158268!91 len:91 { "n has causal dependencies, it ap" … }
│                              → StrChunk ..0000.168039!16 len:36 { "[document state]" }
│                                ← StrChunk ..0000.159480!20 len:20 { "\n\n\\begin{definition}" }
│                            → StrChunk ..0000.159612!43 len:172 { ": that is, $A_p(\\mathsf{mapT}(\\m" … }
│                              ← StrChunk ..0000.159525!85 len:91 { "emph{document state} of a replic" … }
│                                ← StrChunk ..0000.159517!6 len:6 { "\nThe \\" }
│                              → StrChunk ..0000.159655!37 len:38 { "$ or $A_p(\\mathsf{listT}(\\mathsf" … }
│                                ← StrChunk ..0000.160249!1 len:1 { ")" }
│                        → StrChunk ..0000.160015!9 len:205 { " contains" }
│                          ← StrChunk ..0000.159610!1 len:87 [1]
│                            ← StrChunk ..0000.159729!6 len:63 { ")$, wh" }
│                              ← StrChunk ..0000.160251!1 len:38 { ")" }
│                                ← StrChunk ..0000.159692!37 len:37 { ")$ or $A_p(\\mathsf{regT}(\\mathsf" … }
│                              → StrChunk ..0000.159735!1 len:19 [1]
│                                ← StrChunk ..0000.159737!19 len:19 { "ichever is defined." }
│                            → StrChunk ..0000.159756!2 len:24 { "\n\n" }
│                              ← StrChunk ..0000.159500!17 len:17 { "\n\\end{definition}" }
│                                ← StrChunk ..0000.159523!1 len:0 [1]
│                              → StrChunk ..0000.159978!5 len:5 { "$A_p$" }
│                                ← StrChunk ..0000.159983!32 len:0 [32]
│                          → StrChunk ..0000.159845!46 len:109 { " are local to one replica, and n" … }
│                            ← StrChunk ..0000.159822!13 len:43 { "textsf{let}, " }
│                              ← StrChunk ..0000.159789!25 len:25 { " variables defined with \\" }
│                                ← StrChunk ..0000.159758!31 len:0 [31]
│                              → StrChunk ..0000.159835!10 len:5 [10]
│                                ← StrChunk ..0000.160034!5 len:5 { "which" }
│                            → StrChunk ..0000.159897!19 len:20 [19]
│                              ← StrChunk ..0000.159891!6 len:17 { " state" }
│                                ← StrChunk ..0000.159917!11 len:11 { " replicated" }
│                              → StrChunk ..0000.160039!2 len:3 { " T" }
│                                ← StrChunk ..0000.159916!1 len:1 { "." }
│                      → StrChunk ..0000.158891!39 len:996 { " with a liveness property, namel" … }
│                        ← StrChunk ..0000.158586!1 len:440 [1]
│                          ← StrChunk ..0000.158466!5 len:189 [5]
│                            ← StrChunk ..0000.160152!2 len:24 [2]
│                              ← StrChunk ..0000.158455!9 len:9 { "\n\n\\begin{" }
│                                ← StrChunk ..0000.159814!4 len:0 [4]
│                                → StrChunk ..0000.158464!2 len:0 [2]
│                              → StrChunk ..0000.160206!4 len:15 { "-thm" }
│                                ← StrChunk ..0000.160154!11 len:11 { "convergence" }
│                            → StrChunk ..0000.158472!1 len:165 { "}" }
│                              ← StrChunk ..0000.158471!1 len:0 [1]
│                                ← StrChunk ..0000.160143!2 len:0 [2]
│                              → StrChunk ..0000.158588!66 len:164 { "A_q(\\mathsf{ops})$, then $p$ and" … }
│                                ← StrChunk ..0000.158488!98 len:98 { "\nFor any two replicas $p$ and $q" … }
│                          → StrChunk ..0000.160132!11 len:251 [11]
│                            ← StrChunk ..0000.160181!2 len:21 [2]
│                              ← StrChunk ..0000.158479!2 len:6 [2]
│                                ← StrChunk ..0000.158473!6 len:6 { "\n\\end{" }
│                              → StrChunk ..0000.158481!5 len:15 [5]
│                                ← StrChunk ..0000.160183!15 len:15 { "convergence-thm" }
│                            → StrChunk ..0000.158654!216 len:230 { "\n\nThis theorem is proved in the " … }
│                              ← StrChunk ..0000.158487!1 len:1 { "}" }
│                                ← StrChunk ..0000.158486!1 len:0 [1]
│                              → StrChunk ..0000.158870!21 len:13 [21]
│                                ← StrChunk ..0000.158951!13 len:13 { "n combination" }
│                        → StrChunk ..0000.157605!71 len:517 [71]
│                          ← StrChunk ..0000.159472!8 len:490 { " usually" }
│                            ← StrChunk ..0000.159257!114 len:400 { "\\textsf{yield} being chosen fair" … }
│                              ← StrChunk ..0000.159182!69 len:283 { "textsf{yield} sufficiently often" … }
│                                ← StrChunk ..0000.158964!214 len:214 { "every replica eventually process" … }
│                              → StrChunk ..0000.159371!3 len:3 { "can" }
│                                ← StrChunk ..0000.159456!8 len:0 [8]
│                            → StrChunk ..0000.159178!2 len:82 [2]
│                              ← StrChunk ..0000.159251!3 len:82 [3]
│                                ← StrChunk ..0000.159374!82 len:82 { " be provided in practice, as net" … }
│                              → StrChunk ..0000.157708!2 len:0 [2]
│                                ← StrChunk ..0000.158223!9 len:0 [9]
│                          → StrChunk ..0000.156271!20 len:27 [20]
│                            ← StrChunk ..0000.156337!4 len:0 [4]
│                              ← StrChunk ..0000.156602!3 len:0 [3]
│                                ← StrChunk ..0000.157022!1 len:0 [1]
│                              → StrChunk ..0000.156341!3 len:0 [3]
│                                ← StrChunk ..0000.156347!14 len:0 [14]
│                            → StrChunk ..0000.142236!21 len:27 { "\n\n\\section{Conclusion" }
│                              ← StrChunk ..0000.155634!3 len:0 [3]
│                                ← StrChunk ..0000.155759!1 len:0 [1]
│                              → StrChunk ..0000.158232!5 len:6 { " and " }
│                                ← StrChunk ..0000.162176!1 len:1 { "s" }
│                  → StrChunk ..0000.225215!5 len:2834 [5]
│                    ← StrChunk ..0000.224924!37 len:1326 [37]
│                      ← StrChunk ..0000.160587!2 len:785 { "on" }
│                        ← StrChunk ..0000.162608!11 len:295 { "waiting for" }
│                          ← StrChunk ..0000.238397!11 len:264 [11]
│                            ← StrChunk ..0000.158245!1 len:13 [1]
│                              ← StrChunk ..0000.158238!7 len:8 { "urther " }
│                                ← StrChunk ..0000.158237!1 len:0 [1]
│                                → StrChunk ..0000.252365!1 len:1 { "W" }
│                              → StrChunk ..0000.142257!2 len:5 { "}\n" }
│                                ← StrChunk ..0000.158246!3 len:3 { "ork" }
│                            → StrChunk ..0000.160347!143 len:251 { "CRDTs for ordered lists, maps an" … }
│                              ← StrChunk ..0000.160300!45 len:46 { "In this paper we demonstrated ho" … }
│                                ← StrChunk ..0000.142259!1 len:1 { "\n" }
│                              → StrChunk ..0000.160589!1 len:62 { " " }
│                                ← StrChunk ..0000.160492!61 len:61 { "allows replicas to make arbitrar" … }
│                          → StrChunk ..0000.160604!3 len:20 [3]
│                            ← StrChunk ..0000.160593!1 len:0 [1]
│                              ← StrChunk ..0000.160611!2 len:0 [2]
│                                ← StrChunk ..0000.160590!3 len:0 [3]
│                              → StrChunk ..0000.160607!1 len:0 [1]
│                                ← StrChunk ..0000.160608!1 len:0 [1]
│                            → StrChunk ..0000.160573!3 len:20 [3]
│                              ← StrChunk ..0000.160553!1 len:0 [1]
│                                ← StrChunk ..0000.160594!5 len:0 [5]
│                              → StrChunk ..0000.160554!11 len:20 { "communicati" }
│                                ← StrChunk ..0000.160576!9 len:9 { " network " }
│                        → StrChunk ..0000.160892!125 len:488 { "flict resolution logic.\n\nThis wo" … }
│                          ← StrChunk ..0000.160709!18 len:227 { " to other replicas" }
│                            ← StrChunk ..0000.160645!11 len:40 [11]
│                              ← StrChunk ..0000.160705!4 len:30 { "send" }
│                                ← StrChunk ..0000.160619!26 len:26 { ". Replicas asynchronously " }
│                              → StrChunk ..0000.160685!9 len:10 { "mutations" }
│                                ← StrChunk ..0000.160656!1 len:1 { " " }
│                            → StrChunk ..0000.160727!132 len:169 { " of operations. Concurrent opera" … }
│                              ← StrChunk ..0000.160668!12 len:12 { " in the form" }
│                                ← StrChunk ..0000.160663!5 len:0 [5]
│                              → StrChunk ..0000.160863!25 len:25 { " application-specific con" }
│                                ← StrChunk ..0000.160859!4 len:0 [4]
│                          → StrChunk ..0000.161167!102 len:136 [102]
│                            ← StrChunk ..0000.161017!99 len:136 [99]
│                              ← StrChunk ..0000.258506!2 len:136 { "\n\n" }
│                                ← StrChunk ..0000.258508!134 len:134 { "are also working on a practical " … }
│                              → StrChunk ..0000.161116!21 len:0 [21]
│                                ← StrChunk ..0000.161153!14 len:0 [14]
│                            → StrChunk ..0000.161517!1 len:0 [1]
│                              ← StrChunk ..0000.161269!38 len:0 [38]
│                                ← StrChunk ..0000.161501!16 len:0 [16]
│                              → StrChunk ..0000.224862!60 len:0 [60]
│                                ← StrChunk ..0000.224794!8 len:0 [8]
│                      → StrChunk ..0000.180701!55 len:541 { " understand the expectations of " … }
│                        ← StrChunk ..0000.161836!33 len:321 { "concurrent modifications appears" … }
│                          ← StrChunk ..0000.161679!3 len:41 [3]
│                            ← StrChunk ..0000.224803!1 len:0 [1]
│                              ← StrChunk ..0000.224802!1 len:0 [1]
│                                ← StrChunk ..0000.224922!1 len:0 [1]
│                                → StrChunk ..0000.224805!28 len:0 [28]
│                              → StrChunk ..0000.161685!10 len:0 [10]
│                                ← StrChunk ..0000.161518!156 len:0 [156]
│                            → StrChunk ..0000.224961!1 len:41 [1]
│                              ← StrChunk ..0000.161695!37 len:0 [37]
│                                ← StrChunk ..0000.161674!5 len:0 [5]
│                              → StrChunk ..0000.161793!41 len:41 { "Our principle of not losing inpu" … }
│                                ← StrChunk ..0000.161307!2 len:0 [2]
│                          → StrChunk ..0000.161967!120 len:247 { "merged document states that may " … }
│                            ← StrChunk ..0000.180964!2 len:96 [2]
│                              ← StrChunk ..0000.161869!34 len:56 { "reasonable, but as illustrated i" … }
│                                ← StrChunk ..0000.259195!22 len:22 { "at first glance to be " }
│                              → StrChunk ..0000.161933!12 len:40 { "it leads to " }
│                                ← StrChunk ..0000.161903!28 len:28 { "Figure~\\ref{fig:todo-item}, " }
│                            → StrChunk ..0000.161778!14 len:31 [14]
│                              ← StrChunk ..0000.161834!1 len:0 [1]
│                                ← StrChunk ..0000.161957!5 len:0 [5]
│                              → StrChunk ..0000.161309!30 len:31 { "Further work will be needed to" }
│                                ← StrChunk ..0000.161792!1 len:1 { " " }
│                        → StrChunk ..0000.224977!24 len:165 { " that a schema language " }
│                          ← StrChunk ..0000.161453!1 len:108 { "." }
│                            ← StrChunk ..0000.180807!43 len:91 { "ly surprising under concurrent m" … }
│                              ← StrChunk ..0000.180756!47 len:48 { " and to design data structures t" … }
│                                ← StrChunk ..0000.259217!1 len:1 { "," }
│                              → StrChunk ..0000.161339!114 len:0 [114]
│                                ← StrChunk ..0000.180803!2 len:0 [2]
│                            → StrChunk ..0000.225161!7 len:16 { "urn out" }
│                              ← StrChunk ..0000.225154!5 len:9 { "may t" }
│                                ← StrChunk ..0000.224962!4 len:4 { " It " }
│                              → StrChunk ..0000.224966!11 len:0 [11]
│                                ← StrChunk ..0000.225159!1 len:0 [1]
│                          → StrChunk ..0000.225273!1 len:33 { " " }
│                            ← StrChunk ..0000.225256!9 len:32 { "required " }
│                              ← StrChunk ..0000.225172!3 len:8 { "be " }
│                                ← StrChunk ..0000.225023!5 len:5 { "will " }
│                              → StrChunk ..0000.225265!8 len:15 [8]
│                                ← StrChunk ..0000.225299!15 len:15 { "to support more" }
│                            → StrChunk ..0000.225181!1 len:0 [1]
│                              ← StrChunk ..0000.225183!13 len:0 [13]
│                                ← StrChunk ..0000.225175!6 len:0 [6]
│                              → StrChunk ..0000.225196!5 len:0 [5]
│                                ← StrChunk ..0000.225112!11 len:0 [11]
│                    → StrChunk ..0000.142371!1 len:1508 { "\n" }
│                      ← StrChunk ..0000.160345!1 len:864 [1]
│                        ← StrChunk ..0000.225053!4 len:169 [4]
│                          ← StrChunk ..0000.225142!1 len:168 { "." }
│                            ← StrChunk ..0000.225138!1 len:20 { "x" }
│                              ← StrChunk ..0000.225123!1 len:6 [1]
│                                ← StrChunk ..0000.225201!7 len:0 [7]
│                                → StrChunk ..0000.225124!6 len:6 { "comple" }
│                              → StrChunk ..0000.225139!3 len:13 [3]
│                                ← StrChunk ..0000.225278!13 len:13 { " applications" }
│                            → StrChunk ..0000.225028!12 len:147 [12]
│                              ← StrChunk ..0000.225130!4 len:147 [4]
│                                ← StrChunk ..0000.225743!147 len:147 { " A schema language could also su" … }
│                              → StrChunk ..0000.225061!18 len:0 [18]
│                                ← StrChunk ..0000.225050!3 len:0 [3]
│                          → StrChunk ..0000.161495!1 len:1 [1]
│                            ← StrChunk ..0000.225042!1 len:1 [1]
│                              ← StrChunk ..0000.225044!2 len:0 [2]
│                                ← StrChunk ..0000.225040!2 len:0 [2]
│                              → StrChunk ..0000.162175!1 len:1 { "\n" }
│                                ← StrChunk ..0000.225001!11 len:0 [11]
│                            → StrChunk ..0000.160657!3 len:0 [3]
│                              ← StrChunk ..0000.161454!41 len:0 [41]
│                                ← StrChunk ..0000.161732!46 len:0 [46]
│                              → StrChunk ..0000.160490!1 len:0 [1]
│                                ← StrChunk ..0000.160565!8 len:0 [8]
│                        → StrChunk ..0000.142277!94 len:695 { "\n\n\\section*{Acknowledgements}\n\nT" … }
│                          ← StrChunk ..0000.259734!1 len:490 { " " }
│                            ← StrChunk ..0000.162177!1 len:421 { "T" }
│                              ← StrChunk ..0000.142276!1 len:1 { "\n" }
│                                ← StrChunk ..0000.142260!16 len:0 [16]
│                              → StrChunk ..0000.178260!110 len:419 { " Moreover, garbage collection (t" … }
│                                ← StrChunk ..0000.162228!309 len:309 { "he CRDT defined in this paper su" … }
│                            → StrChunk ..0000.162178!15 len:68 [15]
│                              ← StrChunk ..0000.162537!58 len:68 { " We plan to address these missin" … }
│                                ← StrChunk ..0000.178370!10 len:10 { "structure." }
│                              → StrChunk ..0000.162193!4 len:0 [4]
│                                ← StrChunk ..0000.162201!6 len:0 [6]
│                          → StrChunk ..0000.180374!12 len:111 { "Diana Vasile" }
│                            ← StrChunk ..0000.231261!1 len:31 { "," }
│                              ← StrChunk ..0000.180425!15 len:29 { "Dominic Orchard" }
│                                ← StrChunk ..0000.180360!14 len:14 { " Thank you to " }
│                              → StrChunk ..0000.180444!1 len:1 { " " }
│                                ← StrChunk ..0000.180440!4 len:0 [4]
│                            → StrChunk ..0000.231304!13 len:68 { "that improved" }
│                              ← StrChunk ..0000.180386!14 len:43 { " for comments " }
│                                ← StrChunk ..0000.231262!29 len:29 { ", and the anonymous reviewers" }
│                              → StrChunk ..0000.180413!12 len:12 { " this paper." }
│                                ← StrChunk ..0000.180400!13 len:0 [13]
│                      → StrChunk ..0000.229764!18 len:643 { "cloud applications" }
│                        ← StrChunk ..0000.229693!1 len:322 { "H" }
│                          ← StrChunk ..0000.229233!19 len:231 { "[{\\includegraphics[" }
│                            ← StrChunk ..0000.259218!7 len:87 { "\n\\vfill" }
│                              ← StrChunk ..0000.229092!1 len:57 [1]
│                                ← StrChunk ..0000.142415!57 len:57 { "\n\\bibliographystyle{IEEEtran}\n\\b" … }
│                              → StrChunk ..0000.229093!22 len:23 { "\n\\begin{IEEEbiography}" }
│                                ← StrChunk ..0000.259226!1 len:1 { "\n" }
│                            → StrChunk ..0000.229115!19 len:125 { "{Martin Kleppmann}\n" }
│                              ← StrChunk ..0000.229252!14 len:23 { "]{mk428.jpg}}]" }
│                                ← StrChunk ..0000.229266!9 len:9 { "width=1in" }
│                              → StrChunk ..0000.229578!59 len:83 { "in the Computer Laboratory at th" … }
│                                ← StrChunk ..0000.229550!24 len:24 { "is a Research Associate " }
│                          → StrChunk ..0000.229716!5 len:90 { " work" }
│                            ← StrChunk ..0000.229694!19 len:42 { "project, TRVE Data," }
│                              ← StrChunk ..0000.229668!20 len:20 { "is current research " }
│                                ← StrChunk ..0000.229663!5 len:0 [5]
│                              → StrChunk ..0000.229713!3 len:3 [3]
│                                ← StrChunk ..0000.239393!3 len:3 { " is" }
│                            → StrChunk ..0000.229721!3 len:43 [3]
│                              ← StrChunk ..0000.229802!1 len:3 [1]
│                                ← StrChunk ..0000.239397!3 len:3 { "ing" }
│                              → StrChunk ..0000.229782!14 len:40 [14]
│                                ← StrChunk ..0000.229724!40 len:40 { " towards better security and pri" … }
│                        → StrChunk ..0000.230061!2 len:303 { ", " }
│                          ← StrChunk ..0000.229951!90 len:186 { "is book \\emph{Designing Data-Int" … }
│                            ← StrChunk ..0000.229806!32 len:82 { " applying end-to-end encryption " }
│                              ← StrChunk ..0000.229880!13 len:3 [13]
│                                ← StrChunk ..0000.229803!3 len:3 { " by" }
│                              → StrChunk ..0000.229906!19 len:47 { "application data. H" }
│                                ← StrChunk ..0000.229852!28 len:28 { "to collaboratively editable " }
│                            → StrChunk ..0000.230042!1 len:14 { "7" }
│                              ← StrChunk ..0000.230041!1 len:1 [1]
│                                ← StrChunk ..0000.230047!1 len:1 { "1" }
│                              → StrChunk ..0000.230048!11 len:12 { " Previously" }
│                                ← StrChunk ..0000.230045!1 len:1 { "." }
│                          → StrChunk ..0000.230063!1 len:115 [1]
│                            ← StrChunk ..0000.239400!35 len:115 { ", including Rapportive and Linke" … }
│                              ← StrChunk ..0000.230074!72 len:79 { "ed as a software engineer and en" … }
│                                ← StrChunk ..0000.230065!7 len:7 { "he work" }
│                              → StrChunk ..0000.230072!1 len:1 [1]
│                                ← StrChunk ..0000.230146!1 len:1 { "." }
│                            → StrChunk ..0000.229925!13 len:0 [13]
│                              ← StrChunk ..0000.230043!1 len:0 [1]
│                                ← StrChunk ..0000.230059!1 len:0 [1]
│                              → StrChunk ..0000.229637!12 len:0 [12]
│                                ← StrChunk ..0000.229661!1 len:0 [1]
│                → StrChunk ..0000.174702!117 len:4725 { "H_q$ respectively. We must then " … }
│                  ← StrChunk ..0000.172238!27 len:2596 { "end{theorem}\n\n\\begin{proof}" }
│                    ← StrChunk ..0000.238692!2 len:870 [2]
│                      ← StrChunk ..0000.229461!70 len:564 [70]
│                        ← StrChunk ..0000.229208!1 len:188 { "\n" }
│                          ← StrChunk ..0000.229316!1 len:108 [1]
│                            ← StrChunk ..0000.229277!1 len:83 { "{" }
│                              ← StrChunk ..0000.229138!43 len:44 { "\n\\end{IEEEbiography}\n\n\\begin{IEE" … }
│                                ← StrChunk ..0000.229134!4 len:0 [4]
│                                → StrChunk ..0000.229275!1 len:1 { "[" }
│                              → StrChunk ..0000.229318!1 len:38 { "}" }
│                                ← StrChunk ..0000.229279!37 len:37 { "\\includegraphics[width=1in]{arb3" … }
│                            → StrChunk ..0000.229181!12 len:25 { "{Alastair R." }
│                              ← StrChunk ..0000.229276!1 len:2 { "]" }
│                                ← StrChunk ..0000.229278!1 len:1 { "}" }
│                              → StrChunk ..0000.229196!11 len:11 { " Beresford}" }
│                                ← StrChunk ..0000.229195!1 len:0 [1]
│                          → StrChunk ..0000.238944!2 len:79 [2]
│                            ← StrChunk ..0000.229406!55 len:79 [55]
│                              ← StrChunk ..0000.229332!74 len:79 { "Senior Lecturer in the Computer " … }
│                                ← StrChunk ..0000.229323!5 len:5 { "is a " }
│                              → StrChunk ..0000.238948!3 len:0 [3]
│                                ← StrChunk ..0000.238941!3 len:0 [3]
│                            → StrChunk ..0000.238906!35 len:0 [35]
│                              ← StrChunk ..0000.238885!15 len:0 [15]
│                                ← StrChunk ..0000.238823!60 len:0 [60]
│                              → StrChunk ..0000.238883!1 len:0 [1]
│                                ← StrChunk ..0000.238900!3 len:0 [3]
│                        → StrChunk ..0000.238748!6 len:376 { "ptops." }
│                          ← StrChunk ..0000.238568!72 len:176 { "lores the security and privacy o" … }
│                            ← StrChunk ..0000.238476!8 len:22 [8]
│                              ← StrChunk ..0000.238473!3 len:4 { "His" }
│                                ← StrChunk ..0000.229531!1 len:1 { " " }
│                              → StrChunk ..0000.238554!8 len:18 { "work exp" }
│                                ← StrChunk ..0000.238484!10 len:10 { " research " }
│                            → StrChunk ..0000.238683!9 len:82 { "worked mo" }
│                              ← StrChunk ..0000.238672!3 len:25 { "net" }
│                                ← StrChunk ..0000.238642!22 len:22 { "a particular focus on " }
│                              → StrChunk ..0000.238730!16 len:48 { ", tablets and la" }
│                                ← StrChunk ..0000.238696!32 len:32 { "bile devices such as smartphones" }
│                          → StrChunk ..0000.239365!1 len:194 [1]
│                            ← StrChunk ..0000.239275!13 len:194 { "curity and pr" }
│                              ← StrChunk ..0000.239202!67 len:82 { "e security and privacy of the de" … }
│                                ← StrChunk ..0000.239131!15 len:15 { " He looks at th" }
│                              → StrChunk ..0000.239367!26 len:99 { "d-based Internet services." }
│                                ← StrChunk ..0000.239292!73 len:73 { "ivacy problems induced by the in" … }
│                            → StrChunk ..0000.239146!28 len:0 [28]
│                              ← StrChunk ..0000.239269!3 len:0 [3]
│                                ← StrChunk ..0000.239288!2 len:0 [2]
│                              → StrChunk ..0000.238728!1 len:0 [1]
│                                ← StrChunk ..0000.238746!1 len:0 [1]
│                      → StrChunk ..0000.100961!1 len:306 { "\n" }
│                        ← StrChunk ..0000.238437!18 len:20 [18]
│                          ← StrChunk ..0000.238525!2 len:0 [2]
│                            ← StrChunk ..0000.238562!3 len:0 [3]
│                              ← StrChunk ..0000.238664!4 len:0 [4]
│                                ← StrChunk ..0000.238675!4 len:0 [4]
│                                → StrChunk ..0000.238640!1 len:0 [1]
│                              → StrChunk ..0000.238510!1 len:0 [1]
│                                ← StrChunk ..0000.238500!8 len:0 [8]
│                            → StrChunk ..0000.238511!7 len:0 [7]
│                              ← StrChunk ..0000.238527!6 len:0 [6]
│                                ← StrChunk ..0000.238539!2 len:0 [2]
│                              → StrChunk ..0000.238494!3 len:0 [3]
│                                ← StrChunk ..0000.238508!1 len:0 [1]
│                          → StrChunk ..0000.229209!19 len:20 { "\\end{IEEEbiography}" }
│                            ← StrChunk ..0000.229328!2 len:1 [2]
│                              ← StrChunk ..0000.229532!14 len:0 [14]
│                                ← StrChunk ..0000.238419!2 len:0 [2]
│                              → StrChunk ..0000.229228!1 len:1 { "\n" }
│                                ← StrChunk ..0000.229229!4 len:0 [4]
│                            → StrChunk ..0000.101750!1 len:0 [1]
│                              ← StrChunk ..0000.102107!10 len:0 [10]
│                                ← StrChunk ..0000.229193!1 len:0 [1]
│                              → StrChunk ..0000.101228!3 len:0 [3]
│                                ← StrChunk ..0000.101530!4 len:0 [4]
│                        → StrChunk ..0000.142385!8 len:285 [8]
│                          ← StrChunk ..0000.62561!10 len:41 [10]
│                            ← StrChunk ..0000.62557!1 len:19 [1]
│                              ← StrChunk ..0000.230148!7 len:1 [7]
│                                ← StrChunk ..0000.230147!1 len:1 { "\n" }
│                              → StrChunk ..0000.209376!15 len:18 { "includeappendix" }
│                                ← StrChunk ..0000.62558!3 len:3 { "\\if" }
│                            → StrChunk ..0000.142372!11 len:22 [11]
│                              ← StrChunk ..0000.62571!1 len:11 [1]
│                                ← StrChunk ..0000.162628!11 len:11 { "\n\\clearpage" }
│                              → StrChunk ..0000.144682!9 len:11 { "appendix[" }
│                                ← StrChunk ..0000.142383!2 len:2 { "\n\\" }
│                          → StrChunk ..0000.144703!17 len:244 { "\\label{sec:proof}" }
│                            ← StrChunk ..0000.142402!1 len:21 [1]
│                              ← StrChunk ..0000.252367!1 len:10 { "C" }
│                                ← StrChunk ..0000.142393!9 len:9 { "Proof of " }
│                              → StrChunk ..0000.144673!1 len:11 { "]" }
│                                ← StrChunk ..0000.142403!10 len:10 { "onvergence" }
│                            → StrChunk ..0000.162639!1 len:206 { "\n" }
│                              ← StrChunk ..0000.142414!1 len:1 { "\n" }
│                                ← StrChunk ..0000.142413!1 len:0 [1]
│                              → StrChunk ..0000.172195!41 len:204 { "$ and $q$ have the same document" … }
│                                ← StrChunk ..0000.172030!163 len:163 { "\\begin{theorem}\\label{thm:conver" … }
│                    → StrChunk ..0000.173132!1 len:1699 { "\n" }
│                      ← StrChunk ..0000.172944!7 len:459 { " Thus, " }
│                        ← StrChunk ..0000.172596!10 len:323 [10]
│                          ← StrChunk ..0000.172503!6 len:160 { "rules " }
│                            ← StrChunk ..0000.172348!1 len:108 { "." }
│                              ← StrChunk ..0000.172301!47 len:102 { "ies $H_p$ and $H_q$ at $p$ and $" … }
│                                ← StrChunk ..0000.172277!20 len:20 { "\nConsider the histor" }
│                                → StrChunk ..0000.172350!35 len:35 { " (see Definition~\\ref{def:histor" … }
│                              → StrChunk ..0000.172498!5 len:5 [5]
│                                ← StrChunk ..0000.172493!5 len:5 { " The " }
│                            → StrChunk ..0000.172587!1 len:46 [1]
│                              ← StrChunk ..0000.172589!7 len:0 [7]
│                                ← StrChunk ..0000.172509!78 len:0 [78]
│                              → StrChunk ..0000.172447!46 len:46 { "\\textsc{Apply-Local} and \\textsc" … }
│                                ← StrChunk ..0000.172349!1 len:0 [1]
│                          → StrChunk ..0000.172646!11 len:163 { " operation " }
│                            ← StrChunk ..0000.172620!13 len:31 { "variant that " }
│                              ← StrChunk ..0000.172699!2 len:16 { "in" }
│                                ← StrChunk ..0000.172606!14 len:14 { " maintain the " }
│                              → StrChunk ..0000.172639!7 len:2 [7]
│                                ← StrChunk ..0000.172708!2 len:2 { "an" }
│                            → StrChunk ..0000.172803!49 len:121 { " and only if it was applied to t" … }
│                              ← StrChunk ..0000.172774!27 len:57 { "$ or $A_q(\\mathsf{ops})$ if" }
│                                ← StrChunk ..0000.172742!30 len:30 { "is added to $A_p(\\mathsf{ops})" }
│                              → StrChunk ..0000.172852!1 len:15 { "." }
│                                ← StrChunk ..0000.173857!14 len:14 { " at $p$ or $q$" }
│                        → StrChunk ..0000.173059!12 len:129 { "potentially " }
│                          ← StrChunk ..0000.173101!10 len:96 [10]
│                            ← StrChunk ..0000.172962!36 len:43 { "(\\mathsf{ops}) = A_q(\\mathsf{ops" … }
│                              ← StrChunk ..0000.172954!4 len:4 { "$A_p" }
│                                ← StrChunk ..0000.172951!3 len:0 [3]
│                              → StrChunk ..0000.173121!1 len:3 { "f" }
│                                ← StrChunk ..0000.173099!2 len:2 { "if" }
│                            → StrChunk ..0000.173053!5 len:53 [5]
│                              ← StrChunk ..0000.173002!51 len:51 { " $H_p$ and $H_q$ contain the sam" … }
│                                ← StrChunk ..0000.172998!4 len:0 [4]
│                              → StrChunk ..0000.173127!1 len:2 { "(" }
│                                ← StrChunk ..0000.173058!1 len:1 { " " }
│                          → StrChunk ..0000.173076!9 len:21 { "different" }
│                            ← StrChunk ..0000.173071!2 len:8 [2]
│                              ← StrChunk ..0000.173873!2 len:7 [2]
│                                ← StrChunk ..0000.173877!7 len:7 { "ordered" }
│                              → StrChunk ..0000.173074!2 len:1 [2]
│                                ← StrChunk ..0000.173073!1 len:1 { " " }
│                            → StrChunk ..0000.173131!1 len:4 [1]
│                              ← StrChunk ..0000.173085!6 len:2 [6]
│                                ← StrChunk ..0000.173891!2 len:2 { "ly" }
│                              → StrChunk ..0000.173091!1 len:2 { "." }
│                                ← StrChunk ..0000.173128!1 len:1 { ")" }
│                      → StrChunk ..0000.173768!1 len:1239 { "$" }
│                        ← StrChunk ..0000.173374!6 len:421 { " \\dots" }
│                          ← StrChunk ..0000.173352!11 len:86 { " operations" }
│                            ← StrChunk ..0000.173310!1 len:54 { " " }
│                              ← StrChunk ..0000.181285!6 len:18 { " $H_p$" }
│                                ← StrChunk ..0000.173298!12 len:12 { "\nThe history" }
│                              → StrChunk ..0000.181281!4 len:35 { " $n$" }
│                                ← StrChunk ..0000.173321!31 len:31 { "at replica $p$ is a sequence of" }
│                            → StrChunk ..0000.173893!8 len:21 { "\\langle " }
│                              ← StrChunk ..0000.173363!8 len:9 { " $H_p = " }
│                                ← StrChunk ..0000.181291!1 len:1 { ":" }
│                              → StrChunk ..0000.173909!1 len:4 { "," }
│                                ← StrChunk ..0000.173371!3 len:3 { "o_1" }
│                          → StrChunk ..0000.173483!33 len:329 { "ing the operations in order. Lik" … }
│                            ← StrChunk ..0000.173901!8 len:108 { " \\rangle" }
│                              ← StrChunk ..0000.173380!4 len:5 { " o_n" }
│                                ← StrChunk ..0000.173910!1 len:1 { "," }
│                              → StrChunk ..0000.173463!18 len:95 { "ty state and apply" }
│                                ← StrChunk ..0000.173384!77 len:77 { "$, and the document state at $p$" … }
│                            → StrChunk ..0000.173740!13 len:188 { "$i$ with $1 \\" }
│                              ← StrChunk ..0000.173674!64 len:151 { " Both histories must be consiste" … }
│                                ← StrChunk ..0000.173518!87 len:87 { "wise, the document state at $q$ " … }
│                              → StrChunk ..0000.173933!11 len:24 { "we require " }
│                                ← StrChunk ..0000.173755!13 len:13 { "le i \\le n$, " }
│                        → StrChunk ..0000.174007!47 len:817 { "the length of history $n$.\n\n\\emp" … }
│                          ← StrChunk ..0000.173841!8 len:180 { "le j < i" }
│                            ← StrChunk ..0000.173811!1 len:54 { "{" }
│                              ← StrChunk ..0000.173849!1 len:29 { "\\" }
│                                ← StrChunk ..0000.173783!28 len:28 { "o_i.\\mathit{deps} \\subseteq " }
│                              → StrChunk ..0000.173813!24 len:24 { "o_j.\\mathit{id} \\mid 1 \\" }
│                                ← StrChunk ..0000.173812!1 len:0 [1]
│                            → StrChunk ..0000.173855!2 len:118 { "$." }
│                              ← StrChunk ..0000.173851!2 len:2 { "\\}" }
│                                ← StrChunk ..0000.173850!1 len:0 [1]
│                              → StrChunk ..0000.173944!45 len:114 { "\n\nWe can prove the theorem by in" … }
│                                ← StrChunk ..0000.178041!69 len:69 { " The causality invariant is main" … }
│                          → StrChunk ..0000.174684!18 len:590 { " $H_p'$ and $H_q'$" }
│                            ← StrChunk ..0000.174406!25 len:472 { "$ is a permutation of $H_" }
│                              ← StrChunk ..0000.174237!167 len:330 { " are by definition in the same s" … }
│                                ← StrChunk ..0000.174068!163 len:163 { "n empty history with $n=0$ descr" … }
│                              → StrChunk ..0000.174519!35 len:117 { "_q$, we can construct new histor" … }
│                                ← StrChunk ..0000.174433!82 len:82 { "p$, and such that applying $H_p$" … }
│                            → StrChunk ..0000.174683!1 len:100 { " " }
│                              ← StrChunk ..0000.174624!33 len:89 { "at any causally ready position i" … }
│                                ← StrChunk ..0000.174554!56 len:56 { " of length $n+1$ by inserting a " … }
│                              → StrChunk ..0000.174665!10 len:10 { "$H_p$ or $" }
│                                ← StrChunk ..0000.174657!8 len:0 [8]
│                  → StrChunk ..0000.181532!11 len:2012 [11]
│                    ← StrChunk ..0000.174231!3 len:1431 [3]
│                      ← StrChunk ..0000.212551!30 len:1257 { " in Lemma~\\ref{lem:op-commute}" }
│                        ← StrChunk ..0000.181342!29 len:1070 { "precede $o_{n+1}$, and possib" }
│                          ← StrChunk ..0000.175204!28 len:501 { "fix, which is the remaining " }
│                            ← StrChunk ..0000.174898!303 len:373 { "\n\nIn order to prove the inductio" … }
│                              ← StrChunk ..0000.174819!40 len:67 { "operations in order results in t" … }
│                                ← StrChunk ..0000.174886!12 len:12 { "sequence of " }
│                                → StrChunk ..0000.174871!15 len:15 { "document state." }
│                              → StrChunk ..0000.175201!3 len:3 [3]
│                                ← StrChunk ..0000.175496!3 len:3 { "suf" }
│                            → StrChunk ..0000.181292!25 len:100 { " The prefix contains all " }
│                              ← StrChunk ..0000.175232!47 len:50 { "sequence $\\langle o_{j+1}, \\dots" … }
│                                ← StrChunk ..0000.175499!3 len:3 { "sub" }
│                              → StrChunk ..0000.181317!9 len:25 { "causally " }
│                                ← StrChunk ..0000.181326!16 len:16 { "operations that " }
│                          → StrChunk ..0000.175502!4 len:540 { "\n\nWe" }
│                            ← StrChunk ..0000.181392!1 len:340 [1]
│                              ← StrChunk ..0000.181394!107 len:126 { "that are concurrent with $o_{n+1" … }
│                                ← StrChunk ..0000.181373!19 len:19 { "ly some operations " }
│                              → StrChunk ..0000.175279!214 len:214 { " The earliest position where $o_" … }
│                                ← StrChunk ..0000.181371!1 len:0 [1]
│                            → StrChunk ..0000.175667!7 len:196 { "to $H_p" }
│                              ← StrChunk ..0000.175506!159 len:167 { " show that the effect on the doc" … }
│                                ← StrChunk ..0000.181501!8 len:8 { " need to" }
│                              → StrChunk ..0000.175687!15 len:22 { "_q$. We do this" }
│                                ← StrChunk ..0000.175678!7 len:7 { "$ or $H" }
│                        → StrChunk ..0000.175999!53 len:157 [53]
│                          ← StrChunk ..0000.175854!8 len:157 { "o_{n+1}$" }
│                            ← StrChunk ..0000.175812!2 len:148 [2]
│                              ← StrChunk ..0000.181513!2 len:112 { "ny" }
│                                ← StrChunk ..0000.175702!110 len:110 { " by showing that $o_{n+1}$ is co" … }
│                              → StrChunk ..0000.175814!36 len:36 { " operations that are concurrent " … }
│                                ← StrChunk ..0000.181509!1 len:0 [1]
│                            → StrChunk ..0000.175862!55 len:1 [55]
│                              ← StrChunk ..0000.212535!16 len:1 [16]
│                                ← StrChunk ..0000.212832!1 len:1 { "." }
│                              → StrChunk ..0000.204390!7 len:0 [7]
│                                ← StrChunk ..0000.175921!78 len:0 [78]
│                          → StrChunk ..0000.175665!1 len:0 [1]
│                            ← StrChunk ..0000.175850!2 len:0 [2]
│                              ← StrChunk ..0000.175917!2 len:0 [2]
│                                ← StrChunk ..0000.176054!51 len:0 [51]
│                              → StrChunk ..0000.175674!2 len:0 [2]
│                                ← StrChunk ..0000.175685!1 len:0 [1]
│                            → StrChunk ..0000.174515!2 len:0 [2]
│                              ← StrChunk ..0000.174610!7 len:0 [7]
│                                ← StrChunk ..0000.174859!6 len:0 [6]
│                              → StrChunk ..0000.174404!1 len:0 [1]
│                                ← StrChunk ..0000.174431!1 len:0 [1]
│                      → StrChunk ..0000.172633!3 len:174 [3]
│                        ← StrChunk ..0000.173182!17 len:0 [17]
│                          ← StrChunk ..0000.173516!1 len:0 [1]
│                            ← StrChunk ..0000.173769!7 len:0 [7]
│                              ← StrChunk ..0000.173989!9 len:0 [9]
│                                ← StrChunk ..0000.174054!7 len:0 [7]
│                                → StrChunk ..0000.173837!2 len:0 [2]
│                              → StrChunk ..0000.173738!1 len:0 [1]
│                                ← StrChunk ..0000.173753!1 len:0 [1]
│                            → StrChunk ..0000.173311!5 len:0 [5]
│                              ← StrChunk ..0000.173461!1 len:0 [1]
│                                ← StrChunk ..0000.173481!1 len:0 [1]
│                              → StrChunk ..0000.173170!8 len:0 [8]
│                                ← StrChunk ..0000.173133!1 len:0 [1]
│                          → StrChunk ..0000.173178!2 len:0 [2]
│                            ← StrChunk ..0000.173269!29 len:0 [29]
│                              ← StrChunk ..0000.173228!5 len:0 [5]
│                                ← StrChunk ..0000.173205!15 len:0 [15]
│                              → StrChunk ..0000.173220!4 len:0 [4]
│                                ← StrChunk ..0000.173233!18 len:0 [18]
│                            → StrChunk ..0000.172801!1 len:0 [1]
│                              ← StrChunk ..0000.172958!2 len:0 [2]
│                                ← StrChunk ..0000.173134!18 len:0 [18]
│                              → StrChunk ..0000.172657!32 len:0 [32]
│                                ← StrChunk ..0000.172772!1 len:0 [1]
│                        → StrChunk ..0000.162706!30 len:174 [30]
│                          ← StrChunk ..0000.178187!15 len:138 { ", we must first" }
│                            ← StrChunk ..0000.178110!43 len:65 { "\n\nBefore we can prove the commut" … }
│                              ← StrChunk ..0000.172265!12 len:12 { "\n\\end{proof}" }
│                                ← StrChunk ..0000.172297!2 len:0 [2]
│                              → StrChunk ..0000.178153!34 len:10 [34]
│                                ← StrChunk ..0000.212867!10 len:10 { "operations" }
│                            → StrChunk ..0000.172236!1 len:58 [1]
│                              ← StrChunk ..0000.178202!31 len:58 { " prove some preliminary lemmas." }
│                                ← StrChunk ..0000.178233!27 len:27 { " define some more terms and" }
│                              → StrChunk ..0000.162641!61 len:0 [61]
│                                ← StrChunk ..0000.172193!1 len:0 [1]
│                          → StrChunk ..0000.163043!20 len:36 { "\n\n\\begin{definition}" }
│                            ← StrChunk ..0000.163194!5 len:0 [5]
│                              ← StrChunk ..0000.163172!12 len:0 [12]
│                                ← StrChunk ..0000.163081!89 len:0 [89]
│                              → StrChunk ..0000.163170!1 len:0 [1]
│                                ← StrChunk ..0000.163184!10 len:0 [10]
│                            → StrChunk ..0000.181933!9 len:16 [9]
│                              ← StrChunk ..0000.181994!9 len:10 { "appearing" }
│                                ← StrChunk ..0000.168014!1 len:1 { "[" }
│                              → StrChunk ..0000.168015!12 len:6 [12]
│                                ← StrChunk ..0000.181942!6 len:6 { " after" }
│                    → StrChunk ..0000.163377!2 len:581 { " $" }
│                      ← StrChunk ..0000.163306!1 len:221 [1]
│                        ← StrChunk ..0000.163273!7 len:95 { " \\emph{" }
│                          ← StrChunk ..0000.163200!1 len:56 { "i" }
│                            ← StrChunk ..0000.181779!36 len:39 { "In the ordered list $\\mathit{ctx" … }
│                              ← StrChunk ..0000.168038!1 len:2 { "]" }
│                                ← StrChunk ..0000.168027!11 len:0 [11]
│                                → StrChunk ..0000.163080!1 len:1 { "\n" }
│                              → StrChunk ..0000.163199!1 len:1 [1]
│                                ← StrChunk ..0000.181816!1 len:1 { "l" }
│                            → StrChunk ..0000.181544!1 len:16 { "j" }
│                              ← StrChunk ..0000.163218!5 len:14 { "t $k_" }
│                                ← StrChunk ..0000.163203!9 len:9 { "st elemen" }
│                              → StrChunk ..0000.163224!1 len:1 { "$" }
│                                ← StrChunk ..0000.163223!1 len:0 [1]
│                          → StrChunk ..0000.181652!1 len:32 [1]
│                            ← StrChunk ..0000.181962!6 len:13 { " after" }
│                              ← StrChunk ..0000.181956!6 len:7 [6]
│                                ← StrChunk ..0000.181978!7 len:7 { "appears" }
│                              → StrChunk ..0000.163280!5 len:0 [5]
│                                ← StrChunk ..0000.181548!3 len:0 [3]
│                            → StrChunk ..0000.181552!1 len:19 { "1" }
│                              ← StrChunk ..0000.163288!18 len:18 { "} list element $k_" }
│                                ← StrChunk ..0000.163285!3 len:0 [3]
│                              → StrChunk ..0000.163333!1 len:0 [1]
│                                ← StrChunk ..0000.181516!1 len:0 [1]
│                        → StrChunk ..0000.163362!1 len:126 [1]
│                          ← StrChunk ..0000.163328!4 len:80 { " if " }
│                            ← StrChunk ..0000.163559!17 len:1 [17]
│                              ← StrChunk ..0000.163308!3 len:1 [3]
│                                ← StrChunk ..0000.163307!1 len:1 { "$" }
│                              → StrChunk ..0000.163314!14 len:0 [14]
│                                ← StrChunk ..0000.163311!1 len:0 [1]
│                            → StrChunk ..0000.181852!6 len:75 [6]
│                              ← StrChunk ..0000.181864!46 len:57 { "s a (possibly empty) sequence of" … }
│                                ← StrChunk ..0000.163334!11 len:11 { "there exist" }
│                              → StrChunk ..0000.181518!1 len:18 { "j" }
│                                ← StrChunk ..0000.163345!17 len:17 { " $k_2, \\dots, k_{" }
│                          → StrChunk ..0000.163495!1 len:46 { " " }
│                            ← StrChunk ..0000.182233!1 len:42 { "<" }
│                              ← StrChunk ..0000.163467!27 len:41 { " for all $i$ with $1 \\le i " }
│                                ← StrChunk ..0000.163363!14 len:14 { "-1}$ such that" }
│                              → StrChunk ..0000.163494!1 len:0 [1]
│                                ← StrChunk ..0000.182223!3 len:0 [3]
│                            → StrChunk ..0000.163496!1 len:3 [1]
│                              ← StrChunk ..0000.182226!2 len:1 [2]
│                                ← StrChunk ..0000.181520!1 len:1 { "j" }
│                              → StrChunk ..0000.173911!11 len:2 [11]
│                                ← StrChunk ..0000.163497!2 len:2 { "$," }
│                      → StrChunk ..0000.163201!1 len:358 [1]
│                        ← StrChunk ..0000.183430!18 len:183 { "immediately after}" }
│                          ← StrChunk ..0000.163510!7 len:82 { "{i+1}$." }
│                            ← StrChunk ..0000.163508!1 len:37 { "i" }
│                              ← StrChunk ..0000.163379!29 len:29 { "\\mathit{ctx}(\\mathsf{next}(k_" }
│                                ← StrChunk ..0000.163459!8 len:0 [8]
│                              → StrChunk ..0000.163409!7 len:7 { ")) = k_" }
│                                ← StrChunk ..0000.163408!1 len:0 [1]
│                            → StrChunk ..0000.183407!2 len:38 { " $" }
│                              ← StrChunk ..0000.183547!7 len:17 { " we say" }
│                                ← StrChunk ..0000.183397!10 len:10 { " Moreover," }
│                              → StrChunk ..0000.183448!6 len:19 [6]
│                                ← StrChunk ..0000.183411!19 len:19 { "k_j$ appears \\emph{" }
│                          → StrChunk ..0000.183534!1 len:83 [1]
│                            ← StrChunk ..0000.183498!28 len:83 { " $\\mathit{ctx}(\\mathsf{next}" }
│                              ← StrChunk ..0000.183544!3 len:41 { " if" }
│                                ← StrChunk ..0000.183460!38 len:38 { " $k_1$ if that sequence is empty" … }
│                              → StrChunk ..0000.183536!8 len:14 { " = k_j$." }
│                                ← StrChunk ..0000.183528!6 len:6 { "(k_1))" }
│                            → StrChunk ..0000.163416!43 len:0 [43]
│                              ← StrChunk ..0000.183409!1 len:0 [1]
│                                ← StrChunk ..0000.183526!1 len:0 [1]
│                              → StrChunk ..0000.163212!3 len:0 [3]
│                                ← StrChunk ..0000.163312!1 len:0 [1]
│                        → StrChunk ..0000.163603!4 len:175 [4]
│                          ← StrChunk ..0000.163582!6 len:58 [6]
│                            ← StrChunk ..0000.164080!6 len:33 { "defini" }
│                              ← StrChunk ..0000.163576!6 len:23 { "\n\nThe " }
│                                ← StrChunk ..0000.163063!17 len:17 { "\n\\end{definition}" }
│                              → StrChunk ..0000.164086!2 len:4 [2]
│                                ← StrChunk ..0000.164090!4 len:4 { "tion" }
│                            → StrChunk ..0000.181556!4 len:25 [4]
│                              ← StrChunk ..0000.182009!15 len:25 { "appearing after" }
│                                ← StrChunk ..0000.163588!10 len:10 { " of \\emph{" }
│                              → StrChunk ..0000.181653!1 len:0 [1]
│                                ← StrChunk ..0000.163598!5 len:0 [5]
│                          → StrChunk ..0000.162640!1 len:117 { "\n" }
│                            ← StrChunk ..0000.163655!4 len:81 [4]
│                              ← StrChunk ..0000.258027!3 len:51 { "Idx" }
│                                ← StrChunk ..0000.163607!48 len:48 { "} corresponds to the order in wh" … }
│                              → StrChunk ..0000.162702!2 len:30 [2]
│                                ← StrChunk ..0000.163659!30 len:30 { "} rules iterate over the list." }
│                            → StrChunk ..0000.164350!16 len:35 { "\\label{lem:list-" }
│                              ← StrChunk ..0000.162738!13 len:14 { "\\begin{lemma}" }
│                                ← StrChunk ..0000.162736!1 len:1 { "\n" }
│                              → StrChunk ..0000.181662!8 len:5 [8]
│                                ← StrChunk ..0000.182053!5 len:5 { "after" }
│              → StrChunk ..0000.189861!1 len:9203 { " " }
│                ← StrChunk ..0000.166265!1 len:4593 { "." }
│                  ← StrChunk ..0000.168811!2 len:2342 [2]
│                    ← StrChunk ..0000.163023!2 len:890 [2]
│                      ← StrChunk ..0000.162899!18 len:170 { "evaluation rules, " }
│                        ← StrChunk ..0000.181566!3 len:92 [3]
│                          ← StrChunk ..0000.162790!11 len:24 [11]
│                            ← StrChunk ..0000.162763!1 len:7 { "\n" }
│                              ← StrChunk ..0000.164377!1 len:1 { "}" }
│                                ← StrChunk ..0000.164372!5 len:0 [5]
│                                → StrChunk ..0000.164366!3 len:0 [3]
│                              → StrChunk ..0000.163236!1 len:5 { "k" }
│                                ← StrChunk ..0000.162786!4 len:4 { "If $" }
│                            → StrChunk ..0000.162802!1 len:17 [1]
│                              ← StrChunk ..0000.181562!1 len:2 { "2" }
│                                ← StrChunk ..0000.162801!1 len:1 { "_" }
│                              → StrChunk ..0000.182032!13 len:15 { "appears after" }
│                                ← StrChunk ..0000.162803!2 len:2 { "$ " }
│                          → StrChunk ..0000.163248!1 len:68 { "k" }
│                            ← StrChunk ..0000.162936!3 len:2 [3]
│                              ← StrChunk ..0000.181671!1 len:0 [1]
│                                ← StrChunk ..0000.162931!5 len:0 [5]
│                              → StrChunk ..0000.162819!2 len:2 { " $" }
│                                ← StrChunk ..0000.162805!14 len:0 [14]
│                            → StrChunk ..0000.181570!1 len:65 { "1" }
│                              ← StrChunk ..0000.162832!1 len:1 { "_" }
│                                ← StrChunk ..0000.162821!11 len:0 [11]
│                              → StrChunk ..0000.162834!63 len:63 { "$ in an ordered list, and the li" … }
│                                ← StrChunk ..0000.162833!1 len:0 [1]
│                        → StrChunk ..0000.162964!4 len:60 [4]
│                          ← StrChunk ..0000.162952!1 len:24 [1]
│                            ← StrChunk ..0000.162940!11 len:4 [11]
│                              ← StrChunk ..0000.163272!1 len:2 { "k" }
│                                ← StrChunk ..0000.162939!1 len:1 { "$" }
│                              → StrChunk ..0000.181572!1 len:2 { "2" }
│                                ← StrChunk ..0000.162951!1 len:1 { "_" }
│                            → StrChunk ..0000.181576!3 len:20 [3]
│                              ← StrChunk ..0000.182079!13 len:20 { "appears after" }
│                                ← StrChunk ..0000.162953!7 len:7 { "$ also " }
│                              → StrChunk ..0000.181672!1 len:0 [1]
│                                ← StrChunk ..0000.162960!4 len:0 [4]
│                          → StrChunk ..0000.162982!1 len:36 [1]
│                            ← StrChunk ..0000.162970!11 len:5 [11]
│                              ← StrChunk ..0000.163260!1 len:3 { "k" }
│                                ← StrChunk ..0000.162968!2 len:2 { " $" }
│                              → StrChunk ..0000.181580!1 len:2 { "1" }
│                                ← StrChunk ..0000.162981!1 len:1 { "_" }
│                            → StrChunk ..0000.163012!10 len:31 [10]
│                              ← StrChunk ..0000.181684!5 len:14 { "later" }
│                                ← StrChunk ..0000.162983!9 len:9 { "$ in all " }
│                              → StrChunk ..0000.163027!16 len:17 { "document states." }
│                                ← StrChunk ..0000.163022!1 len:1 { " " }
│                      → StrChunk ..0000.164094!45 len:720 { " Since no other rule affects the" … }
│                        ← StrChunk ..0000.163860!25 len:336 { "new list element between " }
│                          ← StrChunk ..0000.163715!47 len:139 { "\nThe only rule that modifies the" … }
│                            ← StrChunk ..0000.162751!12 len:27 { "\n\\end{lemma}" }
│                              ← StrChunk ..0000.162897!1 len:0 [1]
│                                ← StrChunk ..0000.162992!10 len:0 [10]
│                                → StrChunk ..0000.162764!11 len:0 [11]
│                              → StrChunk ..0000.163689!14 len:15 { "\n\\begin{proof}" }
│                                ← StrChunk ..0000.164864!1 len:1 { "\n" }
│                            → StrChunk ..0000.163769!21 len:65 { " in the context is $\\" }
│                              ← StrChunk ..0000.163762!7 len:8 [7]
│                                ← StrChunk ..0000.164288!8 len:8 { "pointers" }
│                              → StrChunk ..0000.163848!10 len:36 { "inserts a " }
│                                ← StrChunk ..0000.163804!26 len:26 { "textsc{Insert}_1$, and it " }
│                          → StrChunk ..0000.163956!47 len:172 { "textsf{tail}). This modification" … }
│                            ← StrChunk ..0000.163952!4 len:59 { "text" }
│                              ← StrChunk ..0000.163895!32 len:38 { "isting list elements (possibly \\" }
│                                ← StrChunk ..0000.163887!6 len:6 { "two ex" }
│                              → StrChunk ..0000.163931!17 len:17 { "sf{head} and/or \\" }
│                                ← StrChunk ..0000.163927!4 len:0 [4]
│                            → StrChunk ..0000.164003!10 len:66 [10]
│                              ← StrChunk ..0000.181591!10 len:13 [10]
│                                ← StrChunk ..0000.182102!13 len:13 { "appears-after" }
│                              → StrChunk ..0000.164027!47 len:53 { "ionship between any two existing" … }
│                                ← StrChunk ..0000.164013!6 len:6 { " relat" }
│                        → StrChunk ..0000.164170!25 len:339 { "\n\nNote that deletion of a" }
│                          ← StrChunk ..0000.163893!1 len:46 [1]
│                            ← StrChunk ..0000.164139!10 len:34 [10]
│                              ← StrChunk ..0000.181611!10 len:13 [10]
│                                ← StrChunk ..0000.182125!13 len:13 { "appears-after" }
│                              → StrChunk ..0000.164019!4 len:21 [4]
│                                ← StrChunk ..0000.164149!21 len:21 { " is always preserved." }
│                            → StrChunk ..0000.163830!9 len:12 [9]
│                              ← StrChunk ..0000.163858!1 len:0 [1]
│                                ← StrChunk ..0000.163885!1 len:0 [1]
│                              → StrChunk ..0000.163703!12 len:12 { "\n\\end{proof}" }
│                                ← StrChunk ..0000.163790!7 len:0 [7]
│                          → StrChunk ..0000.164391!9 len:268 { "\n\n\\begin{" }
│                            ← StrChunk ..0000.165178!88 len:138 [88]
│                              ← StrChunk ..0000.164296!54 len:138 { ", but only clears its presence s" … }
│                                ← StrChunk ..0000.164197!84 len:84 { "n element from a list does not r" … }
│                              → StrChunk ..0000.165266!1 len:0 [1]
│                                ← StrChunk ..0000.165268!16 len:0 [16]
│                            → StrChunk ..0000.164420!41 len:121 { "\nIf one replica inserts a list e" … }
│                              ← StrChunk ..0000.166160!26 len:32 { "\\label{lem:insert-between}" }
│                                ← StrChunk ..0000.164402!6 len:6 { "lemma}" }
│                              → StrChunk ..0000.164500!19 len:48 { "and $k_2$, i.e. if " }
│                                ← StrChunk ..0000.164463!29 len:29 { "_\\mathit{new}$ between $k_1$ " }
│                    → StrChunk ..0000.165032!81 len:1452 { "$\\mathit{ctr}$ that is greater t" … }
│                      ← StrChunk ..0000.181743!6 len:626 { " $k_1$" }
│                        ← StrChunk ..0000.168877!15 len:196 [15]
│                          ← StrChunk ..0000.181630!6 len:90 { " $k_1$" }
│                            ← StrChunk ..0000.181621!1 len:30 { " " }
│                              ← StrChunk ..0000.168828!15 len:16 { "$k_\\mathit{new}" }
│                                ← StrChunk ..0000.168815!13 len:0 [13]
│                                → StrChunk ..0000.169621!1 len:1 { "$" }
│                              → StrChunk ..0000.181622!8 len:13 [8]
│                                ← StrChunk ..0000.182146!13 len:13 { "appears after" }
│                            → StrChunk ..0000.182167!13 len:54 { "appears after" }
│                              ← StrChunk ..0000.181689!7 len:23 { " $k_2$ " }
│                                ← StrChunk ..0000.168843!16 len:16 { " in the list and" }
│                              → StrChunk ..0000.168859!18 len:18 { " $k_\\mathit{new}$ " }
│                                ← StrChunk ..0000.181696!8 len:0 [8]
│                          → StrChunk ..0000.164663!64 len:106 { "on the source replica after appl" … }
│                            ← StrChunk ..0000.164519!14 len:12 [14]
│                              ← StrChunk ..0000.168813!1 len:12 [1]
│                                ← StrChunk ..0000.168892!12 len:12 { "in the list " }
│                              → StrChunk ..0000.164591!72 len:0 [72]
│                                ← StrChunk ..0000.164537!22 len:0 [22]
│                            → StrChunk ..0000.181734!1 len:30 { " " }
│                              ← StrChunk ..0000.164742!16 len:16 { "$k_\\mathit{new}$" }
│                                ← StrChunk ..0000.164727!15 len:0 [15]
│                              → StrChunk ..0000.181735!8 len:13 [8]
│                                ← StrChunk ..0000.182188!13 len:13 { "appears after" }
│                        → StrChunk ..0000.164408!12 len:424 { "\n\\end{lemma}" }
│                          ← StrChunk ..0000.164780!15 len:97 [15]
│                            ← StrChunk ..0000.182209!13 len:42 { "appears after" }
│                              ← StrChunk ..0000.181749!7 len:11 { " $k_2$ " }
│                                ← StrChunk ..0000.164758!4 len:4 { " and" }
│                              → StrChunk ..0000.164762!18 len:18 { " $k_\\mathit{new}$ " }
│                                ← StrChunk ..0000.181756!8 len:0 [8]
│                            → StrChunk ..0000.164533!2 len:55 [2]
│                              ← StrChunk ..0000.164559!16 len:55 [16]
│                                ← StrChunk ..0000.164795!55 len:55 { "on every other replica where tha" … }
│                              → StrChunk ..0000.164461!1 len:0 [1]
│                                ← StrChunk ..0000.164492!4 len:0 [4]
│                          → StrChunk ..0000.165720!35 len:315 { "f{tail} or an operation identifi" … }
│                            ← StrChunk ..0000.164865!1 len:153 { "\n" }
│                              ← StrChunk ..0000.164850!1 len:1 { "\n" }
│                                ← StrChunk ..0000.165172!3 len:0 [3]
│                              → StrChunk ..0000.165580!138 len:151 { "\nThe rules for generating list o" … }
│                                ← StrChunk ..0000.164851!13 len:13 { "\\begin{proof}" }
│                            → StrChunk ..0000.164882!1 len:127 [1]
│                              ← StrChunk ..0000.165718!1 len:2 [1]
│                                ← StrChunk ..0000.165756!2 len:2 { "\n\n" }
│                              → StrChunk ..0000.165005!25 len:125 { "is given a counter value " }
│                                ← StrChunk ..0000.164883!100 len:100 { "When the insertion operation is " … }
│                      → StrChunk ..0000.166089!1 len:745 [1]
│                        ← StrChunk ..0000.166100!2 len:485 { "an" }
│                          ← StrChunk ..0000.165385!32 len:388 { "-Remote} add operation IDs to $A" }
│                            ← StrChunk ..0000.165284!21 len:148 { ", we must have $k_2 \\" }
│                              ← StrChunk ..0000.165118!54 len:55 { "_p(\\mathsf{ops})$. If $k_2$ is a" … }
│                                ← StrChunk ..0000.165115!1 len:1 { "A" }
│                              → StrChunk ..0000.165358!25 len:72 { "-Local} and \\textsc{Apply" }
│                                ← StrChunk ..0000.165309!47 len:47 { "in A_p(\\mathsf{ops})$, since bot" … }
│                            → StrChunk ..0000.165512!1 len:208 { " " }
│                              ← StrChunk ..0000.165465!1 len:45 { "." }
│                                ← StrChunk ..0000.165419!44 len:44 { "_p(\\mathsf{ops})$ when applying " … }
│                              → StrChunk ..0000.165831!158 len:162 { ", either $k_2 < k_\\mathit{new}$ " … }
│                                ← StrChunk ..0000.165825!4 len:4 { "Thus" }
│                          → StrChunk ..0000.166074!1 len:95 [1]
│                            ← StrChunk ..0000.166005!58 len:75 { " using \\textsc{Apply-Remote} and" … }
│                              ← StrChunk ..0000.166002!1 len:13 [1]
│                                ← StrChunk ..0000.165989!13 len:13 { "other replica" }
│                              → StrChunk ..0000.182339!1 len:4 { "2" }
│                                ← StrChunk ..0000.166071!3 len:3 { "$k_" }
│                            → StrChunk ..0000.166077!8 len:20 [8]
│                              ← StrChunk ..0000.182348!13 len:15 { "appears after" }
│                                ← StrChunk ..0000.166075!2 len:2 { "$ " }
│                              → StrChunk ..0000.182362!1 len:5 { "1" }
│                                ← StrChunk ..0000.166085!4 len:4 { " $k_" }
│                        → StrChunk ..0000.166656!12 len:260 [12]
│                          ← StrChunk ..0000.166186!1 len:202 { " " }
│                            ← StrChunk ..0000.182066!5 len:64 { "after" }
│                              ← StrChunk ..0000.166103!32 len:42 { "replica (by Lemma~\\ref{lem:list-" }
│                                ← StrChunk ..0000.166090!10 len:10 { "$ on that " }
│                              → StrChunk ..0000.166143!17 len:17 { "} and causality)." }
│                                ← StrChunk ..0000.166135!8 len:0 [8]
│                            → StrChunk ..0000.182400!1 len:137 { "," }
│                              ← StrChunk ..0000.166603!48 len:122 { ", so the rules start iterating t" … }
│                                ← StrChunk ..0000.166191!74 len:74 { "The cursor of the operation is $" … }
│                              → StrChunk ..0000.182401!9 len:14 { "therefore" }
│                                ← StrChunk ..0000.166651!5 len:5 { " and " }
│                          → StrChunk ..0000.182371!1 len:58 [1]
│                            ← StrChunk ..0000.166686!3 len:37 { "at " }
│                              ← StrChunk ..0000.182410!12 len:30 { "is inserted " }
│                                ← StrChunk ..0000.166668!18 len:18 { " $k_\\mathit{new}$ " }
│                              → StrChunk ..0000.182373!3 len:4 { "ome" }
│                                ← StrChunk ..0000.182370!1 len:1 { "s" }
│                            → StrChunk ..0000.182389!5 len:21 { "after" }
│                              ← StrChunk ..0000.166690!10 len:10 { " position " }
│                                ← StrChunk ..0000.166689!1 len:0 [1]
│                              → StrChunk ..0000.166713!6 len:6 { " $k_1$" }
│                                ← StrChunk ..0000.166700!13 len:0 [13]
│                  → StrChunk ..0000.183908!11 len:2250 { " operations" }
│                    ← StrChunk ..0000.164877!5 len:1017 { "proof" }
│                      ← StrChunk ..0000.166886!4 len:637 [4]
│                        ← StrChunk ..0000.166803!4 len:631 [4]
│                          ← StrChunk ..0000.166902!4 len:413 [4]
│                            ← StrChunk ..0000.166428!21 len:182 { "textsc{Insert}_1$ or " }
│                              ← StrChunk ..0000.166266!1 len:155 [1]
│                                ← StrChunk ..0000.166719!2 len:2 { "\n\n" }
│                                → StrChunk ..0000.166267!153 len:153 { "If other concurrent insertions o" … }
│                              → StrChunk ..0000.166910!4 len:6 { "text" }
│                                ← StrChunk ..0000.166451!2 len:2 { "$\\" }
│                            → StrChunk ..0000.166722!81 len:231 { " However, we know that $k_2 < k_" … }
│                              ← StrChunk ..0000.166457!146 len:146 { "sc{Insert}_2$ may apply. In part" … }
│                                ← StrChunk ..0000.166453!4 len:0 [4]
│                              → StrChunk ..0000.166894!4 len:4 [4]
│                                ← StrChunk ..0000.166918!4 len:4 { "text" }
│                          → StrChunk ..0000.167025!5 len:218 { "at a " }
│                            ← StrChunk ..0000.166993!14 len:174 [14]
│                              ← StrChunk ..0000.166926!67 len:138 { "textsc{Insert}_{1,2}$ rules thus" … }
│                                ← StrChunk ..0000.166807!71 len:71 { "sc{Insert}_1$ will apply with $\\" … }
│                              → StrChunk ..0000.182436!18 len:36 { "is never inserted " }
│                                ← StrChunk ..0000.167007!18 len:18 { " $k_\\mathit{new}$ " }
│                            → StrChunk ..0000.167047!12 len:39 [12]
│                              ← StrChunk ..0000.182466!17 len:32 { "hat appears after" }
│                                ← StrChunk ..0000.167032!15 len:15 { "list position t" }
│                              → StrChunk ..0000.167030!1 len:7 [1]
│                                ← StrChunk ..0000.167059!7 len:7 { " $k_2$." }
│                        → StrChunk ..0000.165467!5 len:6 [5]
│                          ← StrChunk ..0000.166063!4 len:0 [4]
│                            ← StrChunk ..0000.166420!4 len:0 [4]
│                              ← StrChunk ..0000.166449!1 len:0 [1]
│                                ← StrChunk ..0000.166878!4 len:0 [4]
│                              → StrChunk ..0000.166187!1 len:0 [1]
│                                ← StrChunk ..0000.166189!1 len:0 [1]
│                            → StrChunk ..0000.165513!67 len:0 [67]
│                              ← StrChunk ..0000.165829!1 len:0 [1]
│                                ← StrChunk ..0000.166003!1 len:0 [1]
│                              → StrChunk ..0000.165477!17 len:0 [17]
│                                ← StrChunk ..0000.165466!1 len:0 [1]
│                          → StrChunk ..0000.165116!1 len:6 [1]
│                            ← StrChunk ..0000.165383!1 len:0 [1]
│                              ← StrChunk ..0000.165417!1 len:0 [1]
│                                ← StrChunk ..0000.165463!1 len:0 [1]
│                              → StrChunk ..0000.165305!2 len:0 [2]
│                                ← StrChunk ..0000.165356!1 len:0 [1]
│                            → StrChunk ..0000.164983!11 len:6 [11]
│                              ← StrChunk ..0000.165030!1 len:0 [1]
│                                ← StrChunk ..0000.165113!1 len:0 [1]
│                              → StrChunk ..0000.164875!1 len:6 { "{" }
│                                ← StrChunk ..0000.164866!5 len:5 { "\n\\end" }
│                      → StrChunk ..0000.183788!9 len:375 { "$ and $o_" }
│                        ← StrChunk ..0000.184038!1 len:217 { "s" }
│                          ← StrChunk ..0000.183693!15 len:153 { " operations $o_" }
│                            ← StrChunk ..0000.183585!39 len:128 { "on ancestor]\\label{def:common-an" … }
│                              ← StrChunk ..0000.183554!3 len:26 { "\n\n\\" }
│                                ← StrChunk ..0000.164876!1 len:1 { "}" }
│                                → StrChunk ..0000.183559!22 len:22 { "begin{definition}[comm" }
│                              → StrChunk ..0000.184739!11 len:63 { " concurrent" }
│                                ← StrChunk ..0000.183641!52 len:52 { "\nIn a history $H$, the \\emph{com" … }
│                            → StrChunk ..0000.184022!1 len:10 [1]
│                              ← StrChunk ..0000.184034!1 len:1 [1]
│                                ← StrChunk ..0000.184040!1 len:1 { "r" }
│                              → StrChunk ..0000.183709!9 len:9 { "$ and $o_" }
│                                ← StrChunk ..0000.183708!1 len:0 [1]
│                          → StrChunk ..0000.183754!7 len:63 { "latest " }
│                            ← StrChunk ..0000.183718!1 len:9 [1]
│                              ← StrChunk ..0000.184024!1 len:0 [1]
│                                ← StrChunk ..0000.184036!1 len:0 [1]
│                              → StrChunk ..0000.183722!8 len:9 { " is the " }
│                                ← StrChunk ..0000.183719!1 len:1 { "$" }
│                            → StrChunk ..0000.183761!26 len:47 { "causally precedes both $o_" }
│                              ← StrChunk ..0000.183732!20 len:20 { "document state that " }
│                                ← StrChunk ..0000.183752!1 len:0 [1]
│                              → StrChunk ..0000.183787!1 len:1 [1]
│                                ← StrChunk ..0000.184026!1 len:1 { "r" }
│                        → StrChunk ..0000.184000!5 len:149 { " of $" }
│                          ← StrChunk ..0000.183624!17 len:41 { "\n\\end{definition}" }
│                            ← StrChunk ..0000.183798!2 len:3 { "$." }
│                              ← StrChunk ..0000.183797!1 len:1 [1]
│                                ← StrChunk ..0000.184028!1 len:1 { "s" }
│                              → StrChunk ..0000.183720!1 len:0 [1]
│                                ← StrChunk ..0000.183730!1 len:0 [1]
│                            → StrChunk ..0000.182556!1 len:21 { "\n" }
│                              ← StrChunk ..0000.183557!1 len:0 [1]
│                                ← StrChunk ..0000.183581!2 len:0 [2]
│                              → StrChunk ..0000.183802!19 len:20 { "The common ancestor" }
│                                ← StrChunk ..0000.183800!1 len:1 { "\n" }
│                          → StrChunk ..0000.184019!1 len:103 [1]
│                            ← StrChunk ..0000.184009!1 len:13 [1]
│                              ← StrChunk ..0000.184032!1 len:3 { "r" }
│                                ← StrChunk ..0000.184007!2 len:2 { "o_" }
│                              → StrChunk ..0000.184030!1 len:10 { "s" }
│                                ← StrChunk ..0000.184010!9 len:9 { "$ and $o_" }
│                            → StrChunk ..0000.183821!78 len:90 { " can be defined more formally as" … }
│                              ← StrChunk ..0000.184005!1 len:1 [1]
│                                ← StrChunk ..0000.184020!1 len:1 { "$" }
│                              → StrChunk ..0000.183899!9 len:11 [9]
│                                ← StrChunk ..0000.183935!11 len:11 { "sequence of" }
│                    → StrChunk ..0000.185258!31 len:1222 { " appears immediately after $k_r" }
│                      ← StrChunk ..0000.184791!29 len:634 { "]\\label{def:insert-interval}\n" }
│                        ← StrChunk ..0000.183984!16 len:223 { " that satisfies " }
│                          ← StrChunk ..0000.183955!6 len:69 [6]
│                            ← StrChunk ..0000.183953!1 len:42 [1]
│                              ← StrChunk ..0000.184046!31 len:34 { "langle o_1, \\dots, o_j \\rangle$" }
│                                ← StrChunk ..0000.184041!3 len:3 { " $\\" }
│                                → StrChunk ..0000.184044!1 len:0 [1]
│                              → StrChunk ..0000.184084!7 len:8 { "that is" }
│                                ← StrChunk ..0000.183954!1 len:1 { " " }
│                            → StrChunk ..0000.183948!2 len:27 [2]
│                              ← StrChunk ..0000.183919!1 len:23 [1]
│                                ← StrChunk ..0000.183961!23 len:23 { " the shortest prefix of" }
│                              → StrChunk ..0000.183922!4 len:4 { " $H$" }
│                                ← StrChunk ..0000.183920!2 len:0 [2]
│                          → StrChunk ..0000.184119!1 len:138 { "\\" }
│                            ← StrChunk ..0000.184112!3 len:29 [3]
│                              ← StrChunk ..0000.184736!3 len:24 { "cap" }
│                                ← StrChunk ..0000.184091!21 len:21 { "$(o_r.\\mathit{deps} \\" }
│                              → StrChunk ..0000.184729!1 len:5 { "." }
│                                ← StrChunk ..0000.184115!4 len:4 { " o_s" }
│                            → StrChunk ..0000.183801!1 len:108 { "\n" }
│                              ← StrChunk ..0000.184121!69 len:69 { "mathit{deps}) \\subseteq \\{o_1.\\m" … }
│                                ← StrChunk ..0000.184120!1 len:0 [1]
│                              → StrChunk ..0000.184752!37 len:38 { "\\begin{definition}[insertion int" … }
│                                ← StrChunk ..0000.184750!1 len:1 { "\n" }
│                        → StrChunk ..0000.185019!9 len:382 { "{after})$" }
│                          ← StrChunk ..0000.185034!2 len:173 { "rm" }
│                            ← StrChunk ..0000.184848!1 len:150 { " " }
│                              ← StrChunk ..0000.185037!11 len:20 { " concurrent" }
│                                ← StrChunk ..0000.184839!9 len:9 { "Given two" }
│                              → StrChunk ..0000.184957!37 len:129 { "$o_r$ is the pair of keys $(k_r^" … }
│                                ← StrChunk ..0000.184861!92 len:92 { "operations $o_r$ and $o_s$ that " … }
│                            → StrChunk ..0000.185011!6 len:21 { "^\\math" }
│                              ← StrChunk ..0000.184996!13 len:13 { "{before}, k_r" }
│                                ← StrChunk ..0000.184994!2 len:0 [2]
│                              → StrChunk ..0000.185017!2 len:2 [2]
│                                ← StrChunk ..0000.185030!2 len:2 { "rm" }
│                          → StrChunk ..0000.185072!11 len:200 { "rm{before}$" }
│                            ← StrChunk ..0000.185083!32 len:53 { " $o_r.\\mathit{id}$ appears after" }
│                              ← StrChunk ..0000.185048!9 len:10 { "such that" }
│                                ← StrChunk ..0000.185036!1 len:1 { " " }
│                              → StrChunk ..0000.185064!6 len:11 { "^\\math" }
│                                ← StrChunk ..0000.185057!5 len:5 { " $k_r" }
│                            → StrChunk ..0000.185187!17 len:136 { "o_r.\\mathit{id}$ " }
│                              ← StrChunk ..0000.185151!32 len:66 { "^\\mathrm{after}$ appears after $" }
│                                ← StrChunk ..0000.185115!34 len:34 { " when $o_r$ has been applied, $k" … }
│                              → StrChunk ..0000.185308!1 len:53 { "$" }
│                                ← StrChunk ..0000.185206!52 len:52 { "when $o_r$ has been applied, and" … }
│                      → StrChunk ..0000.185563!13 len:557 { "\\textsf{head}" }
│                        ← StrChunk ..0000.184953!2 len:268 [2]
│                          ← StrChunk ..0000.185204!1 len:175 [1]
│                            ← StrChunk ..0000.185461!10 len:175 { "similarly." }
│                              ← StrChunk ..0000.185309!148 len:165 { " in the common ancestor of $o_r$" … }
│                                ← StrChunk ..0000.185291!17 len:17 { "^\\mathrm{before}$" }
│                              → StrChunk ..0000.185289!1 len:0 [1]
│                                ← StrChunk ..0000.185457!2 len:0 [2]
│                            → StrChunk ..0000.185070!1 len:0 [1]
│                              ← StrChunk ..0000.185149!1 len:0 [1]
│                                ← StrChunk ..0000.185183!2 len:0 [2]
│                              → StrChunk ..0000.185009!1 len:0 [1]
│                                ← StrChunk ..0000.185062!1 len:0 [1]
│                          → StrChunk ..0000.184751!1 len:93 { "\n" }
│                            ← StrChunk ..0000.184836!1 len:17 { "\n" }
│                              ← StrChunk ..0000.184837!1 len:0 [1]
│                                ← StrChunk ..0000.184849!6 len:0 [6]
│                              → StrChunk ..0000.184789!1 len:16 [1]
│                                ← StrChunk ..0000.184820!16 len:16 { "\\end{definition}" }
│                            → StrChunk ..0000.185478!24 len:75 { "t may be the case that $" }
│                              ← StrChunk ..0000.185473!1 len:2 { "I" }
│                                ← StrChunk ..0000.185471!1 len:1 { "\n" }
│                              → StrChunk ..0000.185538!19 len:49 { "mathrm{before}$ is " }
│                                ← StrChunk ..0000.185504!30 len:30 { "k_r^\\mathrm{before}$ or $k_s^\\" }
│                        → StrChunk ..0000.189648!11 len:276 [11]
│                          ← StrChunk ..0000.189729!1 len:177 { "i" }
│                            ← StrChunk ..0000.185643!14 len:171 { "\\textsf{tail}." }
│                              ← StrChunk ..0000.185618!23 len:59 { "k_s^\\mathrm{after}$ is " }
│                                ← StrChunk ..0000.185578!36 len:36 { ", and that $k_r^\\mathrm{after}$ " … }
│                              → StrChunk ..0000.189673!55 len:98 { "For any two concurrent insertion" … }
│                                ← StrChunk ..0000.189587!43 len:43 { "\n\n\\begin{lemma}\\label{lem:insert" … }
│                            → StrChunk ..0000.189646!1 len:5 [1]
│                              ← StrChunk ..0000.189643!3 len:3 { "n a" }
│                                ← StrChunk ..0000.189642!1 len:0 [1]
│                              → StrChunk ..0000.189742!1 len:2 { "h" }
│                                ← StrChunk ..0000.189647!1 len:1 { " " }
│                          → StrChunk ..0000.189821!17 len:99 { ", then the order " }
│                            ← StrChunk ..0000.189746!37 len:52 [37]
│                              ← StrChunk ..0000.189743!3 len:15 { "if " }
│                                ← StrChunk ..0000.189659!12 len:12 { "istory $H$, " }
│                              → StrChunk ..0000.189820!1 len:37 [1]
│                                ← StrChunk ..0000.189783!37 len:37 { "$o_r.\\mathit{cur} = o_s.\\mathit{" … }
│                            → StrChunk ..0000.189840!17 len:30 { " which the insert" }
│                              ← StrChunk ..0000.189838!2 len:2 [2]
│                                ← StrChunk ..0000.190025!2 len:2 { "at" }
│                              → StrChunk ..0000.189857!4 len:11 [4]
│                                ← StrChunk ..0000.190031!11 len:11 { "ed elements" }
│                → StrChunk ..0000.188432!2 len:4609 [2]
│                  ← StrChunk ..0000.182809!1 len:4071 { "." }
│                    ← StrChunk ..0000.190693!1 len:1977 [1]
│                      ← StrChunk ..0000.190874!4 len:1464 [4]
│                        ← StrChunk ..0000.189641!1 len:834 { "\n" }
│                          ← StrChunk ..0000.189891!26 len:110 { " independent of the order " }
│                            ← StrChunk ..0000.190485!2 len:58 [2]
│                              ← StrChunk ..0000.190471!14 len:37 { " after applyin" }
│                                ← StrChunk ..0000.189870!18 len:18 { "appear in the list" }
│                                → StrChunk ..0000.190489!5 len:5 { "g $H$" }
│                              → StrChunk ..0000.190042!18 len:21 { " deterministic and" }
│                                ← StrChunk ..0000.189888!3 len:3 { " is" }
│                            → StrChunk ..0000.189952!1 len:26 { "." }
│                              ← StrChunk ..0000.189917!35 len:25 [35]
│                                ← StrChunk ..0000.190529!25 len:25 { "of $o_r$ and $o_s$ in $H$" }
│                              → StrChunk ..0000.189671!1 len:0 [1]
│                                ← StrChunk ..0000.189862!4 len:0 [4]
│                          → StrChunk ..0000.190361!48 len:723 { "s of applying the operations:\n\n\\" … }
│                            ← StrChunk ..0000.190060!173 len:313 { "\nWithout loss of generality, ass" … }
│                              ← StrChunk ..0000.189953!15 len:26 { "\n\n\\begin{proof}" }
│                                ← StrChunk ..0000.189630!11 len:11 { "\\end{lemma}" }
│                              → StrChunk ..0000.190329!22 len:114 { "the two possible order" }
│                                ← StrChunk ..0000.190235!92 len:92 { "er than that of $o_s$, the two o" … }
│                            → StrChunk ..0000.190695!171 len:362 { "rule $\\textsc{Insert}_1$ applies" … }
│                              ← StrChunk ..0000.190554!139 len:182 { ". Thus, at the time when $o_s$ i" … }
│                                ← StrChunk ..0000.190428!43 len:43 { "\n\\item $o_r$ is applied before $" … }
│                              → StrChunk ..0000.190882!7 len:9 { "textsc{" }
│                                ← StrChunk ..0000.190872!2 len:2 { "$\\" }
│                        → StrChunk ..0000.191253!34 len:630 { " between $o_s.\\mathit{cur}$ and " … }
│                          ← StrChunk ..0000.191142!20 len:360 { ", so the rule skips " }
│                            ← StrChunk ..0000.190909!125 len:245 { "$o_r$.\n\n\\item $o_s$ is applied b" … }
│                              ← StrChunk ..0000.190889!18 len:24 { "}_2$ to skip past " }
│                                ← StrChunk ..0000.190866!6 len:6 { "Insert" }
│                              → StrChunk ..0000.191089!51 len:96 { "}_2$ applies with $\\mathit{next}" … }
│                                ← StrChunk ..0000.191042!45 len:45 { "When applying $o_r$, the rule $\\" … }
│                            → StrChunk ..0000.191166!11 len:95 { " $o_s$ and " }
│                              ← StrChunk ..0000.191162!4 len:4 [4]
│                                ← StrChunk ..0000.191181!4 len:4 { "past" }
│                              → StrChunk ..0000.191287!12 len:80 { " that appear" }
│                                ← StrChunk ..0000.191185!68 len:68 { "inserts $o_r$ at a position afte" … }
│                          → StrChunk ..0000.191400!8 len:236 [8]
│                            ← StrChunk ..0000.191416!4 len:236 { "so $" }
│                              ← StrChunk ..0000.191379!21 len:97 { "n $o_s.\\mathit{id}$, " }
│                                ← StrChunk ..0000.191299!76 len:76 { "_s$ at the time of inserting $o_" … }
│                              → StrChunk ..0000.191420!1 len:135 [1]
│                                ← StrChunk ..0000.191422!135 len:135 { "\\textsc{Insert}_2$ also skips ov" … }
│                            → StrChunk ..0000.191087!1 len:0 [1]
│                              ← StrChunk ..0000.191140!1 len:0 [1]
│                                ← StrChunk ..0000.191375!2 len:0 [2]
│                              → StrChunk ..0000.190907!1 len:0 [1]
│                                ← StrChunk ..0000.191034!4 len:0 [4]
│                      → StrChunk ..0000.185658!1 len:513 [1]
│                        ← StrChunk ..0000.191743!86 len:340 { "The ordering depends only on the" … }
│                          ← StrChunk ..0000.189973!1 len:168 { "\n" }
│                            ← StrChunk ..0000.189968!1 len:16 { "\n" }
│                              ← StrChunk ..0000.190327!1 len:0 [1]
│                                ← StrChunk ..0000.190351!5 len:0 [5]
│                                → StrChunk ..0000.190233!1 len:0 [1]
│                              → StrChunk ..0000.189969!4 len:15 [4]
│                                ← StrChunk ..0000.190413!15 len:15 { "\\end{enumerate}" }
│                            → StrChunk ..0000.191559!14 len:151 [14]
│                              ← StrChunk ..0000.191669!5 len:6 { "Thus," }
│                                ← StrChunk ..0000.191558!1 len:1 { "\n" }
│                              → StrChunk ..0000.191674!67 len:145 { ", regardless of the order in whi" … }
│                                ← StrChunk ..0000.191573!78 len:78 { " the insertion position of $o_r$" … }
│                          → StrChunk ..0000.189974!11 len:86 { "\\end{proof}" }
│                            ← StrChunk ..0000.191741!1 len:75 [1]
│                              ← StrChunk ..0000.191829!2 len:74 [2]
│                                ← StrChunk ..0000.191833!74 len:74 { "ime the operations are generated" … }
│                              → StrChunk ..0000.191557!1 len:1 { "\n" }
│                                ← StrChunk ..0000.191651!2 len:0 [2]
│                            → StrChunk ..0000.185660!94 len:0 [94]
│                              ← StrChunk ..0000.185864!11 len:0 [11]
│                                ← StrChunk ..0000.185657!1 len:0 [1]
│                              → StrChunk ..0000.185754!1 len:0 [1]
│                                ← StrChunk ..0000.185756!95 len:0 [95]
│                        → StrChunk ..0000.182588!1 len:173 [1]
│                          ← StrChunk ..0000.185534!2 len:33 [2]
│                            ← StrChunk ..0000.185576!1 len:0 [1]
│                              ← StrChunk ..0000.185614!2 len:0 [2]
│                                ← StrChunk ..0000.185641!1 len:0 [1]
│                              → StrChunk ..0000.185557!1 len:0 [1]
│                                ← StrChunk ..0000.185559!2 len:0 [2]
│                            → StrChunk ..0000.185472!1 len:33 { "\n" }
│                              ← StrChunk ..0000.185474!2 len:0 [2]
│                                ← StrChunk ..0000.185502!1 len:0 [1]
│                              → StrChunk ..0000.184732!1 len:32 { "-" }
│                                ← StrChunk ..0000.182557!31 len:31 { "\n\\begin{lemma}\\label{lem:insert" }
│                          → StrChunk ..0000.182610!1 len:140 [1]
│                            ← StrChunk ..0000.186063!4 len:39 { " $H$" }
│                              ← StrChunk ..0000.182642!23 len:32 { "In an operation history" }
│                                ← StrChunk ..0000.182589!9 len:9 { "reorder}\n" }
│                              → StrChunk ..0000.182668!1 len:3 { "a" }
│                                ← StrChunk ..0000.182665!2 len:2 { ", " }
│                            → StrChunk ..0000.182633!9 len:101 [9]
│                              ← StrChunk ..0000.182776!14 len:36 { "is commutative" }
│                                ← StrChunk ..0000.182611!22 len:22 { "n insertion operation " }
│                              → StrChunk ..0000.182676!65 len:65 { " with respect to concurrent inse" … }
│                                ← StrChunk ..0000.182669!7 len:0 [7]
│                    → StrChunk ..0000.193861!29 len:2093 { " for a finite number of steps" }
│                      ← StrChunk ..0000.192897!83 len:1348 { "If $o_r.\\mathit{cur} = o_s.\\math" … }
│                        ← StrChunk ..0000.186311!275 len:654 { "defined in Definition~\\ref{def:i" … }
│                          ← StrChunk ..0000.186157!1 len:257 [1]
│                            ← StrChunk ..0000.182810!15 len:80 { "\n\n\\begin{proof}" }
│                              ← StrChunk ..0000.182609!1 len:12 { "\n" }
│                                ← StrChunk ..0000.182741!19 len:0 [19]
│                                → StrChunk ..0000.182598!11 len:11 { "\\end{lemma}" }
│                              → StrChunk ..0000.186150!7 len:53 { " $o_r, " }
│                                ← StrChunk ..0000.186067!46 len:46 { "\nGiven any two concurrent insert" … }
│                            → StrChunk ..0000.186162!75 len:177 { "nt state does not depend on the " … }
│                              ← StrChunk ..0000.186113!37 len:41 { " in $H$, we must show that the d" … }
│                                ← StrChunk ..0000.186158!4 len:4 { "o_s$" }
│                              → StrChunk ..0000.186273!36 len:61 { "have the same insertion interval" … }
│                                ← StrChunk ..0000.186238!25 len:25 { "\n\nEither $o_r$ and $o_s$ " }
│                          → StrChunk ..0000.186610!1 len:122 [1]
│                            ← StrChunk ..0000.186626!91 len:120 { "only analyze the case in which t" … }
│                              ← StrChunk ..0000.186623!3 len:11 [3]
│                                ← StrChunk ..0000.186612!11 len:11 { "So we need " }
│                              → StrChunk ..0000.186717!2 len:18 [2]
│                                ← StrChunk ..0000.186721!18 len:18 { "^\\mathrm{after})$." }
│                            → StrChunk ..0000.186263!5 len:2 [5]
│                              ← StrChunk ..0000.186309!1 len:0 [1]
│                                ← StrChunk ..0000.186586!12 len:0 [12]
│                              → StrChunk ..0000.187708!1 len:2 { "\n" }
│                                ← StrChunk ..0000.186237!1 len:1 { "\n" }
│                        → StrChunk ..0000.193566!36 len:611 { ": the list element it refers to " … }
│                          ← StrChunk ..0000.193235!1 len:446 [1]
│                            ← StrChunk ..0000.193082!69 len:130 { "the operation with the greater o" … }
│                              ← StrChunk ..0000.193076!6 len:0 [6]
│                                ← StrChunk ..0000.192980!30 len:0 [30]
│                              → StrChunk ..0000.193237!13 len:61 { "s are applied" }
│                                ← StrChunk ..0000.193187!48 len:48 { ", regardless of the order in whi" … }
│                            → StrChunk ..0000.193411!82 len:316 { "did not yet exist in the common " … }
│                              ← StrChunk ..0000.193250!135 len:183 { "then one or both of the cursors " … }
│                                ← StrChunk ..0000.193010!48 len:48 { ". If $o_r.\\mathit{cur} \\not= o_s" … }
│                              → StrChunk ..0000.193512!46 len:51 { "a cursor that differs from $k^\\m" … }
│                                ← StrChunk ..0000.193499!5 len:5 { "Take " }
│                          → StrChunk ..0000.193705!56 len:129 { ", whose cursor in turn refers to" … }
│                            ← StrChunk ..0000.193762!6 len:29 { " prior" }
│                              ← StrChunk ..0000.193609!13 len:13 { "inserted by a" }
│                                ← StrChunk ..0000.193602!7 len:0 [7]
│                              → StrChunk ..0000.193623!10 len:10 { " operation" }
│                                ← StrChunk ..0000.193622!1 len:0 [1]
│                            → StrChunk ..0000.193668!2 len:44 { ". " }
│                              ← StrChunk ..0000.193633!35 len:11 [35]
│                                ← StrChunk ..0000.193775!11 len:11 { ", and so on" }
│                              → StrChunk ..0000.193901!11 len:31 { " of cursors" }
│                                ← StrChunk ..0000.193786!20 len:20 { "Following this chain" }
│                      → StrChunk ..0000.194459!2 len:716 [2]
│                        ← StrChunk ..0000.194046!1 len:716 { ")" }
│                          ← StrChunk ..0000.193912!4 len:160 { "o $k" }
│                            ← StrChunk ..0000.193818!21 len:63 { "leads to an operation" }
│                              ← StrChunk ..0000.193807!11 len:1 [11]
│                                ← StrChunk ..0000.193806!1 len:1 { " " }
│                              → StrChunk ..0000.193839!22 len:41 { " whose cursor refers t" }
│                                ← StrChunk ..0000.194025!19 len:19 { " $o_\\mathrm{first}$" }
│                            → StrChunk ..0000.193950!1 len:93 { " " }
│                              ← StrChunk ..0000.193949!1 len:17 [1]
│                                ← StrChunk ..0000.193918!17 len:17 { "^\\mathrm{before}$" }
│                              → StrChunk ..0000.193951!74 len:75 { "since an insertion operation alw" … }
│                                ← StrChunk ..0000.194045!1 len:1 { "(" }
│                          → StrChunk ..0000.194047!62 len:555 { "all of the operations in this ch" … }
│                            ← StrChunk ..0000.194110!2 len:13 { "\n\n" }
│                              ← StrChunk ..0000.193935!1 len:1 { "." }
│                                ← StrChunk ..0000.193947!1 len:0 [1]
│                              → StrChunk ..0000.193937!10 len:10 { "Note that " }
│                                ← StrChunk ..0000.193936!1 len:0 [1]
│                            → StrChunk ..0000.194295!164 len:480 { ": if $\\textsc{Insert}_2$ skips o" … }
│                              ← StrChunk ..0000.194167!126 len:169 { " Lamport timestamp greater than " … }
│                                ← StrChunk ..0000.194112!43 len:43 { "$o_\\mathrm{first}$, and so they " … }
│                              → StrChunk ..0000.194463!7 len:147 [7]
│                                ← StrChunk ..0000.194477!147 len:147 { "it; if $\\textsc{Insert}_1$ inser" … }
│                        → StrChunk ..0000.187738!9 len:0 [9]
│                          ← StrChunk ..0000.193504!4 len:0 [4]
│                            ← StrChunk ..0000.193916!1 len:0 [1]
│                              ← StrChunk ..0000.194155!6 len:0 [6]
│                                ← StrChunk ..0000.194293!1 len:0 [1]
│                              → StrChunk ..0000.193558!2 len:0 [2]
│                                ← StrChunk ..0000.193562!2 len:0 [2]
│                            → StrChunk ..0000.192883!7 len:0 [7]
│                              ← StrChunk ..0000.193058!9 len:0 [9]
│                                ← StrChunk ..0000.193385!13 len:0 [13]
│                              → StrChunk ..0000.187747!1 len:0 [1]
│                                ← StrChunk ..0000.187710!28 len:0 [28]
│                          → StrChunk ..0000.188420!1 len:0 [1]
│                            ← StrChunk ..0000.187864!26 len:0 [26]
│                              ← StrChunk ..0000.187805!51 len:0 [51]
│                                ← StrChunk ..0000.187749!50 len:0 [50]
│                              → StrChunk ..0000.187890!4 len:0 [4]
│                                ← StrChunk ..0000.188426!2 len:0 [2]
│                            → StrChunk ..0000.188449!7 len:0 [7]
│                              ← StrChunk ..0000.188437!4 len:0 [4]
│                                ← StrChunk ..0000.187894!8 len:0 [8]
│                              → StrChunk ..0000.187902!19 len:0 [19]
│                                ← StrChunk ..0000.188441!4 len:0 [4]
│                  → StrChunk ..0000.187367!5 len:538 [5]
│                    ← StrChunk ..0000.188644!5 len:524 [5]
│                      ← StrChunk ..0000.188877!1 len:0 [1]
│                        ← StrChunk ..0000.187589!88 len:0 [88]
│                          ← StrChunk ..0000.182838!1 len:0 [1]
│                            ← StrChunk ..0000.187856!4 len:0 [4]
│                              ← StrChunk ..0000.187950!36 len:0 [36]
│                                ← StrChunk ..0000.187921!25 len:0 [25]
│                                → StrChunk ..0000.187946!2 len:0 [2]
│                              → StrChunk ..0000.187709!1 len:0 [1]
│                                ← StrChunk ..0000.187799!3 len:0 [3]
│                            → StrChunk ..0000.187377!34 len:0 [34]
│                              ← StrChunk ..0000.187321!46 len:0 [46]
│                                ← StrChunk ..0000.187272!45 len:0 [45]
│                              → StrChunk ..0000.187481!104 len:0 [104]
│                                ← StrChunk ..0000.187425!52 len:0 [52]
│                          → StrChunk ..0000.188546!11 len:0 [11]
│                            ← StrChunk ..0000.188456!7 len:0 [7]
│                              ← StrChunk ..0000.187987!37 len:0 [37]
│                                ← StrChunk ..0000.187699!7 len:0 [7]
│                              → StrChunk ..0000.188463!37 len:0 [37]
│                                ← StrChunk ..0000.188853!12 len:0 [12]
│                            → StrChunk ..0000.188557!51 len:0 [51]
│                              ← StrChunk ..0000.188511!1 len:0 [1]
│                                ← StrChunk ..0000.188500!5 len:0 [5]
│                              → StrChunk ..0000.188608!24 len:0 [24]
│                                ← StrChunk ..0000.188778!1 len:0 [1]
│                        → StrChunk ..0000.189148!14 len:0 [14]
│                          ← StrChunk ..0000.189145!1 len:0 [1]
│                            ← StrChunk ..0000.188878!50 len:0 [50]
│                              ← StrChunk ..0000.189143!1 len:0 [1]
│                                ← StrChunk ..0000.189121!21 len:0 [21]
│                              → StrChunk ..0000.189060!61 len:0 [61]
│                                ← StrChunk ..0000.188930!78 len:0 [78]
│                            → StrChunk ..0000.189010!25 len:0 [25]
│                              ← StrChunk ..0000.189147!1 len:0 [1]
│                                ← StrChunk ..0000.189008!2 len:0 [2]
│                              → StrChunk ..0000.189056!4 len:0 [4]
│                                ← StrChunk ..0000.189037!17 len:0 [17]
│                          → StrChunk ..0000.188512!17 len:0 [17]
│                            ← StrChunk ..0000.189054!1 len:0 [1]
│                              ← StrChunk ..0000.189162!1 len:0 [1]
│                                ← StrChunk ..0000.189164!2 len:0 [2]
│                              → StrChunk ..0000.188928!1 len:0 [1]
│                                ← StrChunk ..0000.189035!1 len:0 [1]
│                            → StrChunk ..0000.188632!7 len:0 [7]
│                              ← StrChunk ..0000.188024!44 len:0 [44]
│                                ← StrChunk ..0000.188505!3 len:0 [3]
│                              → StrChunk ..0000.188639!1 len:0 [1]
│                                ← StrChunk ..0000.188865!12 len:0 [12]
│                      → StrChunk ..0000.194885!12 len:524 { "ferences of " }
│                        ← StrChunk ..0000.194685!10 len:207 [10]
│                          ← StrChunk ..0000.187677!13 len:76 [13]
│                            ← StrChunk ..0000.188649!1 len:0 [1]
│                              ← StrChunk ..0000.188758!18 len:0 [18]
│                                ← StrChunk ..0000.188651!105 len:0 [105]
│                                → StrChunk ..0000.188756!1 len:0 [1]
│                              → StrChunk ..0000.187706!1 len:0 [1]
│                                ← StrChunk ..0000.188640!2 len:0 [2]
│                            → StrChunk ..0000.194625!28 len:76 { "Therefore, the order of $o_r" }
│                              ← StrChunk ..0000.189166!2 len:2 { "\n\n" }
│                                ← StrChunk ..0000.187696!3 len:0 [3]
│                              → StrChunk ..0000.194784!16 len:46 { "is determined by" }
│                                ← StrChunk ..0000.194655!30 len:30 { "$ and $o_s$ in the final list " }
│                          → StrChunk ..0000.194800!37 len:131 { "into the insertion interval afte" … }
│                            ← StrChunk ..0000.194717!14 len:48 { " of the first " }
│                              ← StrChunk ..0000.194771!1 len:23 { "s" }
│                                ← StrChunk ..0000.194695!22 len:22 { " the Lamport timestamp" }
│                              → StrChunk ..0000.194772!2 len:11 { "s " }
│                                ← StrChunk ..0000.194761!9 len:9 { "insertion" }
│                            → StrChunk ..0000.194856!14 len:46 { ", in the chain" }
│                              ← StrChunk ..0000.194837!16 len:18 { " common ancestor" }
│                                ← StrChunk ..0000.194853!2 len:2 { "ir" }
│                              → StrChunk ..0000.194870!13 len:14 { " of cursor re" }
│                                ← StrChunk ..0000.194897!1 len:1 { "s" }
│                        → StrChunk ..0000.189398!136 len:305 { " o_s$ in $H$, we deduce that the" … }
│                          ← StrChunk ..0000.194624!1 len:96 { " " }
│                            ← StrChunk ..0000.194770!1 len:19 [1]
│                              ← StrChunk ..0000.194883!1 len:19 [1]
│                                ← StrChunk ..0000.194898!19 len:19 { "the two operations." }
│                              → StrChunk ..0000.194653!1 len:0 [1]
│                                ← StrChunk ..0000.194731!15 len:0 [15]
│                            → StrChunk ..0000.189320!18 len:76 { "Since the argument" }
│                              ← StrChunk ..0000.189318!2 len:0 [2]
│                                ← StrChunk ..0000.189168!92 len:0 [92]
│                              → StrChunk ..0000.189338!52 len:58 { " applies to all pairs of concurr" … }
│                                ← StrChunk ..0000.193493!6 len:6 { " above" }
│                          → StrChunk ..0000.189300!17 len:73 { " are commutative." }
│                            ← StrChunk ..0000.189267!18 len:56 { " which shows that " }
│                              ← StrChunk ..0000.189266!1 len:0 [1]
│                                ← StrChunk ..0000.189390!4 len:0 [4]
│                              → StrChunk ..0000.189285!15 len:38 [15]
│                                ← StrChunk ..0000.189549!38 len:38 { "concurrent insertions to the sam" … }
│                            → StrChunk ..0000.187585!2 len:0 [2]
│                              ← StrChunk ..0000.187690!3 len:0 [3]
│                                ← StrChunk ..0000.189260!3 len:0 [3]
│                              → StrChunk ..0000.187411!7 len:0 [7]
│                                ← StrChunk ..0000.187477!2 len:0 [2]
│                    → StrChunk ..0000.167399!45 len:14 [45]
│                      ← StrChunk ..0000.182534!22 len:14 [22]
│                        ← StrChunk ..0000.183307!33 len:12 [33]
│                          ← StrChunk ..0000.183070!78 len:0 [78]
│                            ← StrChunk ..0000.182886!153 len:0 [153]
│                              ← StrChunk ..0000.187317!1 len:0 [1]
│                                ← StrChunk ..0000.187319!1 len:0 [1]
│                                → StrChunk ..0000.182840!34 len:0 [34]
│                              → StrChunk ..0000.183039!29 len:0 [29]
│                                ← StrChunk ..0000.183264!2 len:0 [2]
│                            → StrChunk ..0000.183267!29 len:0 [29]
│                              ← StrChunk ..0000.183148!116 len:0 [116]
│                                ← StrChunk ..0000.183393!4 len:0 [4]
│                              → StrChunk ..0000.183296!8 len:0 [8]
│                                ← StrChunk ..0000.183304!3 len:0 [3]
│                          → StrChunk ..0000.182825!1 len:12 [1]
│                            ← StrChunk ..0000.183068!1 len:1 [1]
│                              ← StrChunk ..0000.183340!4 len:0 [4]
│                                ← StrChunk ..0000.183348!45 len:0 [45]
│                              → StrChunk ..0000.182839!1 len:1 { "\n" }
│                                ← StrChunk ..0000.182874!6 len:0 [6]
│                            → StrChunk ..0000.182523!11 len:11 [11]
│                              ← StrChunk ..0000.182483!3 len:11 [3]
│                                ← StrChunk ..0000.182826!11 len:11 { "\\end{proof}" }
│                              → StrChunk ..0000.182506!17 len:0 [17]
│                                ← StrChunk ..0000.182486!10 len:0 [10]
│                        → StrChunk ..0000.168200!20 len:2 [20]
│                          ← StrChunk ..0000.168007!2 len:2 [2]
│                            ← StrChunk ..0000.167589!18 len:2 [18]
│                              ← StrChunk ..0000.167587!2 len:2 { "\n\n" }
│                                ← StrChunk ..0000.182496!5 len:0 [5]
│                              → StrChunk ..0000.168011!3 len:0 [3]
│                                ← StrChunk ..0000.167993!14 len:0 [14]
│                            → StrChunk ..0000.167653!102 len:0 [102]
│                              ← StrChunk ..0000.167624!12 len:0 [12]
│                                ← StrChunk ..0000.167607!15 len:0 [15]
│                              → StrChunk ..0000.167755!119 len:0 [119]
│                                ← StrChunk ..0000.168160!7 len:0 [7]
│                          → StrChunk ..0000.168198!1 len:0 [1]
│                            ← StrChunk ..0000.168175!7 len:0 [7]
│                              ← StrChunk ..0000.167874!23 len:0 [23]
│                                ← StrChunk ..0000.168225!38 len:0 [38]
│                              → StrChunk ..0000.168281!9 len:0 [9]
│                                ← StrChunk ..0000.167897!70 len:0 [70]
│                            → StrChunk ..0000.167636!17 len:0 [17]
│                              ← StrChunk ..0000.168290!92 len:0 [92]
│                                ← StrChunk ..0000.167967!26 len:0 [26]
│                              → StrChunk ..0000.167340!42 len:0 [42]
│                                ← StrChunk ..0000.167622!1 len:0 [1]
│                      → StrChunk ..0000.168441!1 len:0 [1]
│                        ← StrChunk ..0000.168395!2 len:0 [2]
│                          ← StrChunk ..0000.167177!15 len:0 [15]
│                            ← StrChunk ..0000.167120!57 len:0 [57]
│                              ← StrChunk ..0000.167066!42 len:0 [42]
│                                ← StrChunk ..0000.167382!17 len:0 [17]
│                              → StrChunk ..0000.167108!11 len:0 [11]
│                                ← StrChunk ..0000.167119!1 len:0 [1]
│                            → StrChunk ..0000.167254!30 len:0 [30]
│                              ← StrChunk ..0000.167293!8 len:0 [8]
│                                ← StrChunk ..0000.167204!50 len:0 [50]
│                              → StrChunk ..0000.168382!9 len:0 [9]
│                                ← StrChunk ..0000.168137!15 len:0 [15]
│                          → StrChunk ..0000.168413!9 len:0 [9]
│                            ← StrChunk ..0000.168391!2 len:0 [2]
│                              ← StrChunk ..0000.168397!1 len:0 [1]
│                                ← StrChunk ..0000.168399!14 len:0 [14]
│                              → StrChunk ..0000.168081!8 len:0 [8]
│                                ← StrChunk ..0000.167585!2 len:0 [2]
│                            → StrChunk ..0000.168089!1 len:0 [1]
│                              ← StrChunk ..0000.168422!1 len:0 [1]
│                                ← StrChunk ..0000.168424!7 len:0 [7]
│                              → StrChunk ..0000.168443!16 len:0 [16]
│                                ← StrChunk ..0000.168431!10 len:0 [10]
│                        → StrChunk ..0000.169155!66 len:0 [66]
│                          ← StrChunk ..0000.168550!30 len:0 [30]
│                            ← StrChunk ..0000.168110!26 len:0 [26]
│                              ← StrChunk ..0000.168459!21 len:0 [21]
│                                ← StrChunk ..0000.168090!20 len:0 [20]
│                              → StrChunk ..0000.168503!43 len:0 [43]
│                                ← StrChunk ..0000.168481!16 len:0 [16]
│                            → StrChunk ..0000.169012!44 len:0 [44]
│                              ← StrChunk ..0000.168729!82 len:0 [82]
│                                ← StrChunk ..0000.168582!145 len:0 [145]
│                              → StrChunk ..0000.169107!44 len:0 [44]
│                                ← StrChunk ..0000.169058!41 len:0 [41]
│                          → StrChunk ..0000.171743!7 len:0 [7]
│                            ← StrChunk ..0000.169226!24 len:0 [24]
│                              ← StrChunk ..0000.169221!1 len:0 [1]
│                                ← StrChunk ..0000.169251!1 len:0 [1]
│                              → StrChunk ..0000.171615!123 len:0 [123]
│                                ← StrChunk ..0000.169252!369 len:0 [369]
│                            → StrChunk ..0000.169224!1 len:0 [1]
│                              ← StrChunk ..0000.171750!67 len:0 [67]
│                                ← StrChunk ..0000.171738!5 len:0 [5]
│                              → StrChunk ..0000.169151!2 len:0 [2]
│                                ← StrChunk ..0000.169222!1 len:0 [1]
│            → StrChunk ..0000.15547!1 len:6991 [1]
│              ← StrChunk ..0000.3482!14 len:6953 [14]
│                ← StrChunk ..0000.210468!1 len:6953 { " " }
│                  ← StrChunk ..0000.205764!4 len:3648 [4]
│                    ← StrChunk ..0000.203475!36 len:1535 { " is applied: starting at the cur" … }
│                      ← StrChunk ..0000.204485!10 len:451 { " operation" }
│                        ← StrChunk ..0000.164195!1 len:68 [1]
│                          ← StrChunk ..0000.167301!18 len:0 [18]
│                            ← StrChunk ..0000.168546!2 len:0 [2]
│                              ← StrChunk ..0000.168727!1 len:0 [1]
│                                ← StrChunk ..0000.169056!1 len:0 [1]
│                                → StrChunk ..0000.168580!1 len:0 [1]
│                              → StrChunk ..0000.168136!1 len:0 [1]
│                                ← StrChunk ..0000.168497!3 len:0 [3]
│                            → StrChunk ..0000.167192!12 len:0 [12]
│                              ← StrChunk ..0000.167319!1 len:0 [1]
│                                ← StrChunk ..0000.167321!19 len:0 [19]
│                              → StrChunk ..0000.164400!1 len:0 [1]
│                                ← StrChunk ..0000.164871!2 len:0 [2]
│                          → StrChunk ..0000.204456!11 len:68 [11]
│                            ← StrChunk ..0000.176106!7 len:44 { "\\begin{" }
│                              ← StrChunk ..0000.176105!1 len:0 [1]
│                                ← StrChunk ..0000.162737!1 len:0 [1]
│                              → StrChunk ..0000.204452!4 len:37 { "In a" }
│                                ← StrChunk ..0000.176117!33 len:33 { "lemma}\\label{lem:delete-commute}" … }
│                            → StrChunk ..0000.204482!1 len:24 { "d" }
│                              ← StrChunk ..0000.204483!2 len:16 { "a " }
│                                ← StrChunk ..0000.204467!14 len:14 { " history $H$, " }
│                              → StrChunk ..0000.176167!7 len:7 { "eletion" }
│                                ← StrChunk ..0000.176166!1 len:0 [1]
│                        → StrChunk ..0000.204437!2 len:373 { "$ " }
│                          ← StrChunk ..0000.204440!5 len:113 [5]
│                            ← StrChunk ..0000.176211!35 len:112 { " concurrent operations.\n\\end{lem" … }
│                              ← StrChunk ..0000.176205!6 len:31 [6]
│                                ← StrChunk ..0000.176174!31 len:31 { " is commutative with respect to" }
│                              → StrChunk ..0000.204405!31 len:46 { "\nGiven a deletion operation $o_" }
│                                ← StrChunk ..0000.203366!15 len:15 { "\n\n\\begin{proof}" }
│                            → StrChunk ..0000.204448!1 len:1 { "d" }
│                              ← StrChunk ..0000.204445!3 len:0 [3]
│                                ← StrChunk ..0000.204549!2 len:0 [2]
│                              → StrChunk ..0000.204436!1 len:0 [1]
│                                ← StrChunk ..0000.204449!3 len:0 [3]
│                          → StrChunk ..0000.203439!36 len:258 { "les} define how a deletion opera" … }
│                            ← StrChunk ..0000.204546!1 len:216 { "\n" }
│                              ← StrChunk ..0000.204599!137 len:177 { ", we must show that the document" … }
│                                ← StrChunk ..0000.204506!40 len:40 { "and any other concurrent operati" … }
│                              → StrChunk ..0000.203430!3 len:38 { "-ru" }
│                                ← StrChunk ..0000.203393!35 len:35 { "\nThe rules in Figure~\\ref{fig:cl" … }
│                            → StrChunk ..0000.203620!1 len:6 { "d" }
│                              ← StrChunk ..0000.203612!8 len:4 [8]
│                                ← StrChunk ..0000.203608!4 len:4 { " $o_" }
│                              → StrChunk ..0000.203624!1 len:1 { "$" }
│                                ← StrChunk ..0000.203621!3 len:0 [3]
│                      → StrChunk ..0000.204994!93 len:1048 { "mapping from operation ID to val" … }
│                        ← StrChunk ..0000.203808!78 len:362 { ", and updating all registers to " … }
│                          ← StrChunk ..0000.203648!3 len:160 [3]
│                            ← StrChunk ..0000.203625!14 len:69 { ", removing $o_" }
│                              ← StrChunk ..0000.203672!3 len:54 { "sub" }
│                                ← StrChunk ..0000.203557!47 len:47 { "in the operation, they recursive" … }
│                                → StrChunk ..0000.203604!4 len:4 { "tree" }
│                              → StrChunk ..0000.203647!1 len:1 { "d" }
│                                ← StrChunk ..0000.203639!8 len:0 [8]
│                            → StrChunk ..0000.203671!1 len:91 { " " }
│                              ← StrChunk ..0000.203683!39 len:59 { " the presence set $\\mathsf{pres}" … }
│                                ← StrChunk ..0000.203651!20 len:20 { ".\\mathit{deps}$ from" }
│                              → StrChunk ..0000.203722!23 len:31 { "ch nodes in the subtree" }
│                                ← StrChunk ..0000.203675!8 len:8 { "all bran" }
│                          → StrChunk ..0000.203898!16 len:124 { ".\\mathit{deps}$." }
│                            ← StrChunk ..0000.203891!3 len:1 [3]
│                              ← StrChunk ..0000.204553!2 len:0 [2]
│                                ← StrChunk ..0000.203886!5 len:0 [5]
│                              → StrChunk ..0000.203895!3 len:1 [3]
│                                ← StrChunk ..0000.203894!1 len:1 { "d" }
│                            → StrChunk ..0000.204835!69 len:107 { "If $o_c$ is an assignment or ins" … }
│                              ← StrChunk ..0000.204740!95 len:2 [95]
│                                ← StrChunk ..0000.204738!2 len:2 { "\n\n" }
│                              → StrChunk ..0000.204976!4 len:36 { "the " }
│                                ← StrChunk ..0000.204938!32 len:32 { " rule adds $o_c.\\mathit{id}$ to " }
│                        → StrChunk ..0000.205492!1 len:593 { "$" }
│                          ← StrChunk ..0000.205223!13 len:237 { "y the cursor." }
│                            ← StrChunk ..0000.204904!1 len:164 [1]
│                              ← StrChunk ..0000.204970!3 len:0 [3]
│                                ← StrChunk ..0000.204980!7 len:0 [7]
│                              → StrChunk ..0000.205087!132 len:164 { "Empty-List} rules add $o_c.\\math" … }
│                                ← StrChunk ..0000.204905!32 len:32 { " \\textsc{Empty-Map} and \\textsc{" }
│                            → StrChunk ..0000.205528!1 len:60 [1]
│                              ← StrChunk ..0000.205530!38 len:42 { " $o_d.\\mathit{cur}$ is not a pre" … }
│                                ← StrChunk ..0000.205483!4 len:4 { "\n\nIf" }
│                              → StrChunk ..0000.205495!13 len:18 { ".\\mathit{cur}" }
│                                ← StrChunk ..0000.205487!5 len:5 { " $o_c" }
│                          → StrChunk ..0000.206241!2 len:355 [2]
│                            ← StrChunk ..0000.206168!73 len:285 { " Any state changes by \\textsc{De" … }
│                              ← StrChunk ..0000.205598!91 len:97 { "operations affect disjoint subtr" … }
│                                ← StrChunk ..0000.205590!6 len:6 { ", the " }
│                              → StrChunk ..0000.206388!12 len:115 { "Now consider" }
│                                ← StrChunk ..0000.206245!103 len:103 { "shared part of the cursor path a" … }
│                            → StrChunk ..0000.205731!33 len:70 { " the case where $o_d.\\mathit{cur" … }
│                              ← StrChunk ..0000.205718!13 len:0 [13]
│                                ← StrChunk ..0000.205689!27 len:0 [27]
│                              → StrChunk ..0000.206402!1 len:37 { " " }
│                                ← StrChunk ..0000.205772!36 len:36 { "$ is a prefix of $o_c.\\mathit{cu" … }
│                    → StrChunk ..0000.206763!6 len:2113 [6]
│                      ← StrChunk ..0000.206415!13 len:822 { "$ is applied " }
│                        ← StrChunk ..0000.205857!19 len:359 { "evaluating $o_d$ wi" }
│                          ← StrChunk ..0000.205427!3 len:182 { " Th" }
│                            ← StrChunk ..0000.205508!20 len:94 [20]
│                              ← StrChunk ..0000.205596!1 len:0 [1]
│                                ← StrChunk ..0000.205716!1 len:0 [1]
│                                → StrChunk ..0000.205493!2 len:0 [2]
│                              → StrChunk ..0000.205238!94 len:94 { "Since $o_c$ is concurrent with $" … }
│                                ← StrChunk ..0000.205236!2 len:0 [2]
│                            → StrChunk ..0000.205432!38 len:85 { ", if $o_c$ is applied before $o_" … }
│                              ← StrChunk ..0000.205430!2 len:7 [2]
│                                ← StrChunk ..0000.206092!7 len:7 { "erefore" }
│                              → StrChunk ..0000.205808!29 len:40 { ", the \\textsc{Clear-*} rules " }
│                                ← StrChunk ..0000.205472!11 len:11 { "the history" }
│                          → StrChunk ..0000.205950!5 len:158 { "urbed" }
│                            ← StrChunk ..0000.205878!44 len:74 { " leave any occurrences of $o_c.\\" … }
│                              ← StrChunk ..0000.205876!2 len:2 [2]
│                                ← StrChunk ..0000.205994!2 len:2 { "ll" }
│                              → StrChunk ..0000.205922!6 len:28 { "undist" }
│                                ← StrChunk ..0000.205928!22 len:22 { "in the document state " }
│                            → StrChunk ..0000.206406!8 len:79 { "\n\nIf $o_" }
│                              ← StrChunk ..0000.205955!1 len:70 { "." }
│                                ← StrChunk ..0000.206099!69 len:69 { ", while removing any occurrences" … }
│                              → StrChunk ..0000.206414!1 len:1 [1]
│                                ← StrChunk ..0000.206442!1 len:1 { "d" }
│                        → StrChunk ..0000.206692!55 len:450 { "y as if $o_d$ had not been appli" … }
│                          ← StrChunk ..0000.206438!3 len:156 { "$, " }
│                            ← StrChunk ..0000.206433!4 len:11 { " $o_" }
│                              ← StrChunk ..0000.206428!5 len:6 [5]
│                                ← StrChunk ..0000.206448!6 len:6 { "before" }
│                              → StrChunk ..0000.206437!1 len:1 [1]
│                                ← StrChunk ..0000.206455!1 len:1 { "c" }
│                            → StrChunk ..0000.206599!11 len:142 { "r. Moreover" }
│                              ← StrChunk ..0000.206544!27 len:101 { "applied in the reverse orde" }
│                                ← StrChunk ..0000.206456!74 len:74 { "the effect on presence sets and " … }
│                              → StrChunk ..0000.206668!22 len:30 { "applies in the same wa" }
│                                ← StrChunk ..0000.206612!8 len:8 { ", $o_c$ " }
│                          → StrChunk ..0000.206865!5 len:239 [5]
│                            ← StrChunk ..0000.206838!12 len:88 [12]
│                              ← StrChunk ..0000.207043!7 len:70 { "without" }
│                                ← StrChunk ..0000.206775!63 len:63 { "applying a deletion only modifie" … }
│                              → StrChunk ..0000.207051!3 len:18 { "ing" }
│                                ← StrChunk ..0000.206850!15 len:15 { " actually remov" }
│                            → StrChunk ..0000.206907!124 len:151 { ", and because the rules for appl" … }
│                              ← StrChunk ..0000.206898!8 len:26 { "elements" }
│                                ← StrChunk ..0000.206870!18 len:18 { " map keys or list " }
│                              → StrChunk ..0000.206888!5 len:1 [5]
│                                ← StrChunk ..0000.206906!1 len:1 { "." }
│                      → StrChunk ..0000.203381!12 len:1291 { "\n\\end{proof}" }
│                        ← StrChunk ..0000.205983!9 len:120 { "applying " }
│                          ← StrChunk ..0000.206530!7 len:22 [7]
│                            ← StrChunk ..0000.206620!24 len:0 [24]
│                              ← StrChunk ..0000.206747!6 len:0 [6]
│                                ← StrChunk ..0000.206759!2 len:0 [2]
│                                → StrChunk ..0000.206690!1 len:0 [1]
│                              → StrChunk ..0000.206571!14 len:0 [14]
│                                ← StrChunk ..0000.206610!1 len:0 [1]
│                            → StrChunk ..0000.207065!1 len:22 { "t" }
│                              ← StrChunk ..0000.207058!6 len:8 { "Thus, " }
│                                ← StrChunk ..0000.206404!2 len:2 { "\n\n" }
│                              → StrChunk ..0000.205958!13 len:13 { "he effect of " }
│                                ← StrChunk ..0000.205956!2 len:0 [2]
│                          → StrChunk ..0000.205470!1 len:89 [1]
│                            ← StrChunk ..0000.206022!68 len:89 { " the same as applying $o_d$ befo" … }
│                              ← StrChunk ..0000.206017!5 len:21 [5]
│                                ← StrChunk ..0000.205996!21 len:21 { "$o_c$ before $o_d$ is" }
│                              → StrChunk ..0000.205837!10 len:0 [10]
│                                ← StrChunk ..0000.205971!6 len:0 [6]
│                            → StrChunk ..0000.203511!23 len:0 [23]
│                              ← StrChunk ..0000.204736!1 len:0 [1]
│                                ← StrChunk ..0000.205219!2 len:0 [2]
│                              → StrChunk ..0000.203428!1 len:0 [1]
│                                ← StrChunk ..0000.203433!3 len:0 [3]
│                        → StrChunk ..0000.3226!1 len:1159 { "\n" }
│                          ← StrChunk ..0000.209414!10 len:137 { " operation" }
│                            ← StrChunk ..0000.209413!1 len:73 { "a" }
│                              ← StrChunk ..0000.209391!21 len:63 { "In a history $H$, an " }
│                                ← StrChunk ..0000.176246!42 len:42 { "\n\n\\begin{lemma}\\label{lem:assign" … }
│                              → StrChunk ..0000.176289!9 len:9 { "ssignment" }
│                                ← StrChunk ..0000.176288!1 len:0 [1]
│                            → StrChunk ..0000.176336!22 len:54 { "concurrent operations." }
│                              ← StrChunk ..0000.176330!6 len:32 [6]
│                                ← StrChunk ..0000.176298!32 len:32 { " is commutative with respect to " }
│                              → StrChunk ..0000.176113!2 len:0 [2]
│                                ← StrChunk ..0000.176150!8 len:0 [8]
│                          → StrChunk ..0000.209439!1 len:1021 { "\n" }
│                            ← StrChunk ..0000.209451!175 len:657 { "\nGiven an assignment $o_a$ and a" … }
│                              ← StrChunk ..0000.209424!15 len:26 { "\n\n\\begin{proof}" }
│                                ← StrChunk ..0000.176370!11 len:11 { "\\end{lemma}" }
│                              → StrChunk ..0000.209626!1 len:456 [1]
│                                ← StrChunk ..0000.209628!456 len:456 { "$o_a$ and $o_c$ were applied.\n\nT" … }
│                            → StrChunk ..0000.210276!171 len:363 { "on the path from the root of the" … }
│                              ← StrChunk ..0000.210124!148 len:149 { "The rules also add $o_a.\\mathit{" … }
│                                ← StrChunk ..0000.210085!1 len:1 { "\n" }
│                              → StrChunk ..0000.210539!24 len:43 { " value assigned by $o_a$" }
│                                ← StrChunk ..0000.210449!19 len:19 { ", in the case where" }
│                  → StrChunk ..0000.213160!1 len:3304 [1]
│                    ← StrChunk ..0000.212032!1 len:1534 { "." }
│                      ← StrChunk ..0000.211085!11 len:869 { "operations " }
│                        ← StrChunk ..0000.211634!1 len:290 [1]
│                          ← StrChunk ..0000.210665!55 len:191 { "$\\mathit{child}[\\,\\mathit{id} \\m" … }
│                            ← StrChunk ..0000.210721!18 len:135 { " by the expression" }
│                              ← StrChunk ..0000.210488!51 len:116 { "is a primitive and the \\textsc{A" … }
│                                ← StrChunk ..0000.210469!19 len:0 [19]
│                                → StrChunk ..0000.210582!65 len:65 { ", the mapping from operation ID " … }
│                              → StrChunk ..0000.210662!1 len:1 { " " }
│                                ← StrChunk ..0000.210661!1 len:0 [1]
│                            → StrChunk ..0000.210740!102 len:1 [102]
│                              ← StrChunk ..0000.210739!1 len:1 { " " }
│                                ← StrChunk ..0000.210940!1 len:0 [1]
│                              → StrChunk ..0000.210842!11 len:0 [11]
│                                ← StrChunk ..0000.211633!1 len:0 [1]
│                          → StrChunk ..0000.211005!6 len:99 [6]
│                            ← StrChunk ..0000.210895!29 len:0 [29]
│                              ← StrChunk ..0000.211001!4 len:0 [4]
│                                ← StrChunk ..0000.210853!42 len:0 [42]
│                              → StrChunk ..0000.210942!53 len:0 [53]
│                                ← StrChunk ..0000.210926!13 len:0 [13]
│                            → StrChunk ..0000.211013!2 len:99 { "If" }
│                              ← StrChunk ..0000.211011!2 len:0 [2]
│                                ← StrChunk ..0000.210939!1 len:0 [1]
│                              → StrChunk ..0000.211015!54 len:97 { " $o_a.\\mathit{cursor} \\not= o_c." … }
│                                ← StrChunk ..0000.211105!43 len:43 { " $o_c$ is not an assignment oper" … }
│                        → StrChunk ..0000.211365!51 len:568 { "$\\mathit{child}[\\,\\mathit{id}_1 " … }
│                          ← StrChunk ..0000.211661!5 len:163 [5]
│                            ← StrChunk ..0000.211204!1 len:132 [1]
│                              ← StrChunk ..0000.212324!2 len:49 { "\n\n" }
│                                ← StrChunk ..0000.211157!47 len:47 { "are independent and thus trivial" … }
│                              → StrChunk ..0000.211644!17 len:83 { "commutativity of " }
│                                ← StrChunk ..0000.211205!66 len:66 { "If $o_a$ and $o_c$ are assignmen" … }
│                            → StrChunk ..0000.211666!1 len:31 [1]
│                              ← StrChunk ..0000.211675!30 len:30 { "updates to a partial function:" }
│                                ← StrChunk ..0000.211668!7 len:0 [7]
│                              → StrChunk ..0000.211280!1 len:1 { " " }
│                                ← StrChunk ..0000.211271!9 len:0 [9]
│                          → StrChunk ..0000.211527!1 len:354 { "[" }
│                            ← StrChunk ..0000.211424!1 len:111 { "[" }
│                              ← StrChunk ..0000.211528!2 len:8 { "\\," }
│                                ← StrChunk ..0000.211418!6 len:6 { "}_1\\,]" }
│                              → StrChunk ..0000.211530!2 len:102 { "\\," }
│                                ← StrChunk ..0000.211427!100 len:100 { "\\,\\mathit{id}_2 \\mapsto \\mathit{" … }
│                            → StrChunk ..0000.211626!7 len:242 { "id}_2$." }
│                              ← StrChunk ..0000.211572!48 len:86 { "\\,]$ provided that $\\mathit{id}_" … }
│                                ← StrChunk ..0000.211532!38 len:38 { "\\,\\mathit{id}_1 \\mapsto \\mathit{" … }
│                              → StrChunk ..0000.212033!31 len:149 { ", and their order is immaterial" }
│                                ← StrChunk ..0000.211914!118 len:118 { " Since operation IDs (Lamport ti" … }
│                      → StrChunk ..0000.210447!1 len:664 [1]
│                        ← StrChunk ..0000.211769!1 len:183 [1]
│                          ← StrChunk ..0000.211824!3 len:183 [3]
│                            ← StrChunk ..0000.211858!22 len:125 { " on the document state" }
│                              ← StrChunk ..0000.211729!40 len:71 { "all parts of the process of appl" … }
│                                ← StrChunk ..0000.211705!8 len:8 { "\n\nThus, " }
│                                → StrChunk ..0000.211771!23 len:23 { "a$ have the same effect" }
│                              → StrChunk ..0000.211883!2 len:32 { "is" }
│                                ← StrChunk ..0000.211794!30 len:30 { ", regardless of whether $o_c$ " }
│                            → StrChunk ..0000.211898!16 len:58 { "erations commute" }
│                              ← StrChunk ..0000.211885!11 len:41 { ", so the op" }
│                                ← StrChunk ..0000.211827!30 len:30 { " applied before or after $o_a$" }
│                              → StrChunk ..0000.211857!1 len:1 { "." }
│                                ← StrChunk ..0000.211896!1 len:0 [1]
│                          → StrChunk ..0000.211281!42 len:0 [42]
│                            ← StrChunk ..0000.211570!1 len:0 [1]
│                              ← StrChunk ..0000.211620!3 len:0 [3]
│                                ← StrChunk ..0000.211713!8 len:0 [8]
│                              → StrChunk ..0000.211416!1 len:0 [1]
│                                ← StrChunk ..0000.211425!1 len:0 [1]
│                            → StrChunk ..0000.210924!1 len:0 [1]
│                              ← StrChunk ..0000.211069!8 len:0 [8]
│                                ← StrChunk ..0000.211096!9 len:0 [9]
│                              → StrChunk ..0000.210647!7 len:0 [7]
│                                ← StrChunk ..0000.210663!1 len:0 [1]
│                        → StrChunk ..0000.213162!41 len:481 { "_{n+1}.\\mathit{deps}$ have been " … }
│                          ← StrChunk ..0000.212915!25 len:227 { "Given an operation histor" }
│                            ← StrChunk ..0000.209440!11 len:50 { "\\end{proof}" }
│                              ← StrChunk ..0000.210084!1 len:1 { "\n" }
│                                ← StrChunk ..0000.210272!2 len:0 [2]
│                              → StrChunk ..0000.212877!1 len:38 { "\n" }
│                                ← StrChunk ..0000.212338!37 len:37 { "\n\n\\begin{lemma}\\label{lem:op-com" … }
│                            → StrChunk ..0000.212983!18 len:152 { ", a new operation " }
│                              ← StrChunk ..0000.213001!23 len:60 { " from a valid execution" }
│                                ← StrChunk ..0000.212946!37 len:37 { "y $H=\\langle o_1, \\dots, o_n \\ra" … }
│                              → StrChunk ..0000.213151!9 len:74 { " after $o" }
│                                ← StrChunk ..0000.213024!65 len:65 { "$o_{n+1}$ from that execution ca" … }
│                          → StrChunk ..0000.213315!5 len:213 { "$H'$ " }
│                            ← StrChunk ..0000.213205!1 len:18 [1]
│                              ← StrChunk ..0000.213251!1 len:5 { "a" }
│                                ← StrChunk ..0000.213246!4 len:4 { "For " }
│                              → StrChunk ..0000.213230!11 len:13 { " histories " }
│                                ← StrChunk ..0000.213206!2 len:2 { "ll" }
│                            → StrChunk ..0000.213320!122 len:190 { "applying the operations in $H'$ " … }
│                              ← StrChunk ..0000.213252!63 len:68 { "can be constructed this way, the" … }
│                                ← StrChunk ..0000.213241!5 len:5 { "that " }
│                              → StrChunk ..0000.213203!1 len:0 [1]
│                                ← StrChunk ..0000.213208!11 len:0 [11]
│                    → StrChunk ..0000.215316!2 len:1770 { ". " }
│                      ← StrChunk ..0000.214067!173 len:1429 { " effect on the final document st" … }
│                        ← StrChunk ..0000.213442!1 len:579 [1]
│                          ← StrChunk ..0000.213781!7 len:274 { ", and w" }
│                            ← StrChunk ..0000.212878!26 len:203 { "\\end{lemma}\n\n\\begin{proof}" }
│                              ← StrChunk ..0000.212940!3 len:1 [3]
│                                ← StrChunk ..0000.213089!31 len:0 [31]
│                                → StrChunk ..0000.212914!1 len:1 { "\n" }
│                              → StrChunk ..0000.213706!71 len:176 { " The suffix contains only operat" … }
│                                ← StrChunk ..0000.213535!105 len:105 { "\n$H$ can be split into a prefix " … }
│                            → StrChunk ..0000.213642!62 len:64 { "e allow $o_{n+1}$ to be inserted" … }
│                              ← StrChunk ..0000.213640!2 len:0 [2]
│                                ← StrChunk ..0000.213777!1 len:0 [1]
│                              → StrChunk ..0000.213704!2 len:2 [2]
│                                ← StrChunk ..0000.213790!2 len:2 { ". " }
│                          → StrChunk ..0000.213443!1 len:305 { "\n" }
│                            ← StrChunk ..0000.213446!49 len:86 { " prove the lemma case-by-case, d" … }
│                              ← StrChunk ..0000.213793!5 len:7 { " then" }
│                                ← StrChunk ..0000.213444!2 len:2 { "We" }
│                              → StrChunk ..0000.213495!5 len:30 [5]
│                                ← StrChunk ..0000.213505!30 len:30 { "ype of mutation in $o_{n+1}$. " }
│                            → StrChunk ..0000.213810!64 len:218 { "{n+1}$ is a deletion, by Lemma~\\" … }
│                              ← StrChunk ..0000.213800!6 len:7 { "If $o_" }
│                                ← StrChunk ..0000.213798!1 len:1 { "\n" }
│                              → StrChunk ..0000.213971!94 len:147 { "o_{n+1}$ can be inserted at any " … }
│                                ← StrChunk ..0000.213916!53 len:53 { "mmutative with all operations in" … }
│                        → StrChunk ..0000.214497!3 len:677 [3]
│                          ← StrChunk ..0000.214821!1 len:597 [1]
│                            ← StrChunk ..0000.214503!63 len:437 { "delete-commute} or Lemma~\\ref{le" … }
│                              ← StrChunk ..0000.214341!156 len:245 { "of $o_{n+1}$ being inserted befo" … }
│                                ← StrChunk ..0000.214242!89 len:89 { "{n+1}$ is an insertion, let $o_c" … }
│                              → StrChunk ..0000.214823!75 len:129 { "1}$, then by Lemma~\\ref{lem:inse" … }
│                                ← StrChunk ..0000.214767!54 len:54 { " If $o_c$ is an insertion into t" … }
│                            → StrChunk ..0000.214757!4 len:160 [4]
│                              ← StrChunk ..0000.214765!1 len:63 [1]
│                                ← StrChunk ..0000.214566!63 len:63 { " If $o_c$ is an insertion into a" … }
│                              → StrChunk ..0000.214726!31 len:97 [31]
│                                ← StrChunk ..0000.214629!97 len:97 { ", its effect is independent from" … }
│                          → StrChunk ..0000.213806!2 len:80 [2]
│                            ← StrChunk ..0000.214065!1 len:0 [1]
│                              ← StrChunk ..0000.214240!1 len:0 [1]
│                                ← StrChunk ..0000.214331!5 len:0 [5]
│                              → StrChunk ..0000.213874!21 len:0 [21]
│                                ← StrChunk ..0000.213969!1 len:0 [1]
│                            → StrChunk ..0000.215074!5 len:80 { "Thus," }
│                              ← StrChunk ..0000.212387!1 len:2 { "\n" }
│                                ← StrChunk ..0000.213799!1 len:1 { "\n" }
│                              → StrChunk ..0000.215100!66 len:73 { "1}$ is commutative with respect " … }
│                                ← StrChunk ..0000.215089!7 len:7 { " $o_{n+" }
│                      → StrChunk ..0000.176381!1 len:339 [1]
│                        ← StrChunk ..0000.215365!1 len:339 [1]
│                          ← StrChunk ..0000.215309!1 len:199 { "$" }
│                            ← StrChunk ..0000.215173!8 len:11 { "herefore" }
│                              ← StrChunk ..0000.215166!7 len:1 [7]
│                                ← StrChunk ..0000.215319!1 len:1 { "T" }
│                              → StrChunk ..0000.215181!1 len:2 { " " }
│                                ← StrChunk ..0000.215320!1 len:1 { "," }
│                            → StrChunk ..0000.215345!20 len:187 { " at any point after " }
│                              ← StrChunk ..0000.215400!9 len:33 { " into $H$" }
│                                ← StrChunk ..0000.215321!24 len:24 { "o_{n+1}$ can be inserted" }
│                              → StrChunk ..0000.215409!101 len:134 { "effect on the final document sta" … }
│                                ← StrChunk ..0000.215367!33 len:33 { "its causal dependencies, and the" … }
│                          → StrChunk ..0000.212375!6 len:140 { "\n\\end{" }
│                            ← StrChunk ..0000.212388!81 len:0 [81]
│                              ← StrChunk ..0000.215079!5 len:0 [5]
│                                ← StrChunk ..0000.215096!2 len:0 [2]
│                              → StrChunk ..0000.212469!1 len:0 [1]
│                                ← StrChunk ..0000.212471!64 len:0 [64]
│                            → StrChunk ..0000.212386!1 len:134 { "}" }
│                              ← StrChunk ..0000.212381!5 len:5 [5]
│                                ← StrChunk ..0000.212909!5 len:5 { "proof" }
│                              → StrChunk ..0000.209286!1 len:128 { "\n" }
│                                ← StrChunk ..0000.215182!127 len:127 { "\n\nThis completes the induction s" … }
│                        → StrChunk ..0000.3382!2 len:0 [2]
│                          ← StrChunk ..0000.3828!5 len:0 [5]
│                            ← StrChunk ..0000.3470!1 len:0 [1]
│                              ← StrChunk ..0000.3272!56 len:0 [56]
│                                ← StrChunk ..0000.3235!33 len:0 [33]
│                              → StrChunk ..0000.3661!7 len:0 [7]
│                                ← StrChunk ..0000.3328!21 len:0 [21]
│                            → StrChunk ..0000.3656!1 len:0 [1]
│                              ← StrChunk ..0000.3639!2 len:0 [2]
│                                ← StrChunk ..0000.3668!11 len:0 [11]
│                              → StrChunk ..0000.3365!2 len:0 [2]
│                                ← StrChunk ..0000.3349!12 len:0 [12]
│                          → StrChunk ..0000.3479!1 len:0 [1]
│                            ← StrChunk ..0000.3964!1 len:0 [1]
│                              ← StrChunk ..0000.3384!8 len:0 [8]
│                                ← StrChunk ..0000.3478!1 len:0 [1]
│                              → StrChunk ..0000.3441!22 len:0 [22]
│                                ← StrChunk ..0000.3392!47 len:0 [47]
│                            → StrChunk ..0000.3969!1 len:0 [1]
│                              ← StrChunk ..0000.3480!2 len:0 [2]
│                                ← StrChunk ..0000.3962!1 len:0 [1]
│                              → StrChunk ..0000.3968!1 len:0 [1]
│                                ← StrChunk ..0000.3965!1 len:0 [1]
│                → StrChunk ..0000.9467!39 len:0 [39]
│                  ← StrChunk ..0000.4762!1 len:0 [1]
│                    ← StrChunk ..0000.3947!1 len:0 [1]
│                      ← StrChunk ..0000.3701!4 len:0 [4]
│                        ← StrChunk ..0000.3526!5 len:0 [5]
│                          ← StrChunk ..0000.3511!3 len:0 [3]
│                            ← StrChunk ..0000.3509!2 len:0 [2]
│                              ← StrChunk ..0000.3955!6 len:0 [6]
│                                ← StrChunk ..0000.3508!1 len:0 [1]
│                                → StrChunk ..0000.3535!53 len:0 [53]
│                              → StrChunk ..0000.3808!5 len:0 [5]
│                                ← StrChunk ..0000.3805!2 len:0 [2]
│                            → StrChunk ..0000.7541!5 len:0 [5]
│                              ← StrChunk ..0000.3514!4 len:0 [4]
│                                ← StrChunk ..0000.3961!1 len:0 [1]
│                              → StrChunk ..0000.3855!1 len:0 [1]
│                                ← StrChunk ..0000.3518!8 len:0 [8]
│                          → StrChunk ..0000.3938!2 len:0 [2]
│                            ← StrChunk ..0000.3847!1 len:0 [1]
│                              ← StrChunk ..0000.3849!1 len:0 [1]
│                                ← StrChunk ..0000.3846!1 len:0 [1]
│                              → StrChunk ..0000.3856!1 len:0 [1]
│                                ← StrChunk ..0000.3588!37 len:0 [37]
│                            → StrChunk ..0000.3863!1 len:0 [1]
│                              ← StrChunk ..0000.3940!2 len:0 [2]
│                                ← StrChunk ..0000.3857!6 len:0 [6]
│                              → StrChunk ..0000.3864!4 len:0 [4]
│                                ← StrChunk ..0000.3872!15 len:0 [15]
│                        → StrChunk ..0000.3778!3 len:0 [3]
│                          ← StrChunk ..0000.3966!2 len:0 [2]
│                            ← StrChunk ..0000.3798!2 len:0 [2]
│                              ← StrChunk ..0000.3705!2 len:0 [2]
│                                ← StrChunk ..0000.3949!6 len:0 [6]
│                              → StrChunk ..0000.3721!29 len:0 [29]
│                                ← StrChunk ..0000.3707!12 len:0 [12]
│                            → StrChunk ..0000.3795!1 len:0 [1]
│                              ← StrChunk ..0000.3796!2 len:0 [2]
│                                ← StrChunk ..0000.3750!27 len:0 [27]
│                              → StrChunk ..0000.3814!6 len:0 [6]
│                                ← StrChunk ..0000.3777!1 len:0 [1]
│                          → StrChunk ..0000.3793!2 len:0 [2]
│                            ← StrChunk ..0000.7536!5 len:0 [5]
│                              ← StrChunk ..0000.3781!4 len:0 [4]
│                                ← StrChunk ..0000.3948!1 len:0 [1]
│                              → StrChunk ..0000.3854!1 len:0 [1]
│                                ← StrChunk ..0000.3785!8 len:0 [8]
│                            → StrChunk ..0000.3942!2 len:0 [2]
│                              ← StrChunk ..0000.3887!29 len:0 [29]
│                                ← StrChunk ..0000.3852!2 len:0 [2]
│                              → StrChunk ..0000.3944!1 len:0 [1]
│                                ← StrChunk ..0000.3916!6 len:0 [6]
│                      → StrChunk ..0000.4431!16 len:0 [16]
│                        ← StrChunk ..0000.7498!27 len:0 [27]
│                          ← StrChunk ..0000.3690!10 len:0 [10]
│                            ← StrChunk ..0000.3496!12 len:0 [12]
│                              ← StrChunk ..0000.3922!16 len:0 [16]
│                                ← StrChunk ..0000.3945!1 len:0 [1]
│                                → StrChunk ..0000.3719!1 len:0 [1]
│                              → StrChunk ..0000.3841!5 len:0 [5]
│                                ← StrChunk ..0000.3684!6 len:0 [6]
│                            → StrChunk ..0000.7448!32 len:0 [32]
│                              ← StrChunk ..0000.8189!14 len:0 [14]
│                                ← StrChunk ..0000.7378!70 len:0 [70]
│                              → StrChunk ..0000.16496!29 len:0 [29]
│                                ← StrChunk ..0000.7484!14 len:0 [14]
│                          → StrChunk ..0000.3972!34 len:0 [34]
│                            ← StrChunk ..0000.7480!2 len:0 [2]
│                              ← StrChunk ..0000.7525!1 len:0 [1]
│                                ← StrChunk ..0000.7527!9 len:0 [9]
│                              → StrChunk ..0000.4201!1 len:0 [1]
│                                ← StrChunk ..0000.3970!2 len:0 [2]
│                            → StrChunk ..0000.4167!11 len:0 [11]
│                              ← StrChunk ..0000.4101!56 len:0 [56]
│                                ← StrChunk ..0000.4008!77 len:0 [77]
│                              → StrChunk ..0000.4265!164 len:0 [164]
│                                ← StrChunk ..0000.4202!57 len:0 [57]
│                        → StrChunk ..0000.4679!12 len:0 [12]
│                          ← StrChunk ..0000.4589!30 len:0 [30]
│                            ← StrChunk ..0000.4490!49 len:0 [49]
│                              ← StrChunk ..0000.4447!30 len:0 [30]
│                                ← StrChunk ..0000.4477!13 len:0 [13]
│                              → StrChunk ..0000.4539!19 len:0 [19]
│                                ← StrChunk ..0000.4576!1 len:0 [1]
│                            → StrChunk ..0000.4662!14 len:0 [14]
│                              ← StrChunk ..0000.10684!3 len:0 [3]
│                                ← StrChunk ..0000.4627!35 len:0 [35]
│                              → StrChunk ..0000.4692!1 len:0 [1]
│                                ← StrChunk ..0000.4678!1 len:0 [1]
│                          → StrChunk ..0000.4715!36 len:0 [36]
│                            ← StrChunk ..0000.4696!1 len:0 [1]
│                              ← StrChunk ..0000.4818!4 len:0 [4]
│                                ← StrChunk ..0000.4693!3 len:0 [3]
│                              → StrChunk ..0000.4697!1 len:0 [1]
│                                ← StrChunk ..0000.4823!1 len:0 [1]
│                            → StrChunk ..0000.4804!4 len:0 [4]
│                              ← StrChunk ..0000.4751!2 len:0 [2]
│                                ← StrChunk ..0000.4780!1 len:0 [1]
│                              → StrChunk ..0000.4800!1 len:0 [1]
│                                ← StrChunk ..0000.4753!9 len:0 [9]
│                    → StrChunk ..0000.8851!1 len:0 [1]
│                      ← StrChunk ..0000.8429!24 len:0 [24]
│                        ← StrChunk ..0000.4698!1 len:0 [1]
│                          ← StrChunk ..0000.4429!1 len:0 [1]
│                            ← StrChunk ..0000.4676!1 len:0 [1]
│                              ← StrChunk ..0000.4763!16 len:0 [16]
│                                ← StrChunk ..0000.4801!2 len:0 [2]
│                                → StrChunk ..0000.4781!19 len:0 [19]
│                              → StrChunk ..0000.4558!12 len:0 [12]
│                                ← StrChunk ..0000.4619!4 len:0 [4]
│                            → StrChunk ..0000.4085!8 len:0 [8]
│                              ← StrChunk ..0000.4157!5 len:0 [5]
│                                ← StrChunk ..0000.4259!3 len:0 [3]
│                              → StrChunk ..0000.3700!1 len:0 [1]
│                                ← StrChunk ..0000.4006!1 len:0 [1]
│                          → StrChunk ..0000.8393!8 len:0 [8]
│                            ← StrChunk ..0000.4712!2 len:0 [2]
│                              ← StrChunk ..0000.4699!11 len:0 [11]
│                                ← StrChunk ..0000.4813!3 len:0 [3]
│                              → StrChunk ..0000.8286!94 len:0 [94]
│                                ← StrChunk ..0000.8219!65 len:0 [65]
│                            → StrChunk ..0000.8413!3 len:0 [3]
│                              ← StrChunk ..0000.8453!1 len:0 [1]
│                                ← StrChunk ..0000.8403!10 len:0 [10]
│                              → StrChunk ..0000.8862!1 len:0 [1]
│                                ← StrChunk ..0000.8420!9 len:0 [9]
│                        → StrChunk ..0000.8585!29 len:0 [29]
│                          ← StrChunk ..0000.8533!24 len:0 [24]
│                            ← StrChunk ..0000.8465!15 len:0 [15]
│                              ← StrChunk ..0000.8863!1 len:0 [1]
│                                ← StrChunk ..0000.8454!11 len:0 [11]
│                              → StrChunk ..0000.8517!8 len:0 [8]
│                                ← StrChunk ..0000.8482!21 len:0 [21]
│                            → StrChunk ..0000.8836!1 len:0 [1]
│                              ← StrChunk ..0000.8557!10 len:0 [10]
│                                ← StrChunk ..0000.8864!1 len:0 [1]
│                              → StrChunk ..0000.8567!16 len:0 [16]
│                                ← StrChunk ..0000.8845!1 len:0 [1]
│                          → StrChunk ..0000.8843!2 len:0 [2]
│                            ← StrChunk ..0000.8644!10 len:0 [10]
│                              ← StrChunk ..0000.8675!30 len:0 [30]
│                                ← StrChunk ..0000.8616!28 len:0 [28]
│                              → StrChunk ..0000.8654!10 len:0 [10]
│                                ← StrChunk ..0000.8865!1 len:0 [1]
│                            → StrChunk ..0000.8779!1 len:0 [1]
│                              ← StrChunk ..0000.8718!59 len:0 [59]
│                                ← StrChunk ..0000.8664!11 len:0 [11]
│                              → StrChunk ..0000.8780!2 len:0 [2]
│                                ← StrChunk ..0000.8852!2 len:0 [2]
│                      → StrChunk ..0000.10620!37 len:0 [37]
│                        ← StrChunk ..0000.8416!2 len:0 [2]
│                          ← StrChunk ..0000.8583!1 len:0 [1]
│                            ← StrChunk ..0000.8798!1 len:0 [1]
│                              ← StrChunk ..0000.8800!30 len:0 [30]
│                                ← StrChunk ..0000.8782!16 len:0 [16]
│                              → StrChunk ..0000.8614!1 len:0 [1]
│                                ← StrChunk ..0000.8777!1 len:0 [1]
│                            → StrChunk ..0000.8510!7 len:0 [7]
│                              ← StrChunk ..0000.8503!5 len:0 [5]
│                                ← StrChunk ..0000.8525!4 len:0 [4]
│                              → StrChunk ..0000.8480!1 len:0 [1]
│                                ← StrChunk ..0000.8508!1 len:0 [1]
│                          → StrChunk ..0000.9059!2 len:0 [2]
│                            ← StrChunk ..0000.8866!157 len:0 [157]
│                              ← StrChunk ..0000.8380!13 len:0 [13]
│                                ← StrChunk ..0000.8401!1 len:0 [1]
│                              → StrChunk ..0000.9023!34 len:0 [34]
│                                ← StrChunk ..0000.9506!4 len:0 [4]
│                            → StrChunk ..0000.9118!9 len:0 [9]
│                              ← StrChunk ..0000.10616!3 len:0 [3]
│                                ← StrChunk ..0000.9065!53 len:0 [53]
│                              → StrChunk ..0000.9127!26 len:0 [26]
│                                ← StrChunk ..0000.10599!4 len:0 [4]
│                        → StrChunk ..0000.11062!2 len:0 [2]
│                          ← StrChunk ..0000.9198!1 len:0 [1]
│                            ← StrChunk ..0000.9197!1 len:0 [1]
│                              ← StrChunk ..0000.9189!4 len:0 [4]
│                                ← StrChunk ..0000.9153!3 len:0 [3]
│                              → StrChunk ..0000.9156!17 len:0 [17]
│                                ← StrChunk ..0000.9193!2 len:0 [2]
│                            → StrChunk ..0000.9201!3 len:0 [3]
│                              ← StrChunk ..0000.9173!1 len:0 [1]
│                                ← StrChunk ..0000.9204!32 len:0 [32]
│                              → StrChunk ..0000.11046!14 len:0 [14]
│                                ← StrChunk ..0000.9174!15 len:0 [15]
│                          → StrChunk ..0000.9442!3 len:0 [3]
│                            ← StrChunk ..0000.9300!117 len:0 [117]
│                              ← StrChunk ..0000.10788!1 len:0 [1]
│                                ← StrChunk ..0000.11060!1 len:0 [1]
│                              → StrChunk ..0000.9417!11 len:0 [11]
│                                ← StrChunk ..0000.10792!14 len:0 [14]
│                            → StrChunk ..0000.10836!4 len:0 [4]
│                              ← StrChunk ..0000.9445!21 len:0 [21]
│                                ← StrChunk ..0000.10807!1 len:0 [1]
│                              → StrChunk ..0000.10822!4 len:0 [4]
│                                ← StrChunk ..0000.9466!1 len:0 [1]
│                  → StrChunk ..0000.13440!3 len:0 [3]
│                    ← StrChunk ..0000.12278!16 len:0 [16]
│                      ← StrChunk ..0000.9787!8 len:0 [8]
│                        ← StrChunk ..0000.11043!3 len:0 [3]
│                          ← StrChunk ..0000.10903!1 len:0 [1]
│                            ← StrChunk ..0000.9518!4 len:0 [4]
│                              ← StrChunk ..0000.10833!1 len:0 [1]
│                                ← StrChunk ..0000.9510!8 len:0 [8]
│                                → StrChunk ..0000.10840!27 len:0 [27]
│                              → StrChunk ..0000.9522!9 len:0 [9]
│                                ← StrChunk ..0000.10871!4 len:0 [4]
│                            → StrChunk ..0000.9560!27 len:0 [27]
│                              ← StrChunk ..0000.10904!10 len:0 [10]
│                                ← StrChunk ..0000.9531!29 len:0 [29]
│                              → StrChunk ..0000.10680!1 len:0 [1]
│                                ← StrChunk ..0000.10658!7 len:0 [7]
│                          → StrChunk ..0000.9587!3 len:0 [3]
│                            ← StrChunk ..0000.10687!91 len:0 [91]
│                              ← StrChunk ..0000.10681!3 len:0 [3]
│                                ← StrChunk ..0000.10665!15 len:0 [15]
│                              → StrChunk ..0000.10778!3 len:0 [3]
│                                ← StrChunk ..0000.10914!1 len:0 [1]
│                            → StrChunk ..0000.9666!3 len:0 [3]
│                              ← StrChunk ..0000.9672!79 len:0 [79]
│                                ← StrChunk ..0000.9631!35 len:0 [35]
│                              → StrChunk ..0000.9751!30 len:0 [30]
│                                ← StrChunk ..0000.9594!37 len:0 [37]
│                        → StrChunk ..0000.10149!72 len:0 [72]
│                          ← StrChunk ..0000.10223!2 len:0 [2]
│                            ← StrChunk ..0000.9811!230 len:0 [230]
│                              ← StrChunk ..0000.9795!10 len:0 [10]
│                                ← StrChunk ..0000.9805!6 len:0 [6]
│                              → StrChunk ..0000.10227!3 len:0 [3]
│                                ← StrChunk ..0000.10221!2 len:0 [2]
│                            → StrChunk ..0000.10386!14 len:0 [14]
│                              ← StrChunk ..0000.10061!15 len:0 [15]
│                                ← StrChunk ..0000.10041!18 len:0 [18]
│                              → StrChunk ..0000.10142!5 len:0 [5]
│                                ← StrChunk ..0000.10076!64 len:0 [64]
│                          → StrChunk ..0000.10518!9 len:0 [9]
│                            ← StrChunk ..0000.10400!19 len:0 [19]
│                              ← StrChunk ..0000.10288!98 len:0 [98]
│                                ← StrChunk ..0000.10235!9 len:0 [9]
│                              → StrChunk ..0000.10536!4 len:0 [4]
│                                ← StrChunk ..0000.10437!39 len:0 [39]
│                            → StrChunk ..0000.11064!79 len:0 [79]
│                              ← StrChunk ..0000.10541!58 len:0 [58]
│                                ← StrChunk ..0000.10476!41 len:0 [41]
│                              → StrChunk ..0000.11209!1 len:0 [1]
│                                ← StrChunk ..0000.11145!30 len:0 [30]
│                      → StrChunk ..0000.11847!2 len:0 [2]
│                        ← StrChunk ..0000.11534!3 len:0 [3]
│                          ← StrChunk ..0000.11280!89 len:0 [89]
│                            ← StrChunk ..0000.11210!1 len:0 [1]
│                              ← StrChunk ..0000.12322!1 len:0 [1]
│                                ← StrChunk ..0000.12304!17 len:0 [17]
│                                → StrChunk ..0000.12294!10 len:0 [10]
│                              → StrChunk ..0000.11211!37 len:0 [37]
│                                ← StrChunk ..0000.11175!33 len:0 [33]
│                            → StrChunk ..0000.11387!118 len:0 [118]
│                              ← StrChunk ..0000.11369!4 len:0 [4]
│                                ← StrChunk ..0000.12483!5 len:0 [5]
│                              → StrChunk ..0000.11505!24 len:0 [24]
│                                ← StrChunk ..0000.11529!4 len:0 [4]
│                          → StrChunk ..0000.11861!4 len:0 [4]
│                            ← StrChunk ..0000.11675!88 len:0 [88]
│                              ← StrChunk ..0000.11550!115 len:0 [115]
│                                ← StrChunk ..0000.11539!7 len:0 [7]
│                              → StrChunk ..0000.11869!40 len:0 [40]
│                                ← StrChunk ..0000.11850!11 len:0 [11]
│                            → StrChunk ..0000.11945!8 len:0 [8]
│                              ← StrChunk ..0000.11781!24 len:0 [24]
│                                ← StrChunk ..0000.11763!16 len:0 [16]
│                              → StrChunk ..0000.11831!14 len:0 [14]
│                                ← StrChunk ..0000.11805!18 len:0 [18]
│                        → StrChunk ..0000.13023!148 len:0 [148]
│                          ← StrChunk ..0000.12163!113 len:0 [113]
│                            ← StrChunk ..0000.11969!20 len:0 [20]
│                              ← StrChunk ..0000.11849!1 len:0 [1]
│                                ← StrChunk ..0000.11966!1 len:0 [1]
│                              → StrChunk ..0000.11989!13 len:0 [13]
│                                ← StrChunk ..0000.11953!13 len:0 [13]
│                            → StrChunk ..0000.12488!37 len:0 [37]
│                              ← StrChunk ..0000.12276!2 len:0 [2]
│                                ← StrChunk ..0000.12002!1 len:0 [1]
│                              → StrChunk ..0000.12776!70 len:0 [70]
│                                ← StrChunk ..0000.12527!247 len:0 [247]
│                          → StrChunk ..0000.12949!11 len:0 [11]
│                            ← StrChunk ..0000.12846!85 len:0 [85]
│                              ← StrChunk ..0000.13172!1 len:0 [1]
│                                ← StrChunk ..0000.13022!1 len:0 [1]
│                              → StrChunk ..0000.12980!41 len:0 [41]
│                                ← StrChunk ..0000.12933!16 len:0 [16]
│                            → StrChunk ..0000.13266!11 len:0 [11]
│                              ← StrChunk ..0000.13021!1 len:0 [1]
│                                ← StrChunk ..0000.13173!93 len:0 [93]
│                              → StrChunk ..0000.13333!37 len:0 [37]
│                                ← StrChunk ..0000.13301!22 len:0 [22]
│                    → StrChunk ..0000.14794!13 len:0 [13]
│                      ← StrChunk ..0000.15226!27 len:0 [27]
│                        ← StrChunk ..0000.13865!2 len:0 [2]
│                          ← StrChunk ..0000.13456!21 len:0 [21]
│                            ← StrChunk ..0000.13421!1 len:0 [1]
│                              ← StrChunk ..0000.13450!6 len:0 [6]
│                                ← StrChunk ..0000.13370!25 len:0 [25]
│                                → StrChunk ..0000.13395!12 len:0 [12]
│                              → StrChunk ..0000.13422!17 len:0 [17]
│                                ← StrChunk ..0000.13407!14 len:0 [14]
│                            → StrChunk ..0000.13585!94 len:0 [94]
│                              ← StrChunk ..0000.13573!10 len:0 [10]
│                                ← StrChunk ..0000.13479!92 len:0 [92]
│                              → StrChunk ..0000.13758!8 len:0 [8]
│                                ← StrChunk ..0000.13687!49 len:0 [49]
│                          → StrChunk ..0000.14346!118 len:0 [118]
│                            ← StrChunk ..0000.13815!40 len:0 [40]
│                              ← StrChunk ..0000.13867!12 len:0 [12]
│                                ← StrChunk ..0000.13766!49 len:0 [49]
│                              → StrChunk ..0000.14102!57 len:0 [57]
│                                ← StrChunk ..0000.13880!220 len:0 [220]
│                            → StrChunk ..0000.14159!56 len:0 [56]
│                              ← StrChunk ..0000.14250!21 len:0 [21]
│                                ← StrChunk ..0000.14344!2 len:0 [2]
│                              → StrChunk ..0000.14465!3 len:0 [3]
│                                ← StrChunk ..0000.14298!45 len:0 [45]
│                        → StrChunk ..0000.15339!3 len:0 [3]
│                          ← StrChunk ..0000.15323!3 len:0 [3]
│                            ← StrChunk ..0000.14468!4 len:0 [4]
│                              ← StrChunk ..0000.15253!1 len:0 [1]
│                                ← StrChunk ..0000.15255!27 len:0 [27]
│                              → StrChunk ..0000.14472!19 len:0 [19]
│                                ← StrChunk ..0000.14829!1 len:0 [1]
│                            → StrChunk ..0000.14546!7 len:0 [7]
│                              ← StrChunk ..0000.14836!6 len:0 [6]
│                                ← StrChunk ..0000.14491!55 len:0 [55]
│                              → StrChunk ..0000.14850!33 len:0 [33]
│                                ← StrChunk ..0000.14555!28 len:0 [28]
│                          → StrChunk ..0000.14704!88 len:0 [88]
│                            ← StrChunk ..0000.14917!1 len:0 [1]
│                              ← StrChunk ..0000.14919!19 len:0 [19]
│                                ← StrChunk ..0000.14883!34 len:0 [34]
│                              → StrChunk ..0000.14939!2 len:0 [2]
│                                ← StrChunk ..0000.14583!1 len:0 [1]
│                            → StrChunk ..0000.14941!1 len:0 [1]
│                              ← StrChunk ..0000.14792!1 len:0 [1]
│                                ← StrChunk ..0000.14994!1 len:0 [1]
│                              → StrChunk ..0000.14942!51 len:0 [51]
│                                ← StrChunk ..0000.14793!1 len:0 [1]
│                      → StrChunk ..0000.15386!1 len:0 [1]
│                        ← StrChunk ..0000.15165!1 len:0 [1]
│                          ← StrChunk ..0000.15103!1 len:0 [1]
│                            ← StrChunk ..0000.15090!13 len:0 [13]
│                              ← StrChunk ..0000.14807!3 len:0 [3]
│                                ← StrChunk ..0000.15087!3 len:0 [3]
│                              → StrChunk ..0000.14810!2 len:0 [2]
│                                ← StrChunk ..0000.15085!1 len:0 [1]
│                            → StrChunk ..0000.14812!14 len:0 [14]
│                              ← StrChunk ..0000.15104!1 len:0 [1]
│                                ← StrChunk ..0000.15106!6 len:0 [6]
│                              → StrChunk ..0000.15356!1 len:0 [1]
│                                ← StrChunk ..0000.15112!53 len:0 [53]
│                          → StrChunk ..0000.15692!15 len:0 [15]
│                            ← StrChunk ..0000.15177!49 len:0 [49]
│                              ← StrChunk ..0000.15166!5 len:0 [5]
│                                ← StrChunk ..0000.15354!1 len:0 [1]
│                              → StrChunk ..0000.15357!19 len:0 [19]
│                                ← StrChunk ..0000.15342!1 len:0 [1]
│                            → StrChunk ..0000.15385!1 len:0 [1]
│                              ← StrChunk ..0000.15771!1 len:0 [1]
│                                ← StrChunk ..0000.15376!9 len:0 [9]
│                              → StrChunk ..0000.15778!1 len:0 [1]
│                                ← StrChunk ..0000.15797!2 len:0 [2]
│                        → StrChunk ..0000.15442!19 len:0 [19]
│                          ← StrChunk ..0000.15585!5 len:0 [5]
│                            ← StrChunk ..0000.15412!2 len:0 [2]
│                              ← StrChunk ..0000.15387!1 len:0 [1]
│                                ← StrChunk ..0000.15794!2 len:0 [2]
│                              → StrChunk ..0000.15414!4 len:0 [4]
│                                ← StrChunk ..0000.15388!24 len:0 [24]
│                            → StrChunk ..0000.15418!16 len:0 [16]
│                              ← StrChunk ..0000.15590!8 len:0 [8]
│                                ← StrChunk ..0000.15614!2 len:0 [2]
│                              → StrChunk ..0000.15434!6 len:0 [6]
│                                ← StrChunk ..0000.15440!2 len:0 [2]
│                          → StrChunk ..0000.15466!1 len:0 [1]
│                            ← StrChunk ..0000.15527!1 len:0 [1]
│                              ← StrChunk ..0000.15461!5 len:0 [5]
│                                ← StrChunk ..0000.15599!13 len:0 [13]
│                              → StrChunk ..0000.15528!2 len:0 [2]
│                                ← StrChunk ..0000.15712!2 len:0 [2]
│                            → StrChunk ..0000.15720!1 len:0 [1]
│                              ← StrChunk ..0000.15467!17 len:0 [17]
│                                ← StrChunk ..0000.15714!6 len:0 [6]
│                              → StrChunk ..0000.15721!5 len:0 [5]
│                                ← StrChunk ..0000.15788!5 len:0 [5]
│              → StrChunk ..0000.22800!31 len:38 [31]
│                ← StrChunk ..0000.21014!40 len:0 [40]
│                  ← StrChunk ..0000.16166!20 len:0 [20]
│                    ← StrChunk ..0000.12960!10 len:0 [10]
│                      ← StrChunk ..0000.15621!35 len:0 [35]
│                        ← StrChunk ..0000.15618!2 len:0 [2]
│                          ← StrChunk ..0000.15487!3 len:0 [3]
│                            ← StrChunk ..0000.15548!1 len:0 [1]
│                              ← StrChunk ..0000.15779!1 len:0 [1]
│                                ← StrChunk ..0000.15775!1 len:0 [1]
│                                → StrChunk ..0000.15776!1 len:0 [1]
│                              → StrChunk ..0000.15523!4 len:0 [4]
│                                ← StrChunk ..0000.15484!3 len:0 [3]
│                            → StrChunk ..0000.15772!1 len:0 [1]
│                              ← StrChunk ..0000.15490!16 len:0 [16]
│                                ← StrChunk ..0000.15552!2 len:0 [2]
│                              → StrChunk ..0000.15568!5 len:0 [5]
│                                ← StrChunk ..0000.15506!5 len:0 [5]
│                          → StrChunk ..0000.15555!13 len:0 [13]
│                            ← StrChunk ..0000.15511!1 len:0 [1]
│                              ← StrChunk ..0000.15573!3 len:0 [3]
│                                ← StrChunk ..0000.15578!2 len:0 [2]
│                              → StrChunk ..0000.15512!2 len:0 [2]
│                                ← StrChunk ..0000.15580!4 len:0 [4]
│                            → StrChunk ..0000.15785!1 len:0 [1]
│                              ← StrChunk ..0000.15733!4 len:0 [4]
│                                ← StrChunk ..0000.15514!2 len:0 [2]
│                              → StrChunk ..0000.15516!3 len:0 [3]
│                                ← StrChunk ..0000.15773!2 len:0 [2]
│                        → StrChunk ..0000.14553!1 len:0 [1]
│                          ← StrChunk ..0000.15757!13 len:0 [13]
│                            ← StrChunk ..0000.15749!6 len:0 [6]
│                              ← StrChunk ..0000.15656!3 len:0 [3]
│                                ← StrChunk ..0000.15738!11 len:0 [11]
│                              → StrChunk ..0000.15687!5 len:0 [5]
│                                ← StrChunk ..0000.15659!26 len:0 [26]
│                            → StrChunk ..0000.15171!3 len:0 [3]
│                              ← StrChunk ..0000.15519!1 len:0 [1]
│                                ← StrChunk ..0000.15685!1 len:0 [1]
│                              → StrChunk ..0000.14995!44 len:0 [44]
│                                ← StrChunk ..0000.14826!2 len:0 [2]
│                          → StrChunk ..0000.13679!4 len:0 [4]
│                            ← StrChunk ..0000.14100!1 len:0 [1]
│                              ← StrChunk ..0000.14215!17 len:0 [17]
│                                ← StrChunk ..0000.14343!1 len:0 [1]
│                              → StrChunk ..0000.13736!11 len:0 [11]
│                                ← StrChunk ..0000.13855!1 len:0 [1]
│                            → StrChunk ..0000.13477!1 len:0 [1]
│                              ← StrChunk ..0000.13571!1 len:0 [1]
│                                ← StrChunk ..0000.13583!1 len:0 [1]
│                              → StrChunk ..0000.13277!12 len:0 [12]
│                                ← StrChunk ..0000.13323!5 len:0 [5]
│                      → StrChunk ..0000.9590!1 len:0 [1]
│                        ← StrChunk ..0000.11537!1 len:0 [1]
│                          ← StrChunk ..0000.12134!29 len:0 [29]
│                            ← StrChunk ..0000.12003!107 len:0 [107]
│                              ← StrChunk ..0000.12774!1 len:0 [1]
│                                ← StrChunk ..0000.12931!1 len:0 [1]
│                                → StrChunk ..0000.12525!1 len:0 [1]
│                              → StrChunk ..0000.12110!18 len:0 [18]
│                                ← StrChunk ..0000.12129!5 len:0 [5]
│                            → StrChunk ..0000.11779!1 len:0 [1]
│                              ← StrChunk ..0000.11823!4 len:0 [4]
│                                ← StrChunk ..0000.11845!1 len:0 [1]
│                              → StrChunk ..0000.11546!2 len:0 [2]
│                                ← StrChunk ..0000.11665!5 len:0 [5]
│                          → StrChunk ..0000.10244!22 len:0 [22]
│                            ← StrChunk ..0000.11143!1 len:0 [1]
│                              ← StrChunk ..0000.11248!16 len:0 [16]
│                                ← StrChunk ..0000.11373!7 len:0 [7]
│                              → StrChunk ..0000.10419!9 len:0 [9]
│                                ← StrChunk ..0000.10517!1 len:0 [1]
│                            → StrChunk ..0000.10059!1 len:0 [1]
│                              ← StrChunk ..0000.10140!1 len:0 [1]
│                                ← StrChunk ..0000.10147!1 len:0 [1]
│                              → StrChunk ..0000.9592!1 len:0 [1]
│                                ← StrChunk ..0000.9781!3 len:0 [3]
│                        → StrChunk ..0000.16094!4 len:0 [4]
│                          ← StrChunk ..0000.8284!1 len:0 [1]
│                            ← StrChunk ..0000.9268!8 len:0 [8]
│                              ← StrChunk ..0000.9284!8 len:0 [8]
│                                ← StrChunk ..0000.9428!7 len:0 [7]
│                              → StrChunk ..0000.9057!1 len:0 [1]
│                                ← StrChunk ..0000.9061!2 len:0 [2]
│                            → StrChunk ..0000.15801!25 len:0 [25]
│                              ← StrChunk ..0000.15799!1 len:0 [1]
│                                ← StrChunk ..0000.4714!1 len:0 [1]
│                              → StrChunk ..0000.15890!189 len:0 [189]
│                                ← StrChunk ..0000.15828!47 len:0 [47]
│                          → StrChunk ..0000.17552!1 len:0 [1]
│                            ← StrChunk ..0000.16092!2 len:0 [2]
│                              ← StrChunk ..0000.16098!1 len:0 [1]
│                                ← StrChunk ..0000.16079!13 len:0 [13]
│                              → StrChunk ..0000.17543!5 len:0 [5]
│                                ← StrChunk ..0000.16099!59 len:0 [59]
│                            → StrChunk ..0000.16158!5 len:0 [5]
│                              ← StrChunk ..0000.17553!26 len:0 [26]
│                                ← StrChunk ..0000.17548!4 len:0 [4]
│                              → StrChunk ..0000.16247!1 len:0 [1]
│                                ← StrChunk ..0000.16165!1 len:0 [1]
│                    → StrChunk ..0000.17299!88 len:0 [88]
│                      ← StrChunk ..0000.16326!1 len:0 [1]
│                        ← StrChunk ..0000.16736!55 len:0 [55]
│                          ← StrChunk ..0000.16595!16 len:0 [16]
│                            ← StrChunk ..0000.16328!44 len:0 [44]
│                              ← StrChunk ..0000.16255!9 len:0 [9]
│                                ← StrChunk ..0000.16188!20 len:0 [20]
│                                → StrChunk ..0000.16266!60 len:0 [60]
│                              → StrChunk ..0000.16408!35 len:0 [35]
│                                ← StrChunk ..0000.16374!32 len:0 [32]
│                            → StrChunk ..0000.16674!8 len:0 [8]
│                              ← StrChunk ..0000.16611!37 len:0 [37]
│                                ← StrChunk ..0000.16693!3 len:0 [3]
│                              → StrChunk ..0000.17540!1 len:0 [1]
│                                ← StrChunk ..0000.16696!40 len:0 [40]
│                          → StrChunk ..0000.16874!28 len:0 [28]
│                            ← StrChunk ..0000.16791!48 len:0 [48]
│                              ← StrChunk ..0000.16579!4 len:0 [4]
│                                ← StrChunk ..0000.16648!13 len:0 [13]
│                              → StrChunk ..0000.16839!33 len:0 [33]
│                                ← StrChunk ..0000.16583!11 len:0 [11]
│                            → StrChunk ..0000.16443!53 len:0 [53]
│                              ← StrChunk ..0000.16578!1 len:0 [1]
│                                ← StrChunk ..0000.16872!1 len:0 [1]
│                              → StrChunk ..0000.16372!1 len:0 [1]
│                                ← StrChunk ..0000.16406!1 len:0 [1]
│                        → StrChunk ..0000.17539!1 len:0 [1]
│                          ← StrChunk ..0000.16904!1 len:0 [1]
│                            ← StrChunk ..0000.16163!1 len:0 [1]
│                              ← StrChunk ..0000.16186!1 len:0 [1]
│                                ← StrChunk ..0000.16264!1 len:0 [1]
│                              → StrChunk ..0000.15800!1 len:0 [1]
│                                ← StrChunk ..0000.15826!1 len:0 [1]
│                            → StrChunk ..0000.17094!14 len:0 [14]
│                              ← StrChunk ..0000.17029!44 len:0 [44]
│                                ← StrChunk ..0000.16906!121 len:0 [121]
│                              → StrChunk ..0000.17108!22 len:0 [22]
│                                ← StrChunk ..0000.17073!21 len:0 [21]
│                          → StrChunk ..0000.17387!36 len:0 [36]
│                            ← StrChunk ..0000.17178!3 len:0 [3]
│                              ← StrChunk ..0000.17169!7 len:0 [7]
│                                ← StrChunk ..0000.17130!29 len:0 [29]
│                              → StrChunk ..0000.17211!5 len:0 [5]
│                                ← StrChunk ..0000.17189!12 len:0 [12]
│                            → StrChunk ..0000.17216!12 len:0 [12]
│                              ← StrChunk ..0000.17423!9 len:0 [9]
│                                ← StrChunk ..0000.17441!56 len:0 [56]
│                              → StrChunk ..0000.17228!56 len:0 [56]
│                                ← StrChunk ..0000.17284!15 len:0 [15]
│                      → StrChunk ..0000.18258!5 len:0 [5]
│                        ← StrChunk ..0000.17847!50 len:0 [50]
│                          ← StrChunk ..0000.17666!1 len:0 [1]
│                            ← StrChunk ..0000.17608!2 len:0 [2]
│                              ← StrChunk ..0000.17579!27 len:0 [27]
│                                ← StrChunk ..0000.17541!2 len:0 [2]
│                              → StrChunk ..0000.17654!8 len:0 [8]
│                                ← StrChunk ..0000.17644!6 len:0 [6]
│                            → StrChunk ..0000.17685!3 len:0 [3]
│                              ← StrChunk ..0000.17682!1 len:0 [1]
│                                ← StrChunk ..0000.17669!11 len:0 [11]
│                              → StrChunk ..0000.17741!96 len:0 [96]
│                                ← StrChunk ..0000.17698!37 len:0 [37]
│                          → StrChunk ..0000.17962!13 len:0 [13]
│                            ← StrChunk ..0000.17946!1 len:0 [1]
│                              ← StrChunk ..0000.17897!35 len:0 [35]
│                                ← StrChunk ..0000.17932!14 len:0 [14]
│                              → StrChunk ..0000.17947!13 len:0 [13]
│                                ← StrChunk ..0000.18496!12 len:0 [12]
│                            → StrChunk ..0000.18492!1 len:0 [1]
│                              ← StrChunk ..0000.17975!267 len:0 [267]
│                                ← StrChunk ..0000.18508!15 len:0 [15]
│                              → StrChunk ..0000.18264!1 len:0 [1]
│                                ← StrChunk ..0000.18242!16 len:0 [16]
│                        → StrChunk ..0000.20446!1 len:0 [1]
│                          ← StrChunk ..0000.18571!61 len:0 [61]
│                            ← StrChunk ..0000.18376!115 len:0 [115]
│                              ← StrChunk ..0000.18296!68 len:0 [68]
│                                ← StrChunk ..0000.18265!5 len:0 [5]
│                              → StrChunk ..0000.18562!7 len:0 [7]
│                                ← StrChunk ..0000.18538!4 len:0 [4]
│                            → StrChunk ..0000.20345!26 len:0 [26]
│                              ← StrChunk ..0000.20197!146 len:0 [146]
│                                ← StrChunk ..0000.18634!85 len:0 [85]
│                              → StrChunk ..0000.20779!29 len:0 [29]
│                                ← StrChunk ..0000.20373!73 len:0 [73]
│                          → StrChunk ..0000.20484!25 len:0 [25]
│                            ← StrChunk ..0000.20860!12 len:0 [12]
│                              ← StrChunk ..0000.20447!24 len:0 [24]
│                                ← StrChunk ..0000.20825!26 len:0 [26]
│                              → StrChunk ..0000.20875!5 len:0 [5]
│                                ← StrChunk ..0000.20471!13 len:0 [13]
│                            → StrChunk ..0000.20885!25 len:0 [25]
│                              ← StrChunk ..0000.20522!24 len:0 [24]
│                                ← StrChunk ..0000.20517!1 len:0 [1]
│                              → StrChunk ..0000.20606!35 len:0 [35]
│                                ← StrChunk ..0000.20546!50 len:0 [50]
│                  → StrChunk ..0000.23527!5 len:0 [5]
│                    ← StrChunk ..0000.20672!24 len:0 [24]
│                      ← StrChunk ..0000.22027!28 len:0 [28]
│                        ← StrChunk ..0000.22008!19 len:0 [19]
│                          ← StrChunk ..0000.21727!14 len:0 [14]
│                            ← StrChunk ..0000.21390!3 len:0 [3]
│                              ← StrChunk ..0000.21360!22 len:0 [22]
│                                ← StrChunk ..0000.21284!52 len:0 [52]
│                                → StrChunk ..0000.21336!1 len:0 [1]
│                              → StrChunk ..0000.21417!252 len:0 [252]
│                                ← StrChunk ..0000.21337!23 len:0 [23]
│                            → StrChunk ..0000.21993!15 len:0 [15]
│                              ← StrChunk ..0000.21741!10 len:0 [10]
│                                ← StrChunk ..0000.21752!1 len:0 [1]
│                              → StrChunk ..0000.21753!12 len:0 [12]
│                                ← StrChunk ..0000.21751!1 len:0 [1]
│                          → StrChunk ..0000.21815!58 len:0 [58]
│                            ← StrChunk ..0000.21788!1 len:0 [1]
│                              ← StrChunk ..0000.22494!59 len:0 [59]
│                                ← StrChunk ..0000.21765!23 len:0 [23]
│                              → StrChunk ..0000.21803!6 len:0 [6]
│                                ← StrChunk ..0000.21791!8 len:0 [8]
│                            → StrChunk ..0000.21912!47 len:0 [47]
│                              ← StrChunk ..0000.22181!10 len:0 [10]
│                                ← StrChunk ..0000.21877!35 len:0 [35]
│                              → StrChunk ..0000.21976!17 len:0 [17]
│                                ← StrChunk ..0000.21961!7 len:0 [7]
│                        → StrChunk ..0000.22122!1 len:0 [1]
│                          ← StrChunk ..0000.22560!11 len:0 [11]
│                            ← StrChunk ..0000.22055!13 len:0 [13]
│                              ← StrChunk ..0000.22068!1 len:0 [1]
│                                ← StrChunk ..0000.22069!1 len:0 [1]
│                              → StrChunk ..0000.22124!22 len:0 [22]
│                                ← StrChunk ..0000.22070!52 len:0 [52]
│                            → StrChunk ..0000.22154!13 len:0 [13]
│                              ← StrChunk ..0000.22599!19 len:0 [19]
│                                ← StrChunk ..0000.22146!8 len:0 [8]
│                              → StrChunk ..0000.22167!4 len:0 [4]
│                                ← StrChunk ..0000.22618!6 len:0 [6]
│                          → StrChunk ..0000.21789!1 len:0 [1]
│                            ← StrChunk ..0000.21873!2 len:0 [2]
│                              ← StrChunk ..0000.21959!1 len:0 [1]
│                                ← StrChunk ..0000.21968!4 len:0 [4]
│                              → StrChunk ..0000.21799!2 len:0 [2]
│                                ← StrChunk ..0000.21809!3 len:0 [3]
│                            → StrChunk ..0000.21393!6 len:0 [6]
│                              ← StrChunk ..0000.21405!6 len:0 [6]
│                                ← StrChunk ..0000.21669!29 len:0 [29]
│                              → StrChunk ..0000.20713!23 len:0 [23]
│                                ← StrChunk ..0000.20641!31 len:0 [31]
│                      → StrChunk ..0000.23056!47 len:0 [47]
│                        ← StrChunk ..0000.18853!14 len:0 [14]
│                          ← StrChunk ..0000.20195!1 len:0 [1]
│                            ← StrChunk ..0000.20509!4 len:0 [4]
│                              ← StrChunk ..0000.20596!5 len:0 [5]
│                                ← StrChunk ..0000.20736!43 len:0 [43]
│                                → StrChunk ..0000.20518!2 len:0 [2]
│                              → StrChunk ..0000.20343!1 len:0 [1]
│                                ← StrChunk ..0000.20371!1 len:0 [1]
│                            → StrChunk ..0000.18719!36 len:0 [36]
│                              ← StrChunk ..0000.20196!1 len:0 [1]
│                                ← StrChunk ..0000.171817!3 len:0 [3]
│                              → StrChunk ..0000.18931!19 len:0 [19]
│                                ← StrChunk ..0000.18761!92 len:0 [92]
│                          → StrChunk ..0000.23254!8 len:0 [8]
│                            ← StrChunk ..0000.22197!113 len:0 [113]
│                              ← StrChunk ..0000.18950!81 len:0 [81]
│                                ← StrChunk ..0000.18875!43 len:0 [43]
│                              → StrChunk ..0000.22980!5 len:0 [5]
│                                ← StrChunk ..0000.22312!39 len:0 [39]
│                            → StrChunk ..0000.22987!2 len:0 [2]
│                              ← StrChunk ..0000.23008!1 len:0 [1]
│                                ← StrChunk ..0000.22985!2 len:0 [2]
│                              → StrChunk ..0000.23009!43 len:0 [43]
│                                ← StrChunk ..0000.22991!16 len:0 [16]
│                        → StrChunk ..0000.23271!16 len:0 [16]
│                          ← StrChunk ..0000.23200!2 len:0 [2]
│                            ← StrChunk ..0000.23213!2 len:0 [2]
│                              ← StrChunk ..0000.23204!2 len:0 [2]
│                                ← StrChunk ..0000.23196!4 len:0 [4]
│                              → StrChunk ..0000.23215!6 len:0 [6]
│                                ← StrChunk ..0000.23206!7 len:0 [7]
│                            → StrChunk ..0000.23105!37 len:0 [37]
│                              ← StrChunk ..0000.23264!7 len:0 [7]
│                                ← StrChunk ..0000.23103!2 len:0 [2]
│                              → StrChunk ..0000.23142!54 len:0 [54]
│                                ← StrChunk ..0000.23221!6 len:0 [6]
│                          → StrChunk ..0000.23295!16 len:0 [16]
│                            ← StrChunk ..0000.23311!4 len:0 [4]
│                              ← StrChunk ..0000.23287!8 len:0 [8]
│                                ← StrChunk ..0000.23323!7 len:0 [7]
│                              → StrChunk ..0000.23315!1 len:0 [1]
│                                ← StrChunk ..0000.23330!3 len:0 [3]
│                            → StrChunk ..0000.23588!25 len:0 [25]
│                              ← StrChunk ..0000.23559!28 len:0 [28]
│                                ← StrChunk ..0000.23335!101 len:0 [101]
│                              → StrChunk ..0000.23436!87 len:0 [87]
│                                ← StrChunk ..0000.23587!1 len:0 [1]
│                    → StrChunk ..0000.24256!118 len:0 [118]
│                      ← StrChunk ..0000.24739!128 len:0 [128]
│                        ← StrChunk ..0000.24024!4 len:0 [4]
│                          ← StrChunk ..0000.23613!1 len:0 [1]
│                            ← StrChunk ..0000.23534!14 len:0 [14]
│                              ← StrChunk ..0000.23532!2 len:0 [2]
│                                ← StrChunk ..0000.23630!62 len:0 [62]
│                                → StrChunk ..0000.23618!3 len:0 [3]
│                              → StrChunk ..0000.23548!1 len:0 [1]
│                                ← StrChunk ..0000.24011!6 len:0 [6]
│                            → StrChunk ..0000.24017!1 len:0 [1]
│                              ← StrChunk ..0000.23702!8 len:0 [8]
│                                ← StrChunk ..0000.23621!9 len:0 [9]
│                              → StrChunk ..0000.23758!4 len:0 [4]
│                                ← StrChunk ..0000.23710!46 len:0 [46]
│                          → StrChunk ..0000.23820!55 len:0 [55]
│                            ← StrChunk ..0000.23794!1 len:0 [1]
│                              ← StrChunk ..0000.24028!1 len:0 [1]
│                                ← StrChunk ..0000.23762!32 len:0 [32]
│                              → StrChunk ..0000.24034!3 len:0 [3]
│                                ← StrChunk ..0000.23797!23 len:0 [23]
│                            → StrChunk ..0000.24045!3 len:0 [3]
│                              ← StrChunk ..0000.23875!36 len:0 [36]
│                                ← StrChunk ..0000.24039!1 len:0 [1]
│                              → StrChunk ..0000.24732!1 len:0 [1]
│                                ← StrChunk ..0000.23911!24 len:0 [24]
│                        → StrChunk ..0000.24494!21 len:0 [21]
│                          ← StrChunk ..0000.24401!51 len:0 [51]
│                            ← StrChunk ..0000.24867!4 len:0 [4]
│                              ← StrChunk ..0000.24909!2 len:0 [2]
│                                ← StrChunk ..0000.24875!33 len:0 [33]
│                              → StrChunk ..0000.23935!70 len:0 [70]
│                                ← StrChunk ..0000.24733!3 len:0 [3]
│                            → StrChunk ..0000.24452!29 len:0 [29]
│                              ← StrChunk ..0000.24483!4 len:0 [4]
│                                ← StrChunk ..0000.24491!2 len:0 [2]
│                              → StrChunk ..0000.24005!4 len:0 [4]
│                                ← StrChunk ..0000.24493!1 len:0 [1]
│                          → StrChunk ..0000.24539!1 len:0 [1]
│                            ← StrChunk ..0000.24516!23 len:0 [23]
│                              ← StrChunk ..0000.24058!5 len:0 [5]
│                                ← StrChunk ..0000.24009!1 len:0 [1]
│                              → StrChunk ..0000.24541!1 len:0 [1]
│                                ← StrChunk ..0000.24543!26 len:0 [26]
│                            → StrChunk ..0000.24072!53 len:0 [53]
│                              ← StrChunk ..0000.24585!11 len:0 [11]
│                                ← StrChunk ..0000.24063!9 len:0 [9]
│                              → StrChunk ..0000.24141!101 len:0 [101]
│                                ← StrChunk ..0000.24135!4 len:0 [4]
│                      → StrChunk ..0000.23795!1 len:0 [1]
│                        ← StrChunk ..0000.25141!75 len:0 [75]
│                          ← StrChunk ..0000.24987!2 len:0 [2]
│                            ← StrChunk ..0000.24911!45 len:0 [45]
│                              ← StrChunk ..0000.24393!8 len:0 [8]
│                                ← StrChunk ..0000.24376!15 len:0 [15]
│                              → StrChunk ..0000.24956!10 len:0 [10]
│                                ← StrChunk ..0000.24966!21 len:0 [21]
│                            → StrChunk ..0000.25003!32 len:0 [32]
│                              ← StrChunk ..0000.24989!8 len:0 [8]
│                                ← StrChunk ..0000.24997!6 len:0 [6]
│                              → StrChunk ..0000.25096!43 len:0 [43]
│                                ← StrChunk ..0000.25051!35 len:0 [35]
│                          → StrChunk ..0000.24391!1 len:0 [1]
│                            ← StrChunk ..0000.25139!1 len:0 [1]
│                              ← StrChunk ..0000.25216!1 len:0 [1]
│                                ← StrChunk ..0000.25218!23 len:0 [23]
│                              → StrChunk ..0000.25035!8 len:0 [8]
│                                ← StrChunk ..0000.25086!5 len:0 [5]
│                            → StrChunk ..0000.24139!1 len:0 [1]
│                              ← StrChunk ..0000.24242!7 len:0 [7]
│                                ← StrChunk ..0000.24374!1 len:0 [1]
│                              → StrChunk ..0000.24048!5 len:0 [5]
│                                ← StrChunk ..0000.24125!5 len:0 [5]
│                        → StrChunk ..0000.22635!3 len:0 [3]
│                          ← StrChunk ..0000.22989!1 len:0 [1]
│                            ← StrChunk ..0000.23523!2 len:0 [2]
│                              ← StrChunk ..0000.23549!10 len:0 [10]
│                                ← StrChunk ..0000.23756!1 len:0 [1]
│                              → StrChunk ..0000.23052!2 len:0 [2]
│                                ← StrChunk ..0000.23333!1 len:0 [1]
│                            → StrChunk ..0000.26178!179 len:0 [179]
│                              ← StrChunk ..0000.22195!2 len:0 [2]
│                                ← StrChunk ..0000.22310!1 len:0 [1]
│                              → StrChunk ..0000.22640!11 len:0 [11]
│                                ← StrChunk ..0000.22630!5 len:0 [5]
│                          → StrChunk ..0000.22672!20 len:0 [20]
│                            ← StrChunk ..0000.22656!11 len:0 [11]
│                              ← StrChunk ..0000.22694!1 len:0 [1]
│                                ← StrChunk ..0000.22651!5 len:0 [5]
│                              → StrChunk ..0000.22667!4 len:0 [4]
│                                ← StrChunk ..0000.22671!1 len:0 [1]
│                            → StrChunk ..0000.22638!1 len:0 [1]
│                              ← StrChunk ..0000.22692!1 len:0 [1]
│                                ← StrChunk ..0000.22693!1 len:0 [1]
│                              → StrChunk ..0000.22793!3 len:0 [3]
│                                ← StrChunk ..0000.22695!96 len:0 [96]
│                → StrChunk ..0000.122563!5 len:38 [5]
│                  ← StrChunk ..0000.116967!1 len:23 [1]
│                    ← StrChunk ..0000.19218!1 len:23 [1]
│                      ← StrChunk ..0000.19610!11 len:0 [11]
│                        ← StrChunk ..0000.19115!103 len:0 [103]
│                          ← StrChunk ..0000.22962!1 len:0 [1]
│                            ← StrChunk ..0000.22966!14 len:0 [14]
│                              ← StrChunk ..0000.22831!50 len:0 [50]
│                                ← StrChunk ..0000.22887!10 len:0 [10]
│                                → StrChunk ..0000.22897!52 len:0 [52]
│                              → StrChunk ..0000.22964!2 len:0 [2]
│                                ← StrChunk ..0000.22949!13 len:0 [13]
│                            → StrChunk ..0000.19031!14 len:0 [14]
│                              ← StrChunk ..0000.22791!1 len:0 [1]
│                                ← StrChunk ..0000.22796!2 len:0 [2]
│                              → StrChunk ..0000.19088!25 len:0 [25]
│                                ← StrChunk ..0000.19047!39 len:0 [39]
│                          → StrChunk ..0000.19279!6 len:0 [6]
│                            ← StrChunk ..0000.19353!9 len:0 [9]
│                              ← StrChunk ..0000.19232!30 len:0 [30]
│                                ← StrChunk ..0000.19220!10 len:0 [10]
│                              → StrChunk ..0000.19288!9 len:0 [9]
│                                ← StrChunk ..0000.19262!17 len:0 [17]
│                            → StrChunk ..0000.19299!43 len:0 [43]
│                              ← StrChunk ..0000.19285!3 len:0 [3]
│                                ← StrChunk ..0000.19297!2 len:0 [2]
│                              → StrChunk ..0000.19602!6 len:0 [6]
│                                ← StrChunk ..0000.19362!76 len:0 [76]
│                        → StrChunk ..0000.19838!16 len:0 [16]
│                          ← StrChunk ..0000.19720!48 len:0 [48]
│                            ← StrChunk ..0000.19438!115 len:0 [115]
│                              ← StrChunk ..0000.19608!1 len:0 [1]
│                                ← StrChunk ..0000.19630!9 len:0 [9]
│                              → StrChunk ..0000.19677!1 len:0 [1]
│                                ← StrChunk ..0000.19555!47 len:0 [47]
│                            → StrChunk ..0000.19826!7 len:0 [7]
│                              ← StrChunk ..0000.19768!1 len:0 [1]
│                                ← StrChunk ..0000.19769!57 len:0 [57]
│                              → StrChunk ..0000.19854!8 len:0 [8]
│                                ← StrChunk ..0000.19835!3 len:0 [3]
│                          → StrChunk ..0000.19833!1 len:0 [1]
│                            ← StrChunk ..0000.20088!107 len:0 [107]
│                              ← StrChunk ..0000.20019!65 len:0 [65]
│                                ← StrChunk ..0000.19862!155 len:0 [155]
│                              → StrChunk ..0000.20017!1 len:0 [1]
│                                ← StrChunk ..0000.20084!2 len:0 [2]
│                            → StrChunk ..0000.19694!1 len:0 [1]
│                              ← StrChunk ..0000.19696!4 len:0 [4]
│                                ← StrChunk ..0000.19678!16 len:0 [16]
│                              → StrChunk ..0000.19230!1 len:0 [1]
│                                ← StrChunk ..0000.19553!1 len:0 [1]
│                      → StrChunk ..0000.17181!4 len:23 [4]
│                        ← StrChunk ..0000.17837!5 len:0 [5]
│                          ← StrChunk ..0000.18569!1 len:0 [1]
│                            ← StrChunk ..0000.18867!4 len:0 [4]
│                              ← StrChunk ..0000.19086!1 len:0 [1]
│                                ← StrChunk ..0000.19113!1 len:0 [1]
│                                → StrChunk ..0000.19045!1 len:0 [1]
│                              → StrChunk ..0000.18632!1 len:0 [1]
│                                ← StrChunk ..0000.18755!3 len:0 [3]
│                            → StrChunk ..0000.18364!6 len:0 [6]
│                              ← StrChunk ..0000.18542!7 len:0 [7]
│                                ← StrChunk ..0000.18556!3 len:0 [3]
│                              → StrChunk ..0000.17960!1 len:0 [1]
│                                ← StrChunk ..0000.18270!13 len:0 [13]
│                          → StrChunk ..0000.17650!2 len:0 [2]
│                            ← StrChunk ..0000.17680!1 len:0 [1]
│                              ← StrChunk ..0000.17683!1 len:0 [1]
│                                ← StrChunk ..0000.17735!3 len:0 [3]
│                              → StrChunk ..0000.17662!2 len:0 [2]
│                                ← StrChunk ..0000.17667!1 len:0 [1]
│                            → StrChunk ..0000.17617!2 len:0 [2]
│                              ← StrChunk ..0000.17621!8 len:0 [8]
│                                ← StrChunk ..0000.17610!7 len:0 [7]
│                              → StrChunk ..0000.17201!5 len:0 [5]
│                                ← StrChunk ..0000.17606!1 len:0 [1]
│                        → StrChunk ..0000.116493!6 len:23 [6]
│                          ← StrChunk ..0000.209298!8 len:23 { " include" }
│                            ← StrChunk ..0000.17027!1 len:6 [1]
│                              ← StrChunk ..0000.17159!5 len:0 [5]
│                                ← StrChunk ..0000.17176!1 len:0 [1]
│                              → StrChunk ..0000.62574!6 len:6 { "\n\\fi %" }
│                                ← StrChunk ..0000.16905!1 len:0 [1]
│                            → StrChunk ..0000.62580!11 len:9 [11]
│                              ← StrChunk ..0000.209306!1 len:8 [1]
│                                ← StrChunk ..0000.209308!8 len:8 { "appendix" }
│                              → StrChunk ..0000.116473!18 len:1 [18]
│                                ← StrChunk ..0000.116472!1 len:1 { "\n" }
│                          → StrChunk ..0000.116842!1 len:0 [1]
│                            ← StrChunk ..0000.118907!1 len:0 [1]
│                              ← StrChunk ..0000.121327!22 len:0 [22]
│                                ← StrChunk ..0000.118867!40 len:0 [40]
│                              → StrChunk ..0000.116522!193 len:0 [193]
│                                ← StrChunk ..0000.116499!21 len:0 [21]
│                            → StrChunk ..0000.116715!108 len:0 [108]
│                              ← StrChunk ..0000.116843!14 len:0 [14]
│                                ← StrChunk ..0000.116837!5 len:0 [5]
│                              → StrChunk ..0000.116969!12 len:0 [12]
│                                ← StrChunk ..0000.116857!109 len:0 [109]
│                    → StrChunk ..0000.118606!1 len:0 [1]
│                      ← StrChunk ..0000.118825!42 len:0 [42]
│                        ← StrChunk ..0000.117454!7 len:0 [7]
│                          ← StrChunk ..0000.117326!57 len:0 [57]
│                            ← StrChunk ..0000.117312!14 len:0 [14]
│                              ← StrChunk ..0000.116968!1 len:0 [1]
│                                ← StrChunk ..0000.116966!1 len:0 [1]
│                                → StrChunk ..0000.116981!135 len:0 [135]
│                              → StrChunk ..0000.117138!174 len:0 [174]
│                                ← StrChunk ..0000.117116!20 len:0 [20]
│                            → StrChunk ..0000.117383!7 len:0 [7]
│                              ← StrChunk ..0000.117546!75 len:0 [75]
│                                ← StrChunk ..0000.119247!22 len:0 [22]
│                              → StrChunk ..0000.117390!20 len:0 [20]
│                                ← StrChunk ..0000.117642!9 len:0 [9]
│                          → StrChunk ..0000.117712!23 len:0 [23]
│                            ← StrChunk ..0000.117651!33 len:0 [33]
│                              ← StrChunk ..0000.117461!64 len:0 [64]
│                                ← StrChunk ..0000.117410!32 len:0 [32]
│                              → StrChunk ..0000.117735!13 len:0 [13]
│                                ← StrChunk ..0000.117686!26 len:0 [26]
│                            → StrChunk ..0000.118170!2 len:0 [2]
│                              ← StrChunk ..0000.117762!24 len:0 [24]
│                                ← StrChunk ..0000.117748!2 len:0 [2]
│                              → StrChunk ..0000.118745!72 len:0 [72]
│                                ← StrChunk ..0000.118675!68 len:0 [68]
│                        → StrChunk ..0000.118128!41 len:0 [41]
│                          ← StrChunk ..0000.117814!16 len:0 [16]
│                            ← StrChunk ..0000.118674!1 len:0 [1]
│                              ← StrChunk ..0000.118743!1 len:0 [1]
│                                ← StrChunk ..0000.118817!4 len:0 [4]
│                              → StrChunk ..0000.117800!12 len:0 [12]
│                                ← StrChunk ..0000.117786!1 len:0 [1]
│                            → StrChunk ..0000.117833!1 len:0 [1]
│                              ← StrChunk ..0000.117787!5 len:0 [5]
│                                ← StrChunk ..0000.117812!1 len:0 [1]
│                              → StrChunk ..0000.117834!90 len:0 [90]
│                                ← StrChunk ..0000.117792!7 len:0 [7]
│                          → StrChunk ..0000.118351!1 len:0 [1]
│                            ← StrChunk ..0000.118008!13 len:0 [13]
│                              ← StrChunk ..0000.118021!7 len:0 [7]
│                                ← StrChunk ..0000.117924!84 len:0 [84]
│                              → StrChunk ..0000.118176!121 len:0 [121]
│                                ← StrChunk ..0000.118028!96 len:0 [96]
│                            → StrChunk ..0000.118673!1 len:0 [1]
│                              ← StrChunk ..0000.118666!6 len:0 [6]
│                                ← StrChunk ..0000.118408!155 len:0 [155]
│                              → StrChunk ..0000.118601!4 len:0 [4]
│                                ← StrChunk ..0000.118563!3 len:0 [3]
│                      → StrChunk ..0000.119739!133 len:0 [133]
│                        ← StrChunk ..0000.118908!20 len:0 [20]
│                          ← StrChunk ..0000.119403!6 len:0 [6]
│                            ← StrChunk ..0000.119026!149 len:0 [149]
│                              ← StrChunk ..0000.118608!55 len:0 [55]
│                                ← StrChunk ..0000.118566!34 len:0 [34]
│                              → StrChunk ..0000.119280!119 len:0 [119]
│                                ← StrChunk ..0000.119215!21 len:0 [21]
│                            → StrChunk ..0000.119175!12 len:0 [12]
│                              ← StrChunk ..0000.119236!11 len:0 [11]
│                                ← StrChunk ..0000.119399!2 len:0 [2]
│                              → StrChunk ..0000.119187!3 len:0 [3]
│                                ← StrChunk ..0000.119193!5 len:0 [5]
│                          → StrChunk ..0000.119523!83 len:0 [83]
│                            ← StrChunk ..0000.119434!40 len:0 [40]
│                              ← StrChunk ..0000.119409!23 len:0 [23]
│                                ← StrChunk ..0000.121302!25 len:0 [25]
│                              → StrChunk ..0000.120099!15 len:0 [15]
│                                ← StrChunk ..0000.119516!7 len:0 [7]
│                            → StrChunk ..0000.120133!1 len:0 [1]
│                              ← StrChunk ..0000.122044!13 len:0 [13]
│                                ← StrChunk ..0000.120114!19 len:0 [19]
│                              → StrChunk ..0000.119689!38 len:0 [38]
│                                ← StrChunk ..0000.119606!81 len:0 [81]
│                        → StrChunk ..0000.122271!185 len:0 [185]
│                          ← StrChunk ..0000.119963!18 len:0 [18]
│                            ← StrChunk ..0000.119899!34 len:0 [34]
│                              ← StrChunk ..0000.119872!10 len:0 [10]
│                                ← StrChunk ..0000.119882!17 len:0 [17]
│                              → StrChunk ..0000.119933!7 len:0 [7]
│                                ← StrChunk ..0000.119940!11 len:0 [11]
│                            → StrChunk ..0000.122057!22 len:0 [22]
│                              ← StrChunk ..0000.119981!63 len:0 [63]
│                                ← StrChunk ..0000.119962!1 len:0 [1]
│                              → StrChunk ..0000.122220!13 len:0 [13]
│                                ← StrChunk ..0000.120044!55 len:0 [55]
│                          → StrChunk ..0000.123652!22 len:0 [22]
│                            ← StrChunk ..0000.123582!2 len:0 [2]
│                              ← StrChunk ..0000.122513!49 len:0 [49]
│                                ← StrChunk ..0000.122460!51 len:0 [51]
│                              → StrChunk ..0000.123586!64 len:0 [64]
│                                ← StrChunk ..0000.122562!1 len:0 [1]
│                            → StrChunk ..0000.122456!2 len:0 [2]
│                              ← StrChunk ..0000.122511!1 len:0 [1]
│                                ← StrChunk ..0000.123650!1 len:0 [1]
│                              → StrChunk ..0000.122079!37 len:0 [37]
│                                ← StrChunk ..0000.122233!19 len:0 [19]
│                  → StrChunk ..0000.120587!1 len:15 [1]
│                    ← StrChunk ..0000.123401!7 len:0 [7]
│                      ← StrChunk ..0000.119432!1 len:0 [1]
│                        ← StrChunk ..0000.123884!3 len:0 [3]
│                          ← StrChunk ..0000.123734!104 len:0 [104]
│                            ← StrChunk ..0000.122156!10 len:0 [10]
│                              ← StrChunk ..0000.122135!21 len:0 [21]
│                                ← StrChunk ..0000.122116!1 len:0 [1]
│                                → StrChunk ..0000.122573!9 len:0 [9]
│                              → StrChunk ..0000.123679!1 len:0 [1]
│                                ← StrChunk ..0000.122168!52 len:0 [52]
│                            → StrChunk ..0000.123849!25 len:0 [25]
│                              ← StrChunk ..0000.123838!3 len:0 [3]
│                                ← StrChunk ..0000.123899!5 len:0 [5]
│                              → StrChunk ..0000.123874!6 len:0 [6]
│                                ← StrChunk ..0000.123904!10 len:0 [10]
│                          → StrChunk ..0000.122166!1 len:0 [1]
│                            ← StrChunk ..0000.123880!2 len:0 [2]
│                              ← StrChunk ..0000.123887!2 len:0 [2]
│                                ← StrChunk ..0000.123891!6 len:0 [6]
│                              → StrChunk ..0000.123680!9 len:0 [9]
│                                ← StrChunk ..0000.123841!4 len:0 [4]
│                            → StrChunk ..0000.119727!6 len:0 [6]
│                              ← StrChunk ..0000.122117!8 len:0 [8]
│                                ← StrChunk ..0000.122133!1 len:0 [1]
│                              → StrChunk ..0000.119474!21 len:0 [21]
│                                ← StrChunk ..0000.119687!1 len:0 [1]
│                        → StrChunk ..0000.122582!1 len:0 [1]
│                          ← StrChunk ..0000.117684!1 len:0 [1]
│                            ← StrChunk ..0000.118297!27 len:0 [27]
│                              ← StrChunk ..0000.118352!28 len:0 [28]
│                                ← StrChunk ..0000.118600!1 len:0 [1]
│                              → StrChunk ..0000.117750!6 len:0 [6]
│                                ← StrChunk ..0000.118124!4 len:0 [4]
│                            → StrChunk ..0000.116520!1 len:0 [1]
│                              ← StrChunk ..0000.117136!1 len:0 [1]
│                                ← StrChunk ..0000.117525!21 len:0 [21]
│                              → StrChunk ..0000.62591!1 len:0 [1]
│                                ← StrChunk ..0000.116491!1 len:0 [1]
│                          → StrChunk ..0000.123232!2 len:0 [2]
│                            ← StrChunk ..0000.122773!1 len:0 [1]
│                              ← StrChunk ..0000.122689!22 len:0 [22]
│                                ← StrChunk ..0000.122584!95 len:0 [95]
│                              → StrChunk ..0000.123242!18 len:0 [18]
│                                ← StrChunk ..0000.123492!4 len:0 [4]
│                            → StrChunk ..0000.123265!1 len:0 [1]
│                              ← StrChunk ..0000.123260!1 len:0 [1]
│                                ← StrChunk ..0000.122774!57 len:0 [57]
│                              → StrChunk ..0000.123266!7 len:0 [7]
│                                ← StrChunk ..0000.123381!20 len:0 [20]
│                      → StrChunk ..0000.123044!27 len:0 [27]
│                        ← StrChunk ..0000.123356!25 len:0 [25]
│                          ← StrChunk ..0000.123292!52 len:0 [52]
│                            ← StrChunk ..0000.123517!65 len:0 [65]
│                              ← StrChunk ..0000.123408!2 len:0 [2]
│                                ← StrChunk ..0000.122831!19 len:0 [19]
│                                → StrChunk ..0000.122850!20 len:0 [20]
│                              → StrChunk ..0000.123273!17 len:0 [17]
│                                ← StrChunk ..0000.123478!1 len:0 [1]
│                            → StrChunk ..0000.123481!1 len:0 [1]
│                              ← StrChunk ..0000.122870!2 len:0 [2]
│                                ← StrChunk ..0000.123290!1 len:0 [1]
│                              → StrChunk ..0000.122872!22 len:0 [22]
│                                ← StrChunk ..0000.123346!1 len:0 [1]
│                          → StrChunk ..0000.123157!9 len:0 [9]
│                            ← StrChunk ..0000.122904!2 len:0 [2]
│                              ← StrChunk ..0000.122711!62 len:0 [62]
│                                ← StrChunk ..0000.122894!10 len:0 [10]
│                              → StrChunk ..0000.122965!56 len:0 [56]
│                                ← StrChunk ..0000.122952!9 len:0 [9]
│                            → StrChunk ..0000.123021!23 len:0 [23]
│                              ← StrChunk ..0000.123166!2 len:0 [2]
│                                ← StrChunk ..0000.123170!1 len:0 [1]
│                              → StrChunk ..0000.122906!36 len:0 [36]
│                                ← StrChunk ..0000.122961!2 len:0 [2]
│                        → StrChunk ..0000.120268!36 len:0 [36]
│                          ← StrChunk ..0000.122679!5 len:0 [5]
│                            ← StrChunk ..0000.123144!13 len:0 [13]
│                              ← StrChunk ..0000.123071!22 len:0 [22]
│                                ← StrChunk ..0000.123181!4 len:0 [4]
│                              → StrChunk ..0000.123093!42 len:0 [42]
│                                ← StrChunk ..0000.123185!7 len:0 [7]
│                            → StrChunk ..0000.120136!29 len:0 [29]
│                              ← StrChunk ..0000.120134!1 len:0 [1]
│                                ← StrChunk ..0000.122583!1 len:0 [1]
│                              → StrChunk ..0000.120165!102 len:0 [102]
│                                ← StrChunk ..0000.121277!25 len:0 [25]
│                          → StrChunk ..0000.120383!8 len:0 [8]
│                            ← StrChunk ..0000.120432!1 len:0 [1]
│                              ← StrChunk ..0000.120418!13 len:0 [13]
│                                ← StrChunk ..0000.120314!2 len:0 [2]
│                              → StrChunk ..0000.120336!23 len:0 [23]
│                                ← StrChunk ..0000.120316!14 len:0 [14]
│                            → StrChunk ..0000.120477!83 len:0 [83]
│                              ← StrChunk ..0000.120403!2 len:0 [2]
│                                ← StrChunk ..0000.120363!8 len:0 [8]
│                              → StrChunk ..0000.120560!2 len:0 [2]
│                                ← StrChunk ..0000.120588!7 len:0 [7]
│                    → StrChunk ..0000.121746!3 len:15 [3]
│                      ← StrChunk ..0000.121349!24 len:0 [24]
│                        ← StrChunk ..0000.121895!4 len:0 [4]
│                          ← StrChunk ..0000.120718!1 len:0 [1]
│                            ← StrChunk ..0000.120655!30 len:0 [30]
│                              ← StrChunk ..0000.120654!1 len:0 [1]
│                                ← StrChunk ..0000.120562!10 len:0 [10]
│                                → StrChunk ..0000.120572!4 len:0 [4]
│                              → StrChunk ..0000.120604!50 len:0 [50]
│                                ← StrChunk ..0000.120576!1 len:0 [1]
│                            → StrChunk ..0000.121903!48 len:0 [48]
│                              ← StrChunk ..0000.121846!47 len:0 [47]
│                                ← StrChunk ..0000.120727!113 len:0 [113]
│                              → StrChunk ..0000.121951!42 len:0 [42]
│                                ← StrChunk ..0000.121999!14 len:0 [14]
│                          → StrChunk ..0000.121215!45 len:0 [45]
│                            ← StrChunk ..0000.121040!6 len:0 [6]
│                              ← StrChunk ..0000.120840!84 len:0 [84]
│                                ← StrChunk ..0000.121893!1 len:0 [1]
│                              → StrChunk ..0000.121158!55 len:0 [55]
│                                ← StrChunk ..0000.120924!102 len:0 [102]
│                            → StrChunk ..0000.121213!1 len:0 [1]
│                              ← StrChunk ..0000.121260!2 len:0 [2]
│                                ← StrChunk ..0000.121264!13 len:0 [13]
│                              → StrChunk ..0000.121051!107 len:0 [107]
│                                ← StrChunk ..0000.121026!1 len:0 [1]
│                        → StrChunk ..0000.121724!11 len:0 [11]
│                          ← StrChunk ..0000.121694!10 len:0 [10]
│                            ← StrChunk ..0000.122029!2 len:0 [2]
│                              ← StrChunk ..0000.121653!26 len:0 [26]
│                                ← StrChunk ..0000.121378!134 len:0 [134]
│                              → StrChunk ..0000.122020!1 len:0 [1]
│                                ← StrChunk ..0000.121679!15 len:0 [15]
│                            → StrChunk ..0000.122032!8 len:0 [8]
│                              ← StrChunk ..0000.121704!18 len:0 [18]
│                                ← StrChunk ..0000.122014!3 len:0 [3]
│                              → StrChunk ..0000.121740!6 len:0 [6]
│                                ← StrChunk ..0000.121722!2 len:0 [2]
│                          → StrChunk ..0000.121512!1 len:0 [1]
│                            ← StrChunk ..0000.121774!59 len:0 [59]
│                              ← StrChunk ..0000.122041!3 len:0 [3]
│                                ← StrChunk ..0000.121763!11 len:0 [11]
│                              → StrChunk ..0000.121833!1 len:0 [1]
│                                ← StrChunk ..0000.121835!11 len:0 [11]
│                            → StrChunk ..0000.121566!11 len:0 [11]
│                              ← StrChunk ..0000.121757!6 len:0 [6]
│                                ← StrChunk ..0000.121515!51 len:0 [51]
│                              → StrChunk ..0000.121577!35 len:0 [35]
│                                ← StrChunk ..0000.121650!3 len:0 [3]
│                      → StrChunk ..0000.3439!1 len:15 [1]
│                        ← StrChunk ..0000.120361!1 len:0 [1]
│                          ← StrChunk ..0000.121027!1 len:0 [1]
│                            ← StrChunk ..0000.121029!2 len:0 [2]
│                              ← StrChunk ..0000.121513!1 len:0 [1]
│                                ← StrChunk ..0000.121612!38 len:0 [38]
│                              → StrChunk ..0000.121031!3 len:0 [3]
│                                ← StrChunk ..0000.121037!3 len:0 [3]
│                            → StrChunk ..0000.120467!5 len:0 [5]
│                              ← StrChunk ..0000.120577!9 len:0 [9]
│                                ← StrChunk ..0000.120719!4 len:0 [4]
│                              → StrChunk ..0000.120371!12 len:0 [12]
│                                ← StrChunk ..0000.120405!13 len:0 [13]
│                          → StrChunk ..0000.126758!66 len:0 [66]
│                            ← StrChunk ..0000.120304!5 len:0 [5]
│                              ← StrChunk ..0000.120330!3 len:0 [3]
│                                ← StrChunk ..0000.120359!1 len:0 [1]
│                              → StrChunk ..0000.126726!30 len:0 [30]
│                                ← StrChunk ..0000.120135!1 len:0 [1]
│                            → StrChunk ..0000.14290!4 len:0 [4]
│                              ← StrChunk ..0000.126722!3 len:0 [3]
│                                ← StrChunk ..0000.126756!1 len:0 [1]
│                              → StrChunk ..0000.3658!1 len:0 [1]
│                                ← StrChunk ..0000.4710!1 len:0 [1]
│                        → StrChunk ..0000.2868!1 len:15 [1]
│                          ← StrChunk ..0000.3361!2 len:0 [2]
│                            ← StrChunk ..0000.3368!11 len:0 [11]
│                              ← StrChunk ..0000.3653!2 len:0 [2]
│                                ← StrChunk ..0000.3367!1 len:0 [1]
│                              → StrChunk ..0000.3379!1 len:0 [1]
│                                ← StrChunk ..0000.3381!1 len:0 [1]
│                            → StrChunk ..0000.3143!1 len:0 [1]
│                              ← StrChunk ..0000.3227!4 len:0 [4]
│                                ← StrChunk ..0000.3268!2 len:0 [2]
│                              → StrChunk ..0000.2926!1 len:0 [1]
│                                ← StrChunk ..0000.3061!2 len:0 [2]
│                          → StrChunk ..0000.445!3 len:15 [3]
│                            ← StrChunk ..0000.530!38 len:15 [38]
│                              ← StrChunk ..0000.123938!8 len:0 [8]
│                                ← StrChunk ..0000.495!35 len:0 [35]
│                              → StrChunk ..0000.480!15 len:15 { "\\end{document}\n" }
│                                ← StrChunk ..0000.479!1 len:0 [1]
│                            → StrChunk ..0000.249!2 len:0 [2]
│                              ← StrChunk ..0000.254!1 len:0 [1]
│                                ← StrChunk ..0000.377!5 len:0 [5]
│                              → StrChunk ..0000.62!1 len:0 [1]
│                                ← StrChunk ..0000.229!1 len:0 [1]
│  
├─ Index (1 nodes)
│  └─ StrNode ..0000.1
│  
├─ View
│  └─ "\\documentclass[10pt,journal,compsoc]{IEEEtran}\n\\PassOptionsToPackage{hyphens}{url}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amsmath} % align environment\n\\usepackage{amssymb} % mathbb\n\\usepackage{bussproofs} % notation for inference rules\n\\usepackage{rotating} % sidewaysfigure\n\\usepackage{hyperref}\n\\usepackage[hyphenbreaks]{breakurl} % Fix URL line breaking when using dvips (e.g. arxiv.org)\n\\usepackage[nocompress]{cite}\n\n% Theorem environments\n\\usepackage{amsthm}\n\\newtheorem{definition}{Definition}\n\\newtheorem{theorem}{Theorem}\n\\newtheorem{lemma}[theorem]{Lemma}\n\\newtheorem*{convergence-thm}{Theorem}\n\n% Diagrams\n\\usepackage{tikz}\n\\usetikzlibrary{arrows}\n\n\\hyphenation{da-ta-cen-ter da-ta-cen-ters net-works time-stamp}\n\n\\newif\\ifincludeappendix\n\\includeappendixtrue\n\n\\newcommand{\\evalto}{\\;\\Longrightarrow\\;}\n\n% Placeholder character like \\textvisiblespace, but works in math mode\n\\newcommand{\\placeholder}{%\n  \\makebox[0.7em]{%\n    \\kern.07em\n    \\vrule height.3ex\n    \\hrulefill\n    \\vrule height.3ex\n    \\kern.07em\n  }%\n}\n\n% Span multiple columns within an alignat math environment\n\\newcommand{\\multialign}[2]{%\n  \\multispan{#1}\\mbox{$\\displaystyle{}#2$}%\n}\n\n\\begin{document}\n\\sloppy\n\\title{A Conflict-Free Replicated JSON Datatype}\n\\author{Martin Kleppmann and Alastair R. Beresford\n\\thanks{M. Kleppmann and A.R. Beresford are with the University of Cambridge Computer Laboratory, Cambridge, UK.\\protect\\\\Email: \\url{mk428@cl.cam.ac.uk}, \\url{arb33@cl.cam.ac.uk}.}}\n\n\\IEEEtitleabstractindextext{%\n\\begin{abstract}\n% abstract word limit: 100-200 words\nMany applications model their data in a general-purpose storage format such as JSON. This data structure is modified by the application as a result of user input. Such modifications are well understood if performed sequentially on a single copy of the data, but if the data is replicated and modified concurrently on multiple devices, it is unclear what the semantics should be. In this paper we present an algorithm and formal semantics for a JSON data structure that automatically resolves concurrent modifications such that no updates are lost, and such that all replicas converge towards the same state (a conflict-free replicated datatype or CRDT). It supports arbitrarily nested list and map types, which can be modified by insertion, deletion and assignment. The algorithm performs all merging client-side and does not depend on ordering guarantees from the network, making it suitable for deployment on mobile devices with poor network connectivity, in peer-to-peer networks, and in messaging systems with end-to-end encryption.\n\\end{abstract}\n\n\\begin{IEEEkeywords}\nCRDTs, Collaborative Editing, P2P, JSON, Optimistic Replication, Operational Semantics, Eventual Consistency.\n\\end{IEEEkeywords}}\n\\maketitle\n\n\\IEEEraisesectionheading{\\section{Introduction}\\label{sec:introduction}}\n\n\\IEEEPARstart{U}{sers} of mobile devices, such as smartphones, expect applications to continue working while the device is offline or has poor network connectivity, and to synchronize its state with the user's other devices when the network is available. Examples of such applications include calendars, address books, note-taking tools, to-do lists, and password managers. Similarly, collaborative work often requires several people to simultaneously edit the same text document, spreadsheet, presentation, graphic, and other kinds of document, with each person's edits reflected on the other collaborators' copies of the document with minimal delay.\n\nWhat these applications have in common is that the application state needs to be replicated to several devices, each of which may modify the state locally. The traditional approach to concurrency control, serializability, would cause the application to become unusable at times of poor network connectivity~\\cite{Davidson:1985hv}. If we require that applications work regardless of network availability, we must assume that users can make arbitrary modifications concurrently on different devices, and that any resulting conflicts must be resolved.\n\nThe simplest way to resolve conflicts is to discard some modifications when a conflict occurs, for example using a ``last writer wins'' policy. However, this approach is undesirable as it incurs data loss. An alternative is to let the user manually resolve the conflict, which is tedious and error-prone, and therefore should be avoided whenever possible.\n\nCurrent applications solve this problem with a range of ad-hoc and application-specific mechanisms. In this paper we present a general-purpose datatype that provides the full expressiveness of the JSON data model, and supports concurrent modifications without loss of information. As we shall see later, our approach typically supports the automatic merging of concurrent modifications into a JSON data structure. We introduce a single, general mechanism (a multi-value register) into our model to record conflicting updates to leaf nodes in the JSON data structure. This mechanism then provides a consistent basis on which applications can resolve any remaining conflicts through programmatic means, or via further user input.  We expect that implementations of this datatype will drastically simplify the development of collaborative and state-synchronizing applications for mobile devices.\n\n\\subsection{JSON Data Model}\n\nJSON is a popular general-purpose data encoding format, used in many databases and web services. It has similarities to XML, and we compare them in Section~\\ref{sec:json-xml}. The structure of a JSON document can optionally be constrained by a schema; however, for simplicity, this paper discusses only untyped JSON without an explicit schema.\n\nA JSON document is a tree containing two types of branch node:\n\n\\begin{description}\n\\item[Map:] A node whose children have no defined order, and where each child is labelled with a string \\emph{key}. A key uniquely identifies one of the children. We treat keys as immutable, but values as mutable, and key-value mappings can be added and removed from the map. A JSON map is also known as an \\emph{object}.\n\\item[List:] A node whose children have an order defined by the application. The list can be mutated by inserting or deleting list elements. A JSON list is also known as an \\emph{array}.\n\\end{description}\n\nA child of a branch node can be either another branch node, or a leaf node. A leaf of the tree contains a primitive value (string, number, boolean, or null). We treat primitive values as immutable, but allow the value of a leaf node to be modified by treating it as a \\emph{register} that can be assigned a new value.\n\nThis model is sufficient to express the state of a wide range of applications. For example, a text document can be represented by a list of single-character strings; character-by-character edits are then expressed as insertions and deletions of list elements. In Section~\\ref{sec:examples} we describe four more complex examples of using JSON to model application data.\n\n\\subsection{Replication and Conflict Resolution}\\label{sec:intro-replication}\n\nWe consider systems in which a full copy of the JSON document is replicated on several devices. Those devices could be servers in datacenters, but we focus on mobile devices such as smartphones and laptops, which have intermittent network connectivity. We do not distinguish between devices owned by the same user and different users. Our model allows each device to optimistically modify its local replica of the document, and to asynchronously propagate those edits to other replicas.\n\nOur only requirement of the network is that messages sent by one replica are eventually delivered to all other replicas, by retrying if delivery fails. We assume the network may arbitrarily delay, reorder and duplicate messages.\n\nOur algorithm works client-side and does not depend on any server to transform or process messages. This approach allows messages to be delivered via a peer-to-peer network as well as a secure messaging protocol with end-to-end encryption~\\cite{Unger:2015kg}. The details of the network implementation and cryptographic protocols are outside of the scope of this paper.\n\nIn Section~\\ref{sec:semantics} we define formal semantics describing how conflicts are resolved when a JSON document is concurrently modified on different devices. Our design is based on three simple principles:\n\\begin{enumerate}\n\\item All replicas of the data structure should automatically converge towards the same state (a requirement known as \\emph{strong eventual consistency}~\\cite{Shapiro:2011un}).\n\\item No user input should be lost due to concurrent modifications.\n\\item If all sequential permutations of a set of updates lead to the same state, then concurrent execution of those updates also leads to the same state~\\cite{Bieniusa:2012gt}.\n\\end{enumerate}\n\n\\subsection{Our Contributions}\n\nOur main contribution in this work is to define an algorithm and formal semantics for collaborative, concurrent editing of JSON data structures with automatic conflict resolution. Although similar algorithms have previously been defined for lists, maps and registers individually (see Section~\\ref{sec:related}), to our knowledge this paper is the first to integrate all of these structures into an arbitrarily composable datatype that can be deployed on any network topology.\n\nA key requirement of conflict resolution is that after any sequence of concurrent modifications, all replicas eventually converge towards the same state. In Section~\\ref{sec:convergence} and the appendix we prove a theorem to show that our algorithm satisfies this requirement.\n\nComposing maps and lists into arbitrarily nested structures opens up subtle challenges that do not arise in flat structures, due to the possibility of concurrent edits at different levels of the tree. We illustrate some of those challenges by example in Section~\\ref{sec:examples}. Nested structures are an important requirement for many applications. Consequently, the long-term goal of our work is to simplify the development of applications that use optimistic replication by providing a general algorithm for conflict resolution whose details can largely be hidden inside an easy-to-use software library.\n\n\\section{Related Work}\\label{sec:related}\n\nIn this section we discuss existing approaches to optimistic replication, collaborative editing and conflict resolution.\n\n\\subsection{Operational Transformation}\\label{sec:related-ot}\n\nAlgorithms based on \\emph{operational transformation} (OT) have long been used for collaborative editing applications~\\cite{Ellis:1989ue,Ressel:1996wx,Sun:1998vf,Nichols:1995fd}. Most of them treat a document as a single ordered list (of characters, for example) and do not support nested tree structures that are required by many applications. Some algorithms generalize OT to editing XML documents~\\cite{Davis:2002iv,Ignat:2003jy,Wang:2015vo}, which provides nesting of ordered lists, but these algorithms do not support key-value maps as defined in this paper (see Section~\\ref{sec:json-xml}). The performance of OT algorithms degrades rapidly as the number of concurrent operations increases~\\cite{Li:2006kd,Mehdi:2011ke}.\n\nMost deployed OT collaboration systems, including Google Docs~\\cite{DayRichter:2010tt}, Etherpad~\\cite{Etherpad:2011um}, Novell Vibe~\\cite{Spiewak:2010vw} and Apache Wave (formerly Google Wave~\\cite{Wang:2015vo}), rely on a single server to decide on a total ordering of operations~\\cite{Lemonik:2016wh}, a design decision inherited from the Jupiter system~\\cite{Nichols:1995fd}. This approach has the advantage of making the transformation functions simpler and less error-prone~\\cite{Imine:2003ks}, but it does not meet our requirements, since we want to support peer-to-peer collaboration without requiring a single server.\n\nMany secure messaging protocols, which we plan to use for encrypted collaboration, do not guarantee that different recipients will see messages in the same order~\\cite{Unger:2015kg}. Although it is possible to decide on a total ordering of operations without using a single server by using an atomic broadcast protocol~\\cite{Defago:2004ji}, such protocols are equivalent to consensus~\\cite{Chandra:1996cp}, so they can only safely make progress if a quorum of participants are reachable. We expect that in peer-to-peer systems of mobile devices participants will frequently be offline, and so any algorithm requiring atomic broadcast would struggle to reach a quorum and become unavailable. Without quorums, the strongest guarantee a system can give is causal ordering~\\cite{Attiya:2015dm}.\n\nThe Google Realtime API~\\cite{Google:2015vk} is to our knowledge the only implementation of OT that supports arbitrary nesting of lists and maps. Like Google Docs, it relies on a single server~\\cite{Lemonik:2016wh}. As a proprietary product, details of its algorithms have not been published.\n\n\\subsection{CRDTs}\\label{sec:related-crdts}\n\nConflict-free replicated datatypes (CRDTs) are a family of data structures that support concurrent modification and guarantee convergence of concurrent updates. They work by attaching additional metadata to the data structure, making modification operations commutative by construction. The JSON datatype described in this paper is a CRDT.\n\nCRDTs for registers, counters, maps, and sets are well-known~\\cite{Shapiro:2011un,Shapiro:2011wy}, and have been implemented in various deployed systems such as Riak~\\cite{Brown:2014hs,Brown:2013wy}. For ordered lists, various algorithms have been proposed, including WOOT~\\cite{Oster:2006wj}, RGA~\\cite{Roh:2011dw}, Treedoc~\\cite{Preguica:2009fz}, Logoot~\\cite{Weiss:2010hx}, and LSEQ~\\cite{Nedelec:2013ky}. Attiya et al.~\\cite{Attiya:2016kh} analyze the metadata overhead of collaboratively edited lists, and provide a correctness proof of the RGA algorithm. However, none of them support nesting: all of the aforementioned algorithms assume that each of their elements is a primitive value, not another CRDT.\n\nThe problem of nesting one CRDT inside another (also known as \\emph{composition} or \\emph{embedding}) has only been studied more recently. Riak allows nesting of counters and registers inside maps, and of maps within other maps~\\cite{Brown:2014hs,Brown:2013wy}. Embedding counters inside maps raises questions of semantics, which have been studied by Baquero, Almeida and Lerche~\\cite{Baquero:2016iv}. Almeida et al.~\\cite{Almeida:2016tk} also define delta mutations for nested maps, and Baquero et al.~\\cite{Baquero:2015tm} define a theoretical framework for composition of state-based CRDTs, based on lattices. None of this work integrates CRDTs for ordered lists, but the treatment of causality in these datatypes forms a basis for the semantics developed in this paper.\n\nBurckhardt et al.~\\cite{Burckhardt:2012jy} define \\emph{cloud types}, which are similar to CRDTs and can be composed. They define \\emph{cloud arrays}, which behave similarly to our map datatype, and \\emph{entities}, which are like unordered sets or relations; ordered lists are not defined in this framework.\n\nOn the other hand, Martin et al.~\\cite{Martin:2010ih} generalize Logoot~\\cite{Weiss:2010hx} to support collaborative editing of XML documents~-- that is, a tree of nested ordered lists without nested maps. As discussed in Section~\\ref{sec:json-xml}, such a structure does not capture the expressiveness of JSON.\n\nAlthough CRDTs for registers, maps and ordered lists have existed for years in isolation, we are not aware of any prior work that allows them all to be composed into an arbitrarily nested CRDT with a JSON-like structure.\n\n\\subsection{Other Approaches}\\label{sec:related-other}\n\nMany replicated data systems need to deal with the problem of concurrent, conflicting modifications, but the solutions are often ad-hoc. For example, in Dynamo~\\cite{DeCandia:2007ui} and CouchDB, if several values are concurrently written to the same key, the database preserves all of these values, and leaves conflict resolution to application code -- in other words, the only datatype it supports is a multi-value register. Naively chosen merge functions often exhibit anomalies such as deleted items reappearing~\\cite{DeCandia:2007ui}. We believe that conflict resolution is not a simple matter that can reasonably be left to application programmers.\n\nAnother frequently-used approach to conflict resolution is \\emph{last writer wins} (LWW), which arbitrarily chooses one among several concurrent writes as ``winner'' and discards the others. LWW is used in Apache Cassandra, for example. It does not meet our requirements, since we want no user input to be lost due to concurrent modifications.\n\nResolving concurrent updates on tree structures has been studied in the context of file synchronization~\\cite{Balasubramaniam:1998jh,Ramsey:2001ce}.\n\nFinally, systems such as Bayou~\\cite{Terry:1995dn} allow offline nodes to execute transactions tentatively, and confirm them when they are next online. This approach relies on all servers executing transactions in the same serial order, and deciding whether a transaction was successful depending on its preconditions. Bayou has the advantage of being able to express global invariants such as uniqueness constraints, which require serialization and cannot be expressed using CRDTs~\\cite{Bailis:2014th}. Bayou's downside is that tentative transactions may be rolled back, requiring explicit handling by the application, whereas CRDTs are defined such that operations cannot fail after they have been performed on one replica.\n\n\n\\section{Composing Data Structures}\\label{sec:composing}\n\nIn this section we informally introduce our approach to collaborative editing of JSON data structures, and illustrate some peculiarities of concurrent nested data structures. A formal presentation of the algorithm follows in Section~\\ref{sec:semantics}.\n\n\\subsection{Concurrent Editing Examples}\\label{sec:examples}\n\n\\begin{figure*}[p]\n\\centering\n\\begin{tikzpicture}[auto,scale=0.8]\n\\path [draw,dotted] (4,-0.5) -- (4,6.5);\n\\node (leftR)  at (0,6) {Replica $p$:};\n\\node (rightR) at (8,6) {Replica $q$:};\n\\node (left0)  at (0,5) [rectangle,draw] {\\{``key'': ``A''\\}};\n\\node (right0) at (8,5) [rectangle,draw] {\\{``key'': ``A''\\}};\n\\node (left1)  at (0,3) [rectangle,draw] {\\{``key'': ``B''\\}};\n\\node (right1) at (8,3) [rectangle,draw] {\\{``key'': ``C''\\}};\n\\node (left2)  at (0,0) [rectangle,draw] {\\{``key'': \\{``B'', ``C''\\}\\}};\n\\node (right2) at (8,0) [rectangle,draw] {\\{``key'': \\{``B'', ``C''\\}\\}};\n\\node (comms)  at (4,1.6) [text=blue] {\\footnotesize network communication};\n\\draw [thick,->] (left0) to node [left,inner sep=8pt] {doc.get(``key'') := ``B'';} (left1);\n\\draw [thick,->] (right0) to node [right,inner sep=8pt] {doc.get(``key'') := ``C'';} (right1);\n\\draw [thick,->] (left1) -- (left2);\n\\draw [thick,dashed,blue,->] (left1.south)  to [out=270,in=135] (right2.north west);\n\\draw [thick,dashed,blue,->] (right1.south) to [out=270,in=45]  (left2.north east);\n\\draw [thick,->] (right1) -- (right2);\n\\end{tikzpicture}\n\\caption{Concurrent assignment to the register at doc.get(``key'') by replicas $p$ and $q$.}\\label{fig:register-assign}\n\\end{figure*}\n\nThe sequential semantics of editing a JSON data structure are well-known, and the semantics of concurrently editing a flat map or list data structure have been thoroughly explored in the literature (see Section~\\ref{sec:related}). However, when defining a CRDT for JSON data, difficulties arise due to the interactions between concurrency and nested data structures.\n\nIn the following examples we show some situations that might occur when JSON documents are concurrently modified, demonstrate how they are handled by our algorithm, and explain the rationale for our design decisions. In all examples we assume two replicas, labelled $p$ (drawn on the left-hand side) and $q$ (right-hand side). Local state for a replica is drawn in boxes, and modifications to local state are shown with labelled solid arrows; time runs down the page. Since replicas only mutate local state, we make communication of state changes between replicas explicit in our model. Network communication is depicted with dashed arrows.\n\nOur first example is shown in Figure~\\ref{fig:register-assign}. In a document that maps ``key'' to a register with value ``A'', replica $p$ sets the value of the register to ``B'', while replica $q$ concurrently sets it to ``C''. As the replicas subsequently exchange edits via network communication, they detect the conflict. Since we do not want to simply discard one of the edits, and the strings ``B'' and ``C'' cannot be meaningfully merged, the system must preserve both concurrent updates. This datatype is known as a \\emph{multi-value register}: although a replica can only assign a single value to the register, reading the register may return a set of multiple values that were concurrently written.\n\nA multi-value register is hardly an impressive CRDT, since it does not actually perform any conflict resolution. We use it only for primitive values for which no automatic merge function is defined. Other CRDTs could be substituted in its place: for example, a counter CRDT for a number that can only be incremented and decremented, or an ordered list of characters for a collaboratively editable string (see also Figure~\\ref{fig:text-edit}).\n\n\\begin{figure*}[p]\n\\centering\n\\begin{tikzpicture}[auto,scale=0.8]\n\\path [draw,dotted] (4,-1) -- (4,8);\n\\node (left0)  at (0,7.5) [rectangle,draw] {\\{``colors'': \\{``blue'': ``\\#0000ff''\\}\\}};\n\\node (right0) at (8,7.5) [rectangle,draw] {\\{``colors'': \\{``blue'': ``\\#0000ff''\\}\\}};\n\\node [matrix] (left1) at (0,4) [rectangle,draw] {\n    \\node {\\{``colors'': \\{``blue'': ``\\#0000ff'',}; \\\\\n    \\node {``red'': ``\\#ff0000''\\}\\}}; \\\\\n};\n\\node (right1) at (8,5.5) [rectangle,draw] {\\{``colors'': \\{\\}\\}};\n\\node (right2) at (8,3) [rectangle,draw] {\\{``colors'': \\{``green'': ``\\#00ff00''\\}\\}};\n\\node [matrix] (left2) at (0,0) [rectangle,draw] {\n    \\node {\\{``colors'': \\{``red'': ``\\#ff0000'',}; \\\\\n    \\node {``green'': ``\\#00ff00''\\}\\}}; \\\\\n};\n\\node [matrix] (right3) at (8,0) [rectangle,draw] {\n    \\node {\\{``colors'': \\{``red'': ``\\#ff0000'',}; \\\\\n    \\node {``green'': ``\\#00ff00''\\}\\}}; \\\\\n};\n\\node (comms) at (4,2.1) [text=blue] {\\footnotesize network communication};\n\\draw [thick,->] (left0)  -- (left1)\n    node [left,text width=4.2cm,text centered,midway]  {doc.get(``colors'').get(``red'') := ``\\#ff0000'';};\n\\draw [thick,->] (right0) to node [right] {doc.get(``colors'') := \\{\\};} (right1);\n\\draw [thick,->] (right1) -- (right2)\n    node [right,text width=4.2cm,text centered,midway] {doc.get(``colors'').get(``green'') := ``\\#00ff00'';};\n\\draw [thick,->] (left1)  to (left2);\n\\draw [thick,->] (right2) to (right3);\n\\draw [thick,dashed,blue,->] (left1.south)  to [out=270,in=135] (right3.north west);\n\\draw [thick,dashed,blue,->] (right2.south) to [out=270,in=45]  (left2.north east);\n\\end{tikzpicture}\n\\caption{Modifying the contents of a nested map while concurrently the entire map is overwritten.}\\label{fig:map-remove}\n\\end{figure*}\n\n\\begin{figure*}[p]\n\\centering\n\\begin{tikzpicture}[auto,scale=0.8]\n\\path [draw,dotted] (5,-0.5) -- (5,10);\n\\node (left0)  at  (0,9.5) [rectangle,draw] {\\{\\}};\n\\node (right0) at (10,9.5) [rectangle,draw] {\\{\\}};\n\\node (left1)  at  (0,7.5) [rectangle,draw] {\\{``grocery'': []\\}};\n\\node (right1) at (10,7.5) [rectangle,draw] {\\{``grocery'': []\\}};\n\\node (left2)  at  (0,5.0) [rectangle,draw] {\\{``grocery'': [``eggs'']\\}};\n\\node (left3)  at  (0,2.5) [rectangle,draw] {\\{``grocery'': [``eggs'', ``ham'']\\}};\n\\node (right2) at (10,5.0) [rectangle,draw] {\\{``grocery'': [``milk'']\\}};\n\\node (right3) at (10,2.5) [rectangle,draw] {\\{``grocery'': [``milk'', ``flour'']\\}};\n\\node (left4)  at  (0,0.0) [rectangle,draw] {\\{``grocery'': [``eggs'', ``ham'', ``milk'', ``flour'']\\}};\n\\node (right4) at (10,0.0) [rectangle,draw] {\\{``grocery'': [``eggs'', ``ham'', ``milk'', ``flour'']\\}};\n\\node (comms)  at  (5,1.4) [text=blue] {\\footnotesize network communication};\n\\draw [thick,->] (left0)  to node [left]  {doc.get(``grocery'') := [];} (left1);\n\\draw [thick,->] (right0) to node [right] {doc.get(``grocery'') := [];} (right1);\n\\draw [thick,->] (left1)  -- (left2)\n    node [left,text width=4cm,text centered,midway]  {doc.get(``grocery'').idx(0) .insertAfter(``eggs'');};\n\\draw [thick,->] (right1) -- (right2)\n    node [right,text width=4cm,text centered,midway] {doc.get(``grocery'').idx(0) .insertAfter(``milk'');};\n\\draw [thick,->] (left2)  -- (left3)\n    node [left,text width=4cm,text centered,midway]  {doc.get(``grocery'').idx(1) .insertAfter(``ham'');};\n\\draw [thick,->] (right2) -- (right3)\n    node [right,text width=4cm,text centered,midway] {doc.get(``grocery'').idx(1) .insertAfter(``flour'');};\n\\draw [thick,->] (left3)  to (left4);\n\\draw [thick,->] (right3) to (right4);\n\\draw [thick,dashed,blue,->] (left3.south)  to [out=270,in=135] (right4.north west);\n\\draw [thick,dashed,blue,->] (right3.south) to [out=270,in=45]  (left4.north east);\n\\end{tikzpicture}\n\\caption{Two replicas concurrently create ordered lists under the same map key.}\\label{fig:two-lists}\n\\end{figure*}\n\n\\begin{figure*}[p]\n\\centering\n\\begin{tikzpicture}[auto,scale=0.8]\n\\path [draw,dotted] (4,-0.5) -- (4,8.5);\n\\node (leftR)  at (0,8) {Replica $p$:};\n\\node (rightR) at (8,8) {Replica $q$:};\n\\node (left1)  at (0,7) [rectangle,draw] {[``a'', ``b'', ``c'']};\n\\node (left2)  at (0,5) [rectangle,draw] {[``a'', ``c'']};\n\\node (left3)  at (0,3) [rectangle,draw] {[``a'', ``x'', ``c'']};\n\\node (left4)  at (0,0) [rectangle,draw] {[``y'', ``a'', ``x'', ``z'', ``c'']};\n\\node (right1) at (8,7) [rectangle,draw] {[``a'', ``b'', ``c'']};\n\\node (right2) at (8,5) [rectangle,draw] {[``y'', ``a'', ``b'', ``c'']};\n\\node (right3) at (8,3) [rectangle,draw] {[``y'', ``a'', ``z'', ``b'', ``c'']};\n\\node (right4) at (8,0) [rectangle,draw] {[``y'', ``a'', ``x'', ``z'', ``c'']};\n\\node (comms)  at (4, 1.5) [text=blue] {\\footnotesize network communication};\n\\draw [thick,->] (left1)  to node [left]  {doc.idx(2).delete;} (left2);\n\\draw [thick,->] (left2)  to node [left]  {doc.idx(1).insertAfter(``x'');} (left3);\n\\draw [thick,->] (right1) to node [right] {doc.idx(0).insertAfter(``y'');} (right2);\n\\draw [thick,->] (right2) to node [right] {doc.idx(2).insertAfter(``z'');} (right3);\n\\draw [thick,->] (left3)  to (left4);\n\\draw [thick,->] (right3) to (right4);\n\\draw [thick,dashed,blue,->] (left3.south)  to [out=270,in=135] (right4.north west);\n\\draw [thick,dashed,blue,->] (right3.south) to [out=270,in=45]  (left4.north east);\n\\end{tikzpicture}\n\\caption{Concurrent editing of an ordered list of characters (i.e., a text document).}\\label{fig:text-edit}\n\\end{figure*}\n\n\\begin{figure*}[p]\n\\centering\n\\begin{tikzpicture}[auto,scale=0.8]\n\\path [draw,dotted] (4,-1) -- (4,7.5);\n\\node (left1)  at (0,7) [rectangle,draw] {\\{\\}};\n\\node (left2)  at (0,5) [rectangle,draw] {\\{``a'': \\{\\}\\}};\n\\node (left3)  at (0,3) [rectangle,draw] {\\{``a'': \\{``x'': ``y''\\}\\}};\n\\node [matrix] (left4) at (0,0) [rectangle,draw] {\n    \\node {\\{mapT(``a''): \\{``x'': ``y''\\},}; \\\\\n    \\node {listT(``a''): [``z'']\\}}; \\\\\n};\n\\node (right1) at (8,7) [rectangle,draw] {\\{\\}};\n\\node (right2) at (8,5) [rectangle,draw] {\\{``a'': []\\}};\n\\node (right3) at (8,3) [rectangle,draw] {\\{``a'': [``z'']\\}};\n\\node [matrix] (right4) at (8,0) [rectangle,draw] {\n    \\node {\\{mapT(``a''): \\{``x'': ``y''\\},}; \\\\\n    \\node {listT(``a''): [``z'']\\}}; \\\\\n};\n\\node (comms)  at (4,2.0) [text=blue] {\\footnotesize network communication};\n\\draw [thick,->] (left1)  to node [left]  {doc.get(``a'') := \\{\\};} (left2);\n\\draw [thick,->] (left2)  to node [left]  {doc.get(``a'').get(``x'') := ``y'';} (left3);\n\\draw [thick,->] (right1) to node [right] {doc.get(``a'') := [];} (right2);\n\\draw [thick,->] (right2) to node [right] {doc.get(``a'').idx(0).insertAfter(``z'');} (right3);\n\\draw [thick,->] (left3)  to (left4);\n\\draw [thick,->] (right3) to (right4);\n\\draw [thick,dashed,blue,->] (left3.south)  to [out=270,in=135] (right4.north west);\n\\draw [thick,dashed,blue,->] (right3.south) to [out=270,in=45]  (left4.north east);\n\\end{tikzpicture}\n\\caption{Concurrently assigning values of different types to the same map key.}\\label{fig:type-clash}\n\\end{figure*}\n\n\\begin{figure*}[p]\n\\centering\n\\begin{tikzpicture}[auto,scale=0.8]\n\\path [draw,dotted] (4,-0.5) -- (4,7.0);\n\\node [matrix] (left0) at (0,6) [rectangle,draw] {\n    \\node {\\{``todo'': [\\{``title'': ``buy milk'',}; \\\\\n    \\node {``done'': false\\}]\\}}; \\\\\n};\n\\node [matrix] (right0) at (8,6) [rectangle,draw] {\n    \\node {\\{``todo'': [\\{``title'': ``buy milk'',}; \\\\\n    \\node {``done'': false\\}]\\}}; \\\\\n};\n\\node (left1)  at (0,3) [rectangle,draw] {\\{``todo'': []\\}};\n\\node [matrix] (right1) at (8,3) [rectangle,draw] {\n    \\node {\\{``todo'': [\\{``title'': ``buy milk'',}; \\\\\n    \\node {``done'': true\\}]\\}}; \\\\\n};\n\\node (left2)  at (0,0) [rectangle,draw] {\\{``todo'': [\\{``done'': true\\}]\\}};\n\\node (right2) at (8,0) [rectangle,draw] {\\{``todo'': [\\{``done'': true\\}]\\}};\n\\node (comms)  at (4,1.6) [text=blue] {\\footnotesize network communication};\n\\draw [thick,->] (left0)  to node [left]  {doc.get(``todo'').idx(1).delete;} (left1);\n\\draw [thick,->] (right0) to node [right] {doc.get(``todo'').idx(1).get(``done'') := true;} (right1);\n\\draw [thick,->] (left1)  to (left2);\n\\draw [thick,->] (right1) to (right2);\n\\draw [thick,dashed,blue,->] (left1.south)  to [out=270,in=135] (right2.north west);\n\\draw [thick,dashed,blue,->] (right1.south) to [out=270,in=45]  (left2.north east);\n\\end{tikzpicture}\n\\caption{One replica removes a list element, while another concurrently updates its contents.}\\label{fig:todo-item}\n\\end{figure*}\n\nFigure~\\ref{fig:map-remove} gives an example of concurrent edits at different levels of the JSON tree. Here, replica $p$ adds ``red'' to a map of colors, while replica $q$ concurrently blanks out the entire map of colors and then adds ``green''. Instead of assigning an empty map, $q$ could equivalently remove the entire key ``colors'' from the outer map, and then assign a new empty map to that key. The difficulty in this example is that the addition of ``red'' occurs at a lower level of the tree, while concurrently the removal of the map of colors occurs at a higher level of the tree.\n\nOne possible way of handling such a conflict would be to let edits at higher levels of the tree always override concurrent edits within that subtree. In this case, that would mean the addition of ``red'' would be discarded, since it would be overridden by the blanking-out of the entire map of colors. However, that behavior would violate our requirement that no user input should be lost due to concurrent modifications. Instead, we define merge semantics that preserve all changes, as shown in Figure~\\ref{fig:map-remove}: ``blue'' must be absent from the final map, since it was removed by blanking out the map, while ``red'' and ``green'' must be present, since they were explicitly added. This behavior matches that of CRDT maps in Riak~\\cite{Brown:2014hs,Brown:2013wy}.\n\nFigure~\\ref{fig:two-lists} illustrates another problem with maps: two replicas can concurrently insert the same map key. Here, $p$ and $q$ each independently create a new shopping list under the same map key ``grocery'', and add items to the list. In the case of Figure~\\ref{fig:register-assign}, concurrent assignments to the same map key were left to be resolved by the application, but in Figure~\\ref{fig:two-lists}, both values are lists and so they can be merged automatically. We preserve the ordering and adjacency of items inserted at each replica, so ``ham'' appears after ``eggs'', and ``flour'' appears after ``milk'' in the merged result. There is no information on which replica's items should appear first in the merged result, so the algorithm can make an arbitrary choice between ``eggs, ham, milk, flour'' and ``milk, flour, eggs, ham'', provided that all replicas end up with the items in the same order.\n\nFigure~\\ref{fig:text-edit} shows how a collaborative text editor can be implemented, by treating the document as a list of characters. All changes are preserved in the merged result: ``y'' is inserted before ``a''; ``x'' and ``z'' are inserted between ``a'' and ``c''; and ``b'' is deleted.\n\nFigure~\\ref{fig:type-clash} demonstrates a variant of the situation in Figure~\\ref{fig:two-lists}, where two replicas concurrently insert the same map key, but they do so with different datatypes as values: $p$ inserts a nested map, whereas $q$ inserts a list. These datatypes cannot be meaningfully merged, so we preserve both values separately. We do this by tagging each map key with a type annotation (\\textsf{mapT}, \\textsf{listT}, or \\textsf{regT} for a map, list, or register value respectively), so each type inhabits a separate namespace.\n\nFinally, Figure~\\ref{fig:todo-item} shows a limitation of the principle of preserving all user input. In a to-do list application, one replica removes a to-do item from the list, while another replica concurrently marks the same item as done. As the changes are merged, the update of the map key ``done'' effectively causes the list item to be resurrected on replica $p$, leaving a to-do item without a title (since the title was deleted as part of deleting the list item). This behavior is consistent with the example in Figure~\\ref{fig:map-remove}, but it is perhaps surprising. In this case it may be more desirable to discard one of the concurrent updates, and thus preserve the implicit schema that a to-do item has both a ``title'' and a ``done'' field. We leave the analysis of developer expectations and the development of a schema language for future work.\n\n\\subsection{JSON Versus XML}\\label{sec:json-xml}\n\nThe most common alternative to JSON is XML, and collaborative editing of XML documents has been previously studied~\\cite{Davis:2002iv,Ignat:2003jy,Wang:2015vo}. Besides the superficial syntactical differences, the tree structure of XML and JSON appears quite similar. However, there is an important difference that we should highlight.\n\nJSON has two collection constructs that can be arbitrarily nested: maps for unordered key-value pairs, and lists for ordered sequences. In XML, the children of an element form an ordered sequence, while the attributes of an element are unordered key-value pairs. However, XML does not allow nested elements inside attributes -- the value of an attribute can only be a primitive datatype. Thus, XML supports maps within lists, but not lists within maps. In this regard, XML is less expressive than JSON: the scenarios in Figures~\\ref{fig:two-lists} and~\\ref{fig:type-clash} cannot occur in XML.\n\nSome applications may attach map-like semantics to the children of an XML document, for example by interpreting the child element name as key. However, this key-value structure is not part of XML itself, and would not be enforced by existing collaborative editing algorithms for XML. If multiple children with the same key are concurrently created, existing algorithms would create duplicate children with the same key rather than merging them like in Figure~\\ref{fig:two-lists}.\n\n\\subsection{Document Editing API}\\label{sec:editing-api}\n\n\\begin{figure}\n\\centering\n\\begin{tabular}{rcll}\nCMD & ::= & \\texttt{let} $x$ \\texttt{=} EXPR & $x \\in \\mathrm{VAR}$ \\\\\n& $|$ & $\\mathrm{EXPR}$ \\texttt{:=} $v$ & $v \\in \\mathrm{VAL}$ \\\\\n& $|$ & $\\mathrm{EXPR}$\\texttt{.insertAfter(}$v$\\texttt{)} & $v \\in \\mathrm{VAL}$ \\\\\n& $|$ & $\\mathrm{EXPR}$\\texttt{.delete} \\\\\n& $|$ & \\texttt{yield} \\\\\n& $|$ & CMD\\texttt{;} CMD \\vspace{0.5em}\\\\\nEXPR & ::= & \\texttt{doc} \\\\\n& $|$ & $x$ & $x \\in \\mathrm{VAR}$ \\\\\n& $|$ & EXPR\\texttt{.get(}$\\mathit{key}$\\texttt{)} & $\\mathit{key} \\in \\mathrm{String}$ \\\\\n& $|$ & EXPR\\texttt{.idx(}$i$\\texttt{)} & $i \\ge 0$ \\\\\n& $|$ & EXPR\\texttt{.keys} \\\\\n& $|$ & EXPR\\texttt{.values} \\vspace{0.5em}\\\\\nVAR & ::= & $x$ & $x \\in \\mathrm{VarString}$\\\\\nVAL & ::= & $n$ & $n \\in \\mathrm{Number}$ \\\\\n& $|$ & $\\mathit{str}$ & $\\mathit{str} \\in \\mathrm{String}$ \\\\\n& $|$ & \\texttt{true} $|$ \\texttt{false} $|$ \\texttt{null} \\\\\n& $|$ & \\verb|{}| $|$ \\verb|[]|\n\\end{tabular}\n\\caption{Syntax of command language for querying and modifying a document.}\\label{fig:local-syntax}\n\\end{figure}\n\n\\begin{figure}\n\\centering\n\\begin{verbatim}\ndoc := {};\ndoc.get(\"shopping\") := [];\nlet head = doc.get(\"shopping\").idx(0);\nhead.insertAfter(\"eggs\");\nlet eggs = doc.get(\"shopping\").idx(1);\nhead.insertAfter(\"cheese\");\neggs.insertAfter(\"milk\");\n\n// Final state:\n{\"shopping\": [\"cheese\", \"eggs\", \"milk\"]}\n\\end{verbatim}\n\\caption{Example of programmatically constructing a JSON document.}\\label{fig:make-doc}\n\\end{figure}\n\nTo define the semantics for collaboratively editable data structures, we first define a simple command language that is executed locally at any of the replicas, and which allows that replica's local copy of the document to be queried and modified. Performing read-only queries has no side-effects, but modifying the document has the effect of producing \\emph{operations} describing the mutation. Those operations are immediately applied to the local copy of the document, and also enqueued for asynchronous broadcasting to other replicas.\n\nThe syntax of the command language is given in Figure~\\ref{fig:local-syntax}. It is not a full programming language, but rather an API through which the document state is queried and modified. We assume that the program accepts user input and issues a (possibly infinite) sequence of commands to the API. We model only the semantics of those commands, and do not assume anything about the program in which the command language is embedded. The API differs slightly from the JSON libraries found in many programming languages, in order to allow us to define consistent merge semantics.\n\nWe first explain the language informally, before giving its formal semantics. The expression construct EXPR is used to construct a \\emph{cursor} which identifies a position in the document. An expression starts with either the special token \\texttt{doc}, identifying the root of the JSON document tree, or a variable $x$ that was previously defined in a \\texttt{let} command. The expression defines, left to right, the path the cursor takes as it navigates through the tree towards the leaves: the operator \\texttt{.get(}$\\mathit{key}$\\texttt{)} selects a key within a map, and \\texttt{.idx(}$n$\\texttt{)} selects the $n$th element of an ordered list. Lists are indexed starting from 1, and \\texttt{.idx(0)} is a special cursor indicating the head of a list (a virtual position before the first list element).\n\nThe expression construct EXPR can also query the state of the document: \\texttt{keys} returns the set of keys in the map at the current cursor, and \\texttt{values} returns the contents of the multi-value register at the current cursor. (\\texttt{values} is not defined if the cursor refers to a map or list.)\n\nA command CMD either sets the value of a local variable (\\texttt{let}), performs network communication (\\texttt{yield}), or modifies the document. A document can be modified by writing to a register (the operator \\texttt{:=} assigns the value of the register identified by the cursor), by inserting an element into a list (\\texttt{insertAfter} places a new element after the existing list element identified by the cursor, and \\texttt{.idx(0).insertAfter} inserts at the head of a list), or by deleting an element from a list or a map (\\texttt{delete} removes the element identified by the cursor).\n\nFigure~\\ref{fig:make-doc} shows an example sequence of commands that constructs a new document representing a shopping list. First \\texttt{doc} is set to \\verb|{}|, the empty map literal, and then the key \\verb|\"shopping\"| within that map is set to the empty list \\verb|[]|. The third line navigates to the key \\verb|\"shopping\"| and selects the head of the list, placing the cursor in a variable called \\texttt{head}. The list element ``eggs'' is inserted at the head of the list. In line 5, the variable \\texttt{eggs} is set to a cursor pointing at the list element ``eggs''. Then two more list elements are inserted: ``cheese'' at the head, and ``milk'' after ``eggs''.\n\nNote that the cursor \\texttt{eggs} identifies the list element by identity, not by its index: after the insertion of ``cheese'', the element ``eggs'' moves from index 1 to 2, but ``milk'' is nevertheless inserted after ``eggs''. As we shall see later, this feature is helpful for achieving desirable semantics in the presence of concurrent modifications.\n\n\n\\begin{figure*}\n\\begin{center}\n\\AxiomC{$\\mathit{cmd}_1 \\mathbin{:} \\mathrm{CMD}$}\n\\AxiomC{$A_p,\\, \\mathit{cmd}_1 \\evalto A_p'$}\n\\LeftLabel{\\textsc{Exec}}\n\\BinaryInfC{$A_p,\\, \\langle \\mathit{cmd}_1 \\mathbin{;} \\mathit{cmd}_2 \\mathbin{;} \\dots \\rangle\n    \\evalto A_p',\\, \\langle \\mathit{cmd}_2 \\mathbin{;} \\dots \\rangle$}\n\\DisplayProof\\hspace{4em}\n%\n\\AxiomC{}\n\\LeftLabel{\\textsc{Doc}}\n\\UnaryInfC{$A_p,\\, \\mathsf{doc} \\evalto \\mathsf{cursor}(\\langle\\rangle,\\, \\mathsf{doc})$}\n\\DisplayProof\\proofSkipAmount\n\\end{center}\n\n\\begin{center}\n\\AxiomC{$A_p,\\, \\mathit{expr} \\evalto \\mathit{cur}$}\n\\LeftLabel{\\textsc{Let}}\n\\UnaryInfC{$A_p,\\, \\mathsf{let}\\; x = \\mathit{expr} \\evalto A_p[\\,x \\,\\mapsto\\, \\mathit{cur}\\,]$}\n\\DisplayProof\\hspace{3em}\n%\n\\AxiomC{$x \\in \\mathrm{dom}(A_p)$}\n\\LeftLabel{\\textsc{Var}}\n\\UnaryInfC{$A_p,\\, x \\evalto A_p(x)$}\n\\DisplayProof\\proofSkipAmount\n\\end{center}\n\n\\begin{prooftree}\n\\AxiomC{$A_p,\\, \\mathit{expr} \\evalto \\mathsf{cursor}(\\langle k_1, \\dots, k_{n-1} \\rangle,\\, k_n)$}\n\\AxiomC{$k_n \\not= \\mathsf{head}$}\n\\LeftLabel{\\textsc{Get}}\n\\BinaryInfC{$A_p,\\, \\mathit{expr}.\\mathsf{get}(\\mathit{key}) \\evalto\n    \\mathsf{cursor}(\\langle k_1, \\dots, k_{n-1}, \\mathsf{mapT}(k_n) \\rangle,\\, \\mathit{key})$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$A_p,\\, \\mathit{expr} \\evalto \\mathsf{cursor}(\\langle k_1, \\dots, k_{n-1} \\rangle,\\, k_n)$}\n\\AxiomC{$A_p,\\, \\mathsf{cursor}(\\langle k_1, \\dots, k_{n-1}, \\mathsf{listT}(k_n) \\rangle,\\,\n    \\mathsf{head}).\\mathsf{idx}(i) \\evalto \\mathit{cur}'$}\n\\LeftLabel{$\\textsc{Idx}_1$}\n\\BinaryInfC{$A_p,\\, \\mathit{expr}.\\mathsf{idx}(i) \\evalto \\mathit{cur}'$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$k_1 \\in \\mathrm{dom}(\\mathit{ctx})$}\n\\AxiomC{$\\mathit{ctx}(k_1),\\, \\mathsf{cursor}(\\langle k_2, \\dots, k_{n-1} \\rangle,\\, k_n).\\mathsf{idx}(i)\n    \\evalto \\mathsf{cursor}(\\langle k_2, \\dots, k_{n-1} \\rangle,\\, k_n')$}\n\\LeftLabel{$\\textsc{Idx}_2$}\n\\BinaryInfC{$\\mathit{ctx},\\, \\mathsf{cursor}(\\langle k_1, k_2, \\dots, k_{n-1} \\rangle,\\, k_n).\\mathsf{idx}(i)\n    \\evalto \\mathsf{cursor}(\\langle k_1, k_2, \\dots, k_{n-1} \\rangle,\\, k_n')$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$i>0 \\,\\wedge\\, \\mathit{ctx}(\\mathsf{next}(k)) = k' \\,\\wedge\\, k' \\not= \\mathsf{tail}$}\n\\AxiomC{$\\mathit{ctx}(\\mathsf{pres}(k')) \\not= \\{\\}$}\n\\AxiomC{$\\mathit{ctx},\\, \\mathsf{cursor}(\\langle\\rangle,\\, k').\\mathsf{idx}(i-1) \\evalto \\mathit{ctx}'$}\n\\LeftLabel{$\\textsc{Idx}_3$}\n\\TrinaryInfC{$\\mathit{ctx},\\, \\mathsf{cursor}(\\langle\\rangle,\\, k).\\mathsf{idx}(i) \\evalto \\mathit{ctx}'$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$i>0 \\,\\wedge\\, \\mathit{ctx}(\\mathsf{next}(k)) = k' \\,\\wedge\\, k' \\not= \\mathsf{tail}$}\n\\AxiomC{$\\mathit{ctx}(\\mathsf{pres}(k')) = \\{\\}$}\n\\AxiomC{$\\mathit{ctx},\\, \\mathsf{cursor}(\\langle\\rangle,\\, k').\\mathsf{idx}(i) \\evalto \\mathit{cur}'$}\n\\LeftLabel{$\\textsc{Idx}_4$}\n\\TrinaryInfC{$\\mathit{ctx},\\, \\mathsf{cursor}(\\langle\\rangle,\\, k).\\mathsf{idx}(i) \\evalto \\mathit{cur}'$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$i=0$}\n\\LeftLabel{$\\textsc{Idx}_5$}\n\\UnaryInfC{$\\mathit{ctx},\\, \\mathsf{cursor}(\\langle\\rangle,\\, k).\\mathsf{idx}(i) \\evalto\n    \\mathsf{cursor}(\\langle\\rangle,\\, k)$}\n\\end{prooftree}\n\n\\[ \\mathrm{keys}(\\mathit{ctx}) = \\{\\; k \\mid\n    \\mathsf{mapT}(k)  \\in \\mathrm{dom}(\\mathit{ctx}) \\,\\vee\\,\n    \\mathsf{listT}(k) \\in \\mathrm{dom}(\\mathit{ctx}) \\,\\vee\\,\n    \\mathsf{regT}(k)  \\in \\mathrm{dom}(\\mathit{ctx})\n\\;\\} \\]\n\n\\begin{prooftree}\n\\AxiomC{$A_p,\\, \\mathit{expr} \\evalto \\mathit{cur}$}\n\\AxiomC{$A_p,\\, \\mathit{cur}.\\mathsf{keys} \\evalto \\mathit{keys}$}\n\\LeftLabel{$\\textsc{Keys}_1$}\n\\BinaryInfC{$A_p,\\, \\mathit{expr}.\\mathsf{keys} \\evalto \\mathit{keys}$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$\\mathit{map} = \\mathit{ctx}(\\mathsf{mapT}(k))$}\n\\AxiomC{$\\mathit{keys} = \\{\\; k \\mid k \\in \\mathrm{keys}(\\mathit{map}) \\,\\wedge\\,\n    \\mathit{map}(\\mathsf{pres}(k)) \\not= \\{\\} \\;\\}$}\n\\LeftLabel{$\\textsc{Keys}_2$}\n\\BinaryInfC{$A_p,\\, \\mathsf{cursor}(\\langle\\rangle,\\, k).\\mathsf{keys} \\evalto \\mathit{keys}$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$k_1 \\in \\mathrm{dom}(\\mathit{ctx})$}\n\\AxiomC{$\\mathit{ctx}(k_1),\\, \\mathsf{cursor}(\\langle k_2, \\dots, k_{n-1} \\rangle,\\, k_n).\\mathsf{keys}\n    \\evalto \\mathit{keys}$}\n\\LeftLabel{$\\textsc{Keys}_3$}\n\\BinaryInfC{$\\mathit{ctx},\\, \\mathsf{cursor}(\\langle k_1, k_2, \\dots, k_{n-1} \\rangle,\\, k_n).\\mathsf{keys}\n    \\evalto \\mathit{keys}$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$A_p,\\, \\mathit{expr} \\evalto \\mathit{cur}$}\n\\AxiomC{$A_p,\\, \\mathit{cur}.\\mathsf{values} \\evalto \\mathit{val}$}\n\\LeftLabel{$\\textsc{Val}_1$}\n\\BinaryInfC{$A_p,\\, \\mathit{expr}.\\mathsf{values} \\evalto \\mathit{val}$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$\\mathsf{regT}(k) \\in \\mathrm{dom}(\\mathit{ctx})$}\n\\AxiomC{$\\mathit{val} = \\mathrm{range}(\\mathit{ctx}(\\mathsf{regT}(k)))$}\n\\LeftLabel{$\\textsc{Val}_2$}\n\\BinaryInfC{$\\mathit{ctx},\\, \\mathsf{cursor}(\\langle\\rangle,\\, k).\\mathsf{values} \\evalto \\mathit{val}$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$k_1 \\in \\mathrm{dom}(\\mathit{ctx})$}\n\\AxiomC{$\\mathit{ctx}(k_1),\\, \\mathsf{cursor}(\\langle k_2, \\dots, k_{n-1} \\rangle,\\, k_n).\\mathsf{values}\n    \\evalto \\mathit{val}$}\n\\LeftLabel{$\\textsc{Val}_3$}\n\\BinaryInfC{$\\mathit{ctx},\\, \\mathsf{cursor}(\\langle k_1, k_2, \\dots, k_{n-1} \\rangle,\\, k_n).\\mathsf{values}\n    \\evalto \\mathit{val}$}\n\\end{prooftree}\n\\caption{Rules for evaluating expressions.}\\label{fig:expr-rules}\n\\end{figure*}\n\n\\section{Formal Semantics}\\label{sec:semantics}\n\nWe now explain formally how to achieve the concurrent semantics outlined in Section~\\ref{sec:composing}. The state of replica $p$ is described by $A_p$, a finite partial function. The evaluation rules of the command language inspect and modify this local state $A_p$, and they do not depend on $A_q$ (the state of any other replica $q \\neq p$). The only communication between replicas occurs in the evaluation of the \\textsf{yield} command, which we discuss later. For now, we concentrate on the execution of commands at a single replica $p$.\n\n\\subsection{Expression Evaluation}\n\nFigure~\\ref{fig:expr-rules} gives the rules for evaluating EXPR expressions in the command language, which are evaluated in the context of the local replica state $A_p$. The \\textsc{Exec} rule formalizes the assumption that commands are executed sequentially. The \\textsc{Let} rule allows the program to define a local variable, which is added to the local state (the notation $A_p[\\,x \\,\\mapsto\\, \\mathit{cur}\\,]$ denotes a partial function that is the same as $A_p$, except that $A_p(x) = \\mathit{cur}$). The corresponding \\textsc{Var} rule allows the program to retrieve the value of a previously defined variable.\n\nThe following rules in Figure~\\ref{fig:expr-rules} show how an expression is evaluated to a cursor, which unambiguously identifies a particular position in a JSON document by describing a path from the root of the document tree to some branch or leaf node. A cursor consists only of immutable keys and identifiers, so it can be sent over the network to another replica, where it can be used to locate the same position in the document.\n\nFor example,\n\\[ \\mathsf{cursor}(\\langle \\mathsf{mapT}(\\mathsf{doc}), \\mathsf{listT}(\\text{``shopping''}) \\rangle,\\, \\mathit{id}_1) \\]\nis a cursor representing the list element \\verb|\"eggs\"| in Figure~\\ref{fig:make-doc}, assuming that $\\mathit{id}_1$ is the unique identifier of the operation that inserted this list element (we will discuss these identifiers in Section~\\ref{sec:lamport-ts}). The cursor can be interpreted as a path through the local replica state structure $A_p$, read from left to right: starting from the \\textsf{doc} map at the root, it traverses through the map entry ``shopping'' of type \\textsf{listT}, and finishes with the list element that has identifier $\\mathit{id}_1$.\n\nIn general, $\\mathsf{cursor}(\\langle k_1, \\dots, k_{n-1} \\rangle,\\, k_n)$ consists of a (possibly empty) vector of keys $\\langle k_1, \\dots, k_{n-1} \\rangle$, and a final key $k_n$ which is always present. $k_n$ can be thought of as the final element of the vector, with the distinction that it is not tagged with a datatype, whereas the elements of the vector are tagged with the datatype of the branch node being traversed, either \\textsf{mapT} or \\textsf{listT}.\n\nThe \\textsc{Doc} rule in Figure~\\ref{fig:expr-rules} defines the simplest cursor $\\mathsf{cursor}(\\langle\\rangle,\\, \\mathsf{doc})$, referencing the root of the document using the special atom \\textsf{doc}. The \\textsc{Get} rule navigates a cursor to a particular key within a map. For example, the expression \\verb|doc.get(\"shopping\")| evaluates to $\\mathsf{cursor}(\\langle \\mathsf{mapT}(\\mathsf{doc}) \\rangle,\\, \\text{``shopping''})$ by applying the \\textsc{Doc} and \\textsc{Get} rules. Note that the expression \\verb|doc.get(...)| implicitly asserts that \\textsf{doc} is of type \\textsf{mapT}, and this assertion is encoded in the cursor.\n\nThe rules $\\textsc{Idx}_{1 \\dots 5}$ define how to evaluate the expression \\verb|.idx(|$n$\\verb|)|, moving the cursor to a particular element of a list. $\\textsc{Idx}_1$ constructs a cursor representing the head of the list, and delegates to the subsequent rules to scan over the list. $\\textsc{Idx}_2$ recursively descends the local state according to the vector of keys in the cursor. When the vector of keys is empty, the context $\\mathit{ctx}$ is the subtree of $A_p$ that stores the list in question, and the rules $\\textsc{Idx}_{3,4,5}$ iterate over that list until the desired element is found.\n\n$\\textsc{Idx}_5$ terminates the iteration when the index reaches zero, while $\\textsc{Idx}_3$ moves to the next element and decrements the index, and $\\textsc{Idx}_4$ skips over list elements that are marked as deleted. The structure resembles a linked list: each list element has a unique identifier $k$, and the partial function representing local state maps $\\mathsf{next}(k)$ to the ID of the list element that follows $k$.\n\nDeleted elements are never removed from the linked list structure, but only marked as deleted (they become so-called \\emph{tombstones}). To this end, the local state maintains a \\emph{presence set} $\\mathsf{pres}(k)$ for the list element with ID $k$, which is the set of all operations that have asserted the existence of this list element. When a list element is deleted, the presence set is set to the empty set, which marks it as deleted; however, a concurrent operation that references the list element can cause the presence set to be come non-empty again (leading to the situations in Figures~\\ref{fig:map-remove} and~\\ref{fig:todo-item}). Rule $\\textsc{Idx}_4$ handles list elements with an empty presence set by moving to the next list element without decrementing the index (i.e., not counting them as list elements).\n\nThe $\\textsc{Keys}_{1,2,3}$ rules allow the application to inspect the set of keys in a map. This set is determined by examining the local state, and excluding any keys for which the presence set is empty (indicating that the key has been deleted).\n\nFinally, the $\\textsc{Val}_{1,2,3}$ rules allow the application to read the contents of a register at a particular cursor position, using a similar recursive rule structure as the \\textsc{Idx} rules. A register is expressed using the \\textsf{regT} type annotation in the local state. Although a replica can only assign a single value to a register, a register can nevertheless contain multiple values if multiple replicas concurrently assign values to it.\n\n\\subsection{Generating Operations}\n\nWhen commands mutate the state of the document, they generate \\emph{operations} that describe the mutation. In our semantics, a command never directly modifies the local replica state $A_p$, but only generates an operation. That operation is then immediately applied to $A_p$ so that it takes effect locally, and the same operation is also asynchronously broadcast to the other replicas.\n\n\\subsubsection{Lamport Timestamps}\\label{sec:lamport-ts}\n\nEvery operation in our model is given a unique identifier, which is used in the local state and in cursors. Whenever an element is inserted into a list, or a value is assigned to a register, the new list element or register value is identified by the identifier of the operation that created it.\n\nIn order to generate globally unique operation identifiers without requiring synchronous coordination between replicas we use Lamport timestamps~\\cite{Lamport:1978jq}. A Lamport timestamp is a pair $(c, p)$ where $p \\in \\mathrm{ReplicaID}$ is the unique identifier of the replica on which the edit is made (for example, a hash of its public key), and $c \\in \\mathbb{N}$ is a counter that is stored at each replica and incremented for every operation. Since each replica generates a strictly monotonically increasing sequence of counter values $c$, the pair $(c, p)$ is unique.\n\nIf a replica receives an operation with a counter value $c$ that is greater than the locally stored counter value, the local counter is increased to the value of the incoming counter. This ensures that if operation $o_1$ causally happened before $o_2$ (that is, the replica that generated $o_2$ had received and processed $o_1$ before $o_2$ was generated), then $o_2$ must have a greater counter value than $o_1$. Only concurrent operations can have equal counter values.\n\nWe can thus define a total ordering $<$ for Lamport timestamps:\n\\[ (c_1, p_1) < (c_2, p_2) \\;\\text{ iff }\\; (c_1 < c_2) \\vee (c_1 = c_2 \\wedge p_1 < p_2). \\]\nIf one operation happened before another, this ordering is consistent with causality (the earlier operation has a lower timestamp). If two operations are concurrent, their order according to $<$ is arbitrary but deterministic. This ordering property is important for our definition of the semantics of ordered lists.\n\n\\subsubsection{Operation Structure}\n\nAn operation is a tuple of the form\n\\begin{alignat*}{3}\n& \\mathsf{op}( \\\\\n&& \\mathit{id} &: \\mathbb{N} \\times \\mathrm{ReplicaID}, \\\\\n&& \\mathit{deps} &: \\mathcal{P}(\\mathbb{N} \\times \\mathrm{ReplicaID}), \\\\\n&& \\mathit{cur} &: \\mathsf{cursor}(\\langle k_1, \\dots, k_{n-1} \\rangle,\\, k_n), \\\\\n&& \\mathit{mut} &: \\mathsf{insert}(v) \\mid \\mathsf{delete} \\mid \\mathsf{assign}(v) && \\quad v: \\mathrm{VAL} \\\\\n& )\n\\end{alignat*}\nwhere $\\mathit{id}$ is the Lamport timestamp that uniquely identifies the operation, $\\mathit{cur}$ is the cursor describing the position in the document being modified, and $\\mathit{mut}$ is the mutation that was requested at the specified position.\n\n$\\mathit{deps}$ is the set of \\emph{causal dependencies} of the operation. It is defined as follows: if operation $o_2$ was generated by replica $p$, then a causal dependency of $o_2$ is any operation $o_1$ that had already been applied on $p$ at the time when $o_2$ was generated. In this paper, we define $\\mathit{deps}$ as the set of Lamport timestamps of all causal dependencies. In a real implementation, this set would become impracticably large, so a compact representation of causal history would be used instead -- for example, version vectors~\\cite{ParkerJr:1983jb}, state vectors~\\cite{Ellis:1989ue}, or dotted version vectors~\\cite{Preguica:2012fx}. However, to avoid ambiguity in our semantics we give the dependencies as a simple set of operation IDs.\n\nThe purpose of the causal dependencies $\\mathit{deps}$ is to impose a partial ordering on operations: an operation can only be applied after all operations that ``happened before'' it have been applied. In particular, this means that the sequence of operations generated at one particular replica will be applied in the same order at every other replica. Operations that are concurrent (i.e., where there is no causal dependency in either direction) can be applied in any order.\n\n\\subsubsection{Semantics of Generating Operations}\n\n\\begin{figure*}\n\\centering\n\\begin{prooftree}\n\\AxiomC{$A_p,\\, \\mathit{expr} \\evalto \\mathit{cur}$}\n\\AxiomC{$\\mathit{val}: \\mathrm{VAL}$}\n\\AxiomC{$A_p,\\, \\mathsf{makeOp}(\\mathit{cur}, \\mathsf{assign}(\\mathit{val})) \\evalto A_p'$}\n\\LeftLabel{\\textsc{Make-Assign}}\n\\TrinaryInfC{$A_p,\\, \\mathit{expr} \\,\\text{ := }\\, \\mathit{val} \\evalto A_p'$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$A_p,\\, \\mathit{expr} \\evalto \\mathit{cur}$}\n\\AxiomC{$\\mathit{val}: \\mathrm{VAL}$}\n\\AxiomC{$A_p,\\, \\mathsf{makeOp}(\\mathit{cur}, \\mathsf{insert}(\\mathit{val})) \\evalto A_p'$}\n\\LeftLabel{\\textsc{Make-Insert}}\n\\TrinaryInfC{$A_p,\\, \\mathit{expr}.\\mathsf{insertAfter}(\\mathit{val}) \\evalto A_p'$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$A_p,\\, \\mathit{expr} \\evalto \\mathit{cur}$}\n\\AxiomC{$A_p,\\, \\mathsf{makeOp}(\\mathit{cur}, \\mathsf{delete}) \\evalto A_p'$}\n\\LeftLabel{\\textsc{Make-Delete}}\n\\BinaryInfC{$A_p,\\, \\mathit{expr}.\\mathsf{delete} \\evalto A_p'$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$\\mathit{ctr} = \\mathrm{max}(\\{0\\} \\,\\cup\\, \\{ c_i \\mid (c_i, p_i) \\in A_p(\\mathsf{ops}) \\}$}\n\\AxiomC{$A_p,\\, \\mathsf{apply}(\\mathsf{op}((\\mathit{ctr} + 1, p), A_p(\\mathsf{ops}),\n    \\mathit{cur}, \\mathit{mut})) \\evalto A_p'$}\n\\LeftLabel{\\textsc{Make-Op}}\n\\BinaryInfC{$A_p,\\, \\mathsf{makeOp}(\\mathit{cur}, \\mathit{mut}) \\evalto A_p'$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$A_p,\\, \\mathit{op} \\evalto A_p'$}\n\\LeftLabel{\\textsc{Apply-Local}}\n\\UnaryInfC{$A_p,\\, \\mathsf{apply}(\\mathit{op}) \\evalto A_p'[\\,\n    \\mathsf{queue} \\,\\mapsto\\, A_p'(\\mathsf{queue}) \\,\\cup\\, \\{\\mathit{op}\\},\\;\n    \\mathsf{ops} \\,\\mapsto\\, A_p'(\\mathsf{ops}) \\,\\cup\\, \\{\\mathit{op.id}\\}\\,]$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$\\mathit{op} \\in A_p(\\mathsf{recv})$}\n\\AxiomC{$\\mathit{op.id} \\notin A_p(\\mathsf{ops})$}\n\\AxiomC{$\\mathit{op.deps} \\subseteq A_p(\\mathsf{ops})$}\n\\AxiomC{$A_p,\\, \\mathit{op} \\evalto A_p'$}\n\\LeftLabel{\\textsc{Apply-Remote}}\n\\QuaternaryInfC{$A_p,\\, \\mathsf{yield} \\evalto\n    A_p'[\\,\\mathsf{ops} \\,\\mapsto\\, A_p'(\\mathsf{ops}) \\,\\cup\\, \\{\\mathit{op.id}\\}\\,]$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{}\n\\LeftLabel{\\textsc{Send}}\n\\UnaryInfC{$A_p,\\, \\mathsf{yield} \\evalto\n    A_p[\\,\\mathsf{send} \\,\\mapsto\\, A_p(\\mathsf{send}) \\,\\cup\\, A_p(\\mathsf{queue})\\,]$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$q: \\mathrm{ReplicaID}$}\n\\LeftLabel{\\textsc{Recv}}\n\\UnaryInfC{$A_p,\\, \\mathsf{yield} \\evalto\n    A_p[\\,\\mathsf{recv} \\,\\mapsto\\, A_p(\\mathsf{recv}) \\,\\cup\\, A_q(\\mathsf{send})\\,]$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$A_p,\\, \\mathsf{yield} \\evalto A_p'$}\n\\AxiomC{$A_p',\\, \\mathsf{yield} \\evalto A_p''$}\n\\LeftLabel{\\textsc{Yield}}\n\\BinaryInfC{$A_p,\\, \\mathsf{yield} \\evalto A_p''$}\n\\end{prooftree}\n\\caption{Rules for generating, sending, and receiving operations.}\n\\label{fig:send-recv}\n\\end{figure*}\n\nThe evaluation rules for commands are given in Figure~\\ref{fig:send-recv}. The \\textsc{Make-Assign}, \\textsc{Make-Insert} and \\textsc{Make-Delete} rules define how these respective commands mutate the document: all three delegate to the \\textsc{Make-Op} rule to generate and apply the operation. \\textsc{Make-Op} generates a new Lamport timestamp by choosing a counter value that is 1 greater than any existing counter in $A_p(\\mathsf{ops})$, the set of all operation IDs that have been applied to replica $p$.\n\n\\textsc{Make-Op} constructs an \\textsf{op()} tuple of the form described above, and delegates to the \\textsc{Apply-Local} rule to process the operation. \\textsc{Apply-Local} does three things: it evaluates the operation to produce a modified local state $A_p'$, it adds the operation to the queue of generated operations $A_p(\\mathsf{queue})$, and it adds the ID to the set of processed operations $A_p(\\mathsf{ops})$.\n\nThe \\textsf{yield} command, inspired by Burckhardt et al.~\\cite{Burckhardt:2012jy}, performs network communication: sending and receiving operations to and from other replicas, and applying operations from remote replicas. The rules \\textsc{Apply-Remote}, \\textsc{Send}, \\textsc{Recv} and \\textsc{Yield} define the semantics of \\textsf{yield}. Since any of these rules can be used to evaluate \\textsf{yield}, their effect is nondeterministic, which models the asynchronicity of the network: a message sent by one replica arrives at another replica at some arbitrarily later point in time, and there is no message ordering guarantee in the network.\n\nThe \\textsc{Send} rule takes any operations that were placed in $A_p(\\mathsf{queue})$ by \\textsc{Apply-Local} and adds them to a send buffer $A_p(\\mathsf{send})$. Correspondingly, the \\textsc{Recv} rule takes operations in the send buffer of replica $q$ and adds them to the receive buffer $A_p(\\mathsf{recv})$ of replica $p$. This is the only rule that involves more than one replica, and it models all network communication.\n\nOnce an operation appears in the receive buffer $A_p(\\mathsf{recv})$, the rule \\textsc{Apply-Remote} may apply. Under the preconditions that the operation has not already been processed and that its causal dependencies are satisfied, \\textsc{Apply-Remote} applies the operation in the same way as \\textsc{Apply-Local}, and adds its ID to the set of processed operations $A_p(\\mathsf{ops})$.\n\nThe actual document modifications are performed by applying the operations, which we discuss next.\n\n\\subsection{Applying Operations}\n\n\\begin{sidewaysfigure*}\n\\begin{prooftree}\n\\AxiomC{$\\mathit{ctx},\\, k_1 \\evalto \\mathit{child}$}\n\\AxiomC{$\\mathit{child},\\, \\mathsf{op}(\\mathit{id}, \\mathit{deps},\n    \\mathsf{cursor}(\\langle k_2, \\dots, k_{n-1} \\rangle,\\, k_n), \\mathit{mut}) \\evalto \\mathit{child}'$}\n\\AxiomC{$\\mathit{ctx},\\, \\mathsf{addId}(k_1, \\mathit{id}, \\mathit{mut}) \\evalto \\mathit{ctx}'$}\n\\LeftLabel{\\textsc{Descend}}\n\\TrinaryInfC{$\\mathit{ctx},\\, \\mathsf{op}(\\mathit{id}, \\mathit{deps},\n    \\mathsf{cursor}(\\langle k_1, k_2, \\dots, k_{n-1} \\rangle,\\, k_n), \\mathit{mut}) \\evalto\n    \\mathit{ctx}' [\\, k_1 \\,\\mapsto\\, \\mathit{child}' \\,]$}\n\\end{prooftree}\\vspace{6pt}\n\n\\begin{center}\n\\AxiomC{$k \\in \\mathrm{dom}(\\mathit{ctx})$}\n\\LeftLabel{\\textsc{Child-Get}}\n\\UnaryInfC{$\\mathit{ctx},\\, k \\evalto \\mathit{ctx}(k)$}\n\\DisplayProof\\hspace{3em}\n%\n\\AxiomC{$\\mathsf{mapT}(k) \\notin \\mathrm{dom}(\\mathit{ctx})$}\n\\LeftLabel{\\textsc{Child-Map}}\n\\UnaryInfC{$\\mathit{ctx},\\, \\mathsf{mapT}(k) \\evalto \\{\\}$}\n\\DisplayProof\\hspace{3em}\n%\n\\AxiomC{$\\mathsf{listT}(k) \\notin \\mathrm{dom}(\\mathit{ctx})$}\n\\LeftLabel{\\textsc{Child-List}}\n\\UnaryInfC{$\\mathit{ctx},\\, \\mathsf{listT}(k) \\evalto\n    \\{\\,\\mathsf{next}(\\mathsf{head}) \\,\\mapsto\\, \\mathsf{tail} \\,\\}$}\n\\DisplayProof\\proofSkipAmount\n\\end{center}\\vspace{6pt}\n\n\\begin{center}\n\\AxiomC{$\\mathsf{regT}(k) \\notin \\mathrm{dom}(\\mathit{ctx})$}\n\\LeftLabel{\\textsc{Child-Reg}}\n\\UnaryInfC{$\\mathit{ctx},\\, \\mathsf{regT}(k) \\evalto \\{\\}$}\n\\DisplayProof\\hspace{3em}\n%\n\\AxiomC{$\\mathsf{pres}(k) \\in \\mathrm{dom}(\\mathit{ctx})$}\n\\LeftLabel{$\\textsc{Presence}_1$}\n\\UnaryInfC{$\\mathit{ctx},\\, \\mathsf{pres}(k) \\evalto \\mathit{ctx}(\\mathsf{pres}(k))$}\n\\DisplayProof\\hspace{3em}\n%\n\\AxiomC{$\\mathsf{pres}(k) \\notin \\mathrm{dom}(\\mathit{ctx})$}\n\\LeftLabel{$\\textsc{Presence}_2$}\n\\UnaryInfC{$\\mathit{ctx},\\, \\mathsf{pres}(k) \\evalto \\{\\}$}\n\\DisplayProof\\proofSkipAmount\n\\end{center}\\vspace{6pt}\n\n\\begin{center}\n\\AxiomC{$\\mathit{mut} \\not= \\mathsf{delete}$}\n\\AxiomC{$k_\\mathit{tag} \\in \\{\\mathsf{mapT}(k), \\mathsf{listT}(k), \\mathsf{regT}(k)\\}$}\n\\AxiomC{$\\mathit{ctx},\\, \\mathsf{pres}(k) \\evalto \\mathit{pres}$}\n\\LeftLabel{$\\textsc{Add-ID}_1$}\n\\TrinaryInfC{$\\mathit{ctx},\\, \\mathsf{addId}(k_\\mathit{tag}, \\mathit{id}, \\mathit{mut}) \\evalto\n    \\mathit{ctx}[\\, \\mathsf{pres}(k) \\,\\mapsto\\, \\mathit{pres} \\,\\cup\\, \\{\\mathit{id}\\} \\,]$}\n\\DisplayProof\\hspace{3em}\n%\n\\AxiomC{$\\mathit{mut} = \\mathsf{delete}$}\n\\LeftLabel{$\\textsc{Add-ID}_2$}\n\\UnaryInfC{$\\mathit{ctx},\\, \\mathsf{addId}(k_\\mathit{tag}, \\mathit{id}, \\mathit{mut}) \\evalto \\mathit{ctx}$}\n\\DisplayProof\\proofSkipAmount\n\\end{center}\\vspace{6pt}\n\n\\begin{prooftree}\n\\AxiomC{$\\mathit{val} \\not= \\texttt{[]} \\,\\wedge\\, \\mathit{val} \\not= \\texttt{\\string{\\string}}$}\n\\AxiomC{$\\mathit{ctx},\\, \\mathsf{clear}(\\mathit{deps}, \\mathsf{regT}(k)) \\evalto \\mathit{ctx}',\\, \\mathit{pres}$}\n\\AxiomC{$\\mathit{ctx}',\\, \\mathsf{addId}(\\mathsf{regT}(k), \\mathit{id}, \\mathsf{assign}(\\mathit{val}))\n    \\evalto \\mathit{ctx}''$}\n\\AxiomC{$\\mathit{ctx}'',\\, \\mathsf{regT}(k) \\evalto \\mathit{child}$}\n\\LeftLabel{\\textsc{Assign}}\n\\QuaternaryInfC{$\\mathit{ctx},\\, \\mathsf{op}(\\mathit{id}, \\mathit{deps},\n    \\mathsf{cursor}(\\langle\\rangle,\\, k), \\mathsf{assign}(\\mathit{val})) \\evalto\n    \\mathit{ctx}''[\\, \\mathsf{regT}(k) \\,\\mapsto\\,\n    \\mathit{child}[\\, \\mathit{id} \\,\\mapsto\\, \\mathit{val} \\,]\\,]$}\n\\end{prooftree}\\vspace{6pt}\n\n\\begin{prooftree}\n\\AxiomC{$\\mathit{val} = \\texttt{\\string{\\string}}$}\n\\AxiomC{$\\mathit{ctx},\\, \\mathsf{clearElem}(\\mathit{deps}, k) \\evalto \\mathit{ctx}',\\, \\mathit{pres}$}\n\\AxiomC{$\\mathit{ctx}',\\, \\mathsf{addId}(\\mathsf{mapT}(k), \\mathit{id}, \\mathsf{assign}(\\mathit{val}))\n    \\evalto \\mathit{ctx}''$}\n\\AxiomC{$\\mathit{ctx}'',\\, \\mathsf{mapT}(k) \\evalto \\mathit{child}$}\n\\LeftLabel{\\textsc{Empty-Map}}\n\\QuaternaryInfC{$\\mathit{ctx},\\, \\mathsf{op}(\\mathit{id}, \\mathit{deps},\n    \\mathsf{cursor}(\\langle\\rangle,\\, k), \\mathsf{assign}(\\mathit{val})) \\evalto\n    \\mathit{ctx}''[\\, \\mathsf{mapT}(k) \\,\\mapsto\\, \\mathit{child} \\,]$}\n\\end{prooftree}\\vspace{6pt}\n\n\\begin{prooftree}\n\\AxiomC{$\\mathit{val} = \\texttt{[]}$}\n\\AxiomC{$\\mathit{ctx},\\, \\mathsf{clearElem}(\\mathit{deps}, k) \\evalto \\mathit{ctx}',\\, \\mathit{pres}$}\n\\AxiomC{$\\mathit{ctx}',\\, \\mathsf{addId}(\\mathsf{listT}(k), \\mathit{id}, \\mathsf{assign}(\\mathit{val}))\n    \\evalto \\mathit{ctx}''$}\n\\AxiomC{$\\mathit{ctx}'',\\, \\mathsf{listT}(k) \\evalto \\mathit{child}$}\n\\LeftLabel{\\textsc{Empty-List}}\n\\QuaternaryInfC{$\\mathit{ctx},\\, \\mathsf{op}(\\mathit{id}, \\mathit{deps},\n    \\mathsf{cursor}(\\langle\\rangle,\\, k), \\mathsf{assign}(\\mathit{val})) \\evalto\n    \\mathit{ctx}''[\\, \\mathsf{listT}(k) \\,\\mapsto\\, \\mathit{child} \\,]$}\n\\end{prooftree}\\vspace{6pt}\n\n\\begin{prooftree}\n\\AxiomC{$\\mathit{ctx}(\\mathsf{next}(\\mathit{prev})) = \\mathit{next}$}\n\\AxiomC{$\\mathit{next} < \\mathit{id} \\,\\vee\\, \\mathit{next} = \\mathsf{tail}$}\n\\AxiomC{$\\mathit{ctx},\\, \\mathsf{op}(\\mathit{id}, \\mathit{deps},\n    \\mathsf{cursor}(\\langle\\rangle,\\, \\mathit{id}), \\mathsf{assign}(\\mathit{val})) \\evalto \\mathit{ctx}'$}\n\\LeftLabel{$\\textsc{Insert}_1$}\n\\TrinaryInfC{$\\mathit{ctx},\\, \\mathsf{op}(\\mathit{id}, \\mathit{deps},\n    \\mathsf{cursor}(\\langle\\rangle,\\, \\mathit{prev}), \\mathsf{insert}(\\mathit{val})) \\evalto\n    \\mathit{ctx}'[\\,\\mathsf{next}(\\mathit{prev}) \\,\\mapsto\\, \\mathit{id},\\;\n    \\mathsf{next}(\\mathit{id}) \\,\\mapsto\\, \\mathit{next}\\,]$}\n\\end{prooftree}\\vspace{6pt}\n\n\\begin{prooftree}\n\\AxiomC{$\\mathit{ctx}(\\mathsf{next}(\\mathit{prev})) = \\mathit{next}$}\n\\AxiomC{$\\mathit{id} < \\mathit{next}$}\n\\AxiomC{$ctx,\\, \\mathsf{op}(\\mathit{id}, \\mathit{deps},\n    \\mathsf{cursor}(\\langle\\rangle,\\, \\mathit{next}), \\mathsf{insert}(\\mathit{val})) \\evalto \\mathit{ctx}'$}\n\\LeftLabel{$\\textsc{Insert}_2$}\n\\TrinaryInfC{$\\mathit{ctx},\\, \\mathsf{op}(\\mathit{id}, \\mathit{deps},\n    \\mathsf{cursor}(\\langle\\rangle,\\, \\mathit{prev}), \\mathsf{insert}(\\mathit{val})) \\evalto \\mathit{ctx}'$}\n\\end{prooftree}\n\\caption{Rules for applying insertion and assignment operations to update the state of a replica.}\\label{fig:operation-rules}\n\\end{sidewaysfigure*}\n\nFigure~\\ref{fig:operation-rules} gives the rules that apply an operation $\\mathsf{op}$ to a context $\\mathit{ctx}$, producing an updated context $\\mathit{ctx}'$. The context is initially the replica state $A_p$, but may refer to subtrees of the state as rules are recursively applied. These rules are used by \\textsc{Apply-Local} and \\textsc{Apply-Remote} to perform the state updates on a document.\n\nWhen the operation cursor's vector of keys is non-empty, the \\textsc{Descend} rule first applies. It recursively descends the document tree by following the path described by the keys. If the tree node already exists in the local replica state, \\textsc{Child-Get} finds it, otherwise \\textsc{Child-Map} and \\textsc{Child-List} create an empty map or list respectively.\n\nThe \\textsc{Descend} rule also invokes $\\textsc{Add-ID}_{1,2}$ at each tree node along the path described by the cursor, adding the operation ID to the presence set $\\mathsf{pres}(k)$ to indicate that the subtree includes a mutation made by this operation.\n\nThe remaining rules in Figure~\\ref{fig:operation-rules} apply when the vector of keys in the cursor is empty, which is the case when descended to the context of the tree node to which the mutation applies. The \\textsc{Assign} rule handles assignment of a primitive value to a register, \\textsc{Empty-Map} handles assignment where the value is the empty map literal \\verb|{}|, and \\textsc{Empty-List} handles assignment of the empty list \\verb|[]|. These three rules for \\textsf{assign} have a similar structure: first clearing the prior value at the cursor (as discussed in the next section), then adding the operation ID to the presence set, and finally incorporating the new value into the tree of local state.\n\nThe $\\textsc{Insert}_{1,2}$ rules handle insertion of a new element into an ordered list. In this case, the cursor refers to the list element $\\mathit{prev}$, and the new element is inserted after that position in the list. $\\textsc{Insert}_1$ performs the insertion by manipulating the linked list structure. $\\textsc{Insert}_2$ handles the case of multiple replicas concurrently inserting list elements at the same position, and uses the ordering relation $<$ on Lamport timestamps to consistently determine the insertion point. Our approach for handling insertions is based on the RGA algorithm~\\cite{Roh:2011dw}. We show later that these rules ensure all replicas converge towards the same state.\n\n\\subsubsection{Clearing Prior State}\n\n\\begin{figure*}\n\\begin{prooftree}\n\\AxiomC{$\\mathit{ctx},\\, \\mathsf{clearElem}(\\mathit{deps}, k) \\evalto \\mathit{ctx}',\\, \\mathit{pres}$}\n\\LeftLabel{\\textsc{Delete}}\n\\UnaryInfC{$\\mathit{ctx},\\, \\mathsf{op}(\\mathit{id}, \\mathit{deps},\n    \\mathsf{cursor}(\\langle\\rangle,\\, k), \\mathsf{delete}) \\evalto \\mathit{ctx}'$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$\\mathit{ctx},\\, \\mathsf{clearAny}(\\mathit{deps}, k) \\evalto \\mathit{ctx}', \\mathit{pres}_1$}\n\\AxiomC{$\\mathit{ctx}',\\, \\mathsf{pres}(k) \\evalto \\mathit{pres}_2$}\n\\AxiomC{$\\mathit{pres}_3 = \\mathit{pres}_1 \\,\\cup\\, \\mathit{pres}_2 \\setminus \\mathit{deps}$}\n\\LeftLabel{\\textsc{Clear-Elem}}\n\\TrinaryInfC{$\\mathit{ctx},\\, \\mathsf{clearElem}(\\mathit{deps}, k) \\evalto\n    \\mathit{ctx}' [\\, \\mathsf{pres}(k) \\,\\mapsto\\, \\mathit{pres}_3 \\,],\\, \\mathit{pres}_3$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$\\begin{matrix}\n    \\mathit{ctx},\\, \\mathsf{clear}(\\mathit{deps}, \\mathsf{mapT}(k)) \\\\\n    \\evalto \\mathit{ctx}_1,\\, \\mathit{pres}_1 \\end{matrix}$}\n\\AxiomC{$\\begin{matrix}\n    \\mathit{ctx}_1,\\, \\mathsf{clear}(\\mathit{deps}, \\mathsf{listT}(k)) \\\\\n    \\evalto \\mathit{ctx}_2,\\, \\mathit{pres}_2 \\end{matrix}$}\n\\AxiomC{$\\begin{matrix}\n    \\mathit{ctx}_2,\\, \\mathsf{clear}(\\mathit{deps}, \\mathsf{regT}(k)) \\\\\n    \\evalto \\mathit{ctx}_3,\\, \\mathit{pres}_3 \\end{matrix}$}\n\\LeftLabel{\\textsc{Clear-Any}}\n\\TrinaryInfC{$\\mathit{ctx},\\, \\mathsf{clearAny}(\\mathit{deps}, k) \\evalto\n    \\mathit{ctx}_3,\\, \\mathit{pres}_1 \\,\\cup\\, \\mathit{pres}_2 \\,\\cup\\, \\mathit{pres}_3$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$k \\notin \\mathrm{dom}(\\mathit{ctx})$}\n\\LeftLabel{\\textsc{Clear-None}}\n\\UnaryInfC{$\\mathit{ctx},\\, \\mathsf{clear}(\\mathit{deps}, k) \\evalto \\mathit{ctx},\\, \\{\\}$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$\\mathsf{regT}(k) \\in \\mathrm{dom}(\\mathit{ctx})$}\n\\AxiomC{$\\mathit{concurrent} = \\{ \\mathit{id} \\mapsto v \\mid\n    (\\mathit{id} \\mapsto v) \\in \\mathit{ctx}(\\mathsf{regT}(k))\n    \\,\\wedge\\, \\mathit{id} \\notin \\mathit{deps} \\}$}\n\\LeftLabel{\\textsc{Clear-Reg}}\n\\BinaryInfC{$\\mathit{ctx},\\, \\mathsf{clear}(\\mathit{deps}, \\mathsf{regT}(k)) \\evalto\n    \\mathit{ctx}[\\, \\mathsf{regT}(k) \\,\\mapsto\\, \\mathit{concurrent} \\,],\\, \\mathrm{dom}(\\mathit{concurrent})$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$\\mathsf{mapT}(k) \\in \\mathrm{dom}(\\mathit{ctx})$}\n\\AxiomC{$\\mathit{ctx}(\\mathsf{mapT}(k)),\\, \\mathsf{clearMap}(\\mathit{deps}, \\{\\}) \\evalto\n    \\mathit{cleared},\\, \\mathit{pres}$}\n\\LeftLabel{$\\textsc{Clear-Map}_1$}\n\\BinaryInfC{$\\mathit{ctx},\\, \\mathsf{clear}(\\mathit{deps}, \\mathsf{mapT}(k)) \\evalto\n    \\mathit{ctx} [\\, \\mathsf{mapT}(k) \\,\\mapsto\\, \\mathit{cleared} \\,],\\, \\mathit{pres}$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$\\begin{matrix}\n    k \\in \\mathrm{keys}(\\mathit{ctx}) \\\\\n    \\wedge\\, k \\notin \\mathit{done} \\end{matrix}$}\n\\AxiomC{$\\begin{matrix}\n    \\mathit{ctx},\\, \\mathsf{clearElem}(\\mathit{deps}, k) \\\\\n    \\evalto \\mathit{ctx}', \\mathit{pres}_1 \\end{matrix}$}\n\\AxiomC{$\\begin{matrix}\n    \\mathit{ctx}',\\, \\mathsf{clearMap}(\\mathit{deps}, \\mathit{done} \\cup \\{k\\}) \\\\\n    \\evalto \\mathit{ctx}'',\\, \\mathit{pres}_2 \\end{matrix}$}\n\\LeftLabel{$\\textsc{Clear-Map}_2$}\n\\TrinaryInfC{$\\mathit{ctx},\\, \\mathsf{clearMap}(\\mathit{deps}, \\mathit{done})\n    \\evalto \\mathit{ctx}'',\\, \\mathit{pres}_1 \\,\\cup\\, \\mathit{pres}_2$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$\\mathit{done} = \\mathrm{keys}(\\mathit{ctx})$}\n\\LeftLabel{$\\textsc{Clear-Map}_3$}\n\\UnaryInfC{$\\mathit{ctx},\\, \\mathsf{clearMap}(\\mathit{deps}, \\mathit{done}) \\evalto \\mathit{ctx},\\, \\{\\}$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$\\mathsf{listT}(k) \\in \\mathrm{dom}(\\mathit{ctx})$}\n\\AxiomC{$\\mathit{ctx}(\\mathsf{listT}(k)),\\, \\mathsf{clearList}(\\mathit{deps}, \\mathsf{head})\n    \\evalto \\mathit{cleared},\\, \\mathit{pres}$}\n\\LeftLabel{$\\textsc{Clear-List}_1$}\n\\BinaryInfC{$\\mathit{ctx},\\, \\mathsf{clear}(\\mathit{deps}, \\mathsf{listT}(k)) \\evalto\n    \\mathit{ctx}[\\, \\mathsf{listT}(k) \\,\\mapsto\\, \\mathit{cleared} \\,],\\, \\mathit{pres}$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$\\begin{matrix}\n    k \\not= \\mathsf{tail} \\,\\wedge\\\\\n    \\mathit{ctx}(\\mathsf{next}(k)) = \\mathit{next} \\end{matrix}$}\n\\AxiomC{$\\begin{matrix}\n    \\mathit{ctx},\\, \\mathsf{clearElem}(\\mathit{deps}, k) \\\\\n    \\evalto \\mathit{ctx}', \\mathit{pres}_1 \\end{matrix}$}\n\\AxiomC{$\\begin{matrix}\n    \\mathit{ctx}',\\, \\mathsf{clearList}(\\mathit{deps}, \\mathit{next}) \\\\\n    \\evalto \\mathit{ctx}'', \\mathit{pres}_2 \\end{matrix}$}\n\\LeftLabel{$\\textsc{Clear-List}_2$}\n\\TrinaryInfC{$\\mathit{ctx},\\, \\mathsf{clearList}(\\mathit{deps}, k) \\evalto\n    \\mathit{ctx}'',\\, \\mathit{pres}_1 \\,\\cup\\, \\mathit{pres}_2$}\n\\end{prooftree}\n\n\\begin{prooftree}\n\\AxiomC{$k = \\mathsf{tail}$}\n\\LeftLabel{$\\textsc{Clear-List}_3$}\n\\UnaryInfC{$\\mathit{ctx},\\, \\mathsf{clearList}(\\mathit{deps}, k) \\evalto \\mathit{ctx},\\, \\{\\}$}\n\\end{prooftree}\n\\caption{Rules for applying deletion operations to update the state of a replica.}\\label{fig:clear-rules}\n\\end{figure*}\n\nAssignment and deletion operations require that prior state (the value being overwritten or deleted) is cleared, while also ensuring that concurrent modifications are not lost, as illustrated in Figure~\\ref{fig:map-remove}. The rules to handle this clearing process are given in Figure~\\ref{fig:clear-rules}. Intuitively, the effect of clearing something is to reset it to its empty state by undoing any operations that causally precede the current operation, while leaving the effect of any concurrent operations untouched.\n\nA \\textsf{delete} operation can be used to delete either an element from an ordered list or a key from a map, depending on what the cursor refers to. The \\textsc{Delete} rule shows how this operation is evaluated by delegating to \\textsc{Clear-Elem}. In turn, \\textsc{Clear-Elem} uses \\textsc{Clear-Any} to clear out any data with a given key, regardless of whether it is of type \\textsf{mapT}, \\textsf{listT} or \\textsf{regT}, and also updates the presence set to include any nested operation IDs, but exclude any operations in $\\mathit{deps}$.\n\nThe premises of \\textsc{Clear-Any} are satisfied by $\\textsc{Clear-Map}_1$, $\\textsc{Clear-List}_1$ and \\textsc{Clear-Reg} if the respective key appears in $\\mathit{ctx}$, or by \\textsc{Clear-None} (which does nothing) if the key is absent.\n\nAs defined by the \\textsc{Assign} rule, a register maintains a mapping from operation IDs to values. \\textsc{Clear-Reg} updates a register by removing all operation IDs that appear in $\\mathit{deps}$ (i.e., which causally precede the clearing operation), but retaining all operation IDs that do not appear in $\\mathit{deps}$ (from assignment operations that are concurrent with the clearing operation).\n\nClearing maps and lists takes a similar approach: each element of the map or list is recursively cleared using \\textsf{clearElem}, and presence sets are updated to exclude $\\mathit{deps}$. Thus, any list elements or map entries whose modifications causally precede the clearing operation will end up with empty presence sets, and thus be considered deleted. Any map or list elements containing operations that are concurrent with the clearing operation are preserved.\n\n\\subsection{Convergence}\\label{sec:convergence}\n\nAs outlined in Section~\\ref{sec:intro-replication}, we require that all replicas automatically converge towards the same state -- a key requirement of a CRDT. We now formalize this notion, and show that the rules in Figures~\\ref{fig:expr-rules} to~\\ref{fig:clear-rules} satisfy this requirement.\n\n\\begin{definition}[valid execution]\\label{def:valid-exec}\nA \\emph{valid execution} is a set of operations generated by a set of replicas $\\{p_1, \\dots, p_k\\}$, each reducing a sequence of commands $\\langle \\mathit{cmd}_1 \\mathbin{;} \\dots \\mathbin{;} \\mathit{cmd}_n \\rangle$ without getting stuck.\n\\end{definition}\n\nA reduction gets stuck if there is no application of rules in which all premises are satisfied. For example, the $\\textsc{Idx}_{3,4}$ rules in Figure~\\ref{fig:expr-rules} get stuck if $\\mathsf{idx}(n)$ tries to iterate past the end of a list, which would happen if $n$ is greater than the number of non-deleted elements in the list; in a real implementation this would be a runtime error. By constraining valid executions to those that do not get stuck, we ensure that operations only refer to list elements that actually exist.\n\nNote that it is valid for an execution to never perform any network communication, either because it never invokes the \\textsf{yield} command, or because the nondeterministic execution of \\textsf{yield} never applies the \\textsc{Recv} rule. We need only a replica's local state to determine whether reduction gets stuck.\n\n\\begin{definition}[history]\\label{def:history}\nA \\emph{history} is a sequence of operations in the order it was applied at one particular replica $p$ by application of the rules \\textsc{Apply-Local} and \\textsc{Apply-Remote}.\n\\end{definition}\n\nSince the evaluation rules sequentially apply one operation at a time at a given replica, the order is well-defined. Even if two replicas $p$ and $q$ applied the same set of operations, i.e. if $A_p(\\mathsf{ops}) = A_q(\\mathsf{ops})$, they may have applied any concurrent operations in a different order. Due to the premise $\\mathit{op.deps} \\subseteq A_p(\\mathsf{ops})$ in \\textsc{Apply-Remote}, histories are consistent with causality: if an operation has causal dependencies, it appears at some point after those dependencies in the history.\n\n\\begin{definition}[document state]\\label{def:doc-state}\nThe \\emph{document state} of a replica $p$ is the subtree of $A_p$ containing the document: that is, $A_p(\\mathsf{mapT}(\\mathsf{doc}))$ or $A_p(\\mathsf{listT}(\\mathsf{doc}))$ or $A_p(\\mathsf{regT}(\\mathsf{doc}))$, whichever is defined.\n\\end{definition}\n\n$A_p$ contains variables defined with \\textsf{let}, which are local to one replica, and not part of the replicated state. The definition of document state excludes these variables.\n\n\\begin{convergence-thm}\nFor any two replicas $p$ and $q$ that participated in a valid execution, if $A_p(\\mathsf{ops}) = A_q(\\mathsf{ops})$, then $p$ and $q$ have the same document state.\n\\end{convergence-thm}\n\nThis theorem is proved in the appendix. It formalizes the safety property of convergence: if two replicas have processed the same set of operations, possibly in a different order, then they are in the same state. In combination with a liveness property, namely that every replica eventually processes all operations, we obtain the desired notion of convergence: all replicas eventually end up in the same state.\n\nThe liveness property depends on assumptions of replicas invoking \\textsf{yield} sufficiently often, and all nondeterministic rules for \\textsf{yield} being chosen fairly. We will not formalize the liveness property in this paper, but assert that it can usually be provided in practice, as network interruptions are usually of finite duration.\n\n\\section{Conclusions and Further Work}\n\nIn this paper we demonstrated how to compose CRDTs for ordered lists, maps and registers into a compound CRDT with a JSON data model. It supports arbitrarily nested lists and maps, and it allows replicas to make arbitrary changes to the data without waiting for network communication. Replicas asynchronously send mutations to other replicas in the form of operations. Concurrent operations are commutative, which ensures that replicas converge towards the same state without requiring application-specific conflict resolution logic.\n\nThis work focused on the formal semantics of the JSON CRDT, represented as a mathematical model. We are also working on a practical implementation of the algorithm, and will report on its performance characteristics in follow-on work.\n\nOur principle of not losing input due to concurrent modifications appears at first glance to be reasonable, but as illustrated in Figure~\\ref{fig:todo-item}, it leads to merged document states that may be surprising to application programmers who are more familiar with sequential programs. Further work will be needed to understand the expectations of application programmers, and to design data structures that are minimally surprising under concurrent modification. It may turn out that a schema language will be required to support more complex applications. A schema language could also support semantic annotations, such as indicating that a number should be treated as a counter rather than a register.\n\nThe CRDT defined in this paper supports insertion, deletion and assignment operations. In addition to these, it would be useful to support a \\emph{move} operation (to change the order of elements in an ordered list, or to move a subtree from one position in a document to another) and an \\emph{undo} operation. Moreover, garbage collection (tombstone removal) is required in order to prevent unbounded growth of the data structure. We plan to address these missing features in future work.\n\n\\section*{Acknowledgements}\n\nThis research was supported by a grant from The Boeing Company. Thank you to Dominic Orchard, Diana Vasile, and the anonymous reviewers for comments that improved this paper.\n\n\\bibliographystyle{IEEEtran}\n\\bibliography{references}{}\n\\vfill\n\n\\begin{IEEEbiography}[{\\includegraphics[width=1in]{mk428.jpg}}]{Martin Kleppmann}\nis a Research Associate in the Computer Laboratory at the University of Cambridge. His current research project, TRVE Data, is working towards better security and privacy in cloud applications by applying end-to-end encryption to collaboratively editable application data. His book \\emph{Designing Data-Intensive Applications} was published by O'Reilly Media in 2017. Previously, he worked as a software engineer and entrepreneur at several internet companies, including Rapportive and LinkedIn.\n\\end{IEEEbiography}\n\n\\begin{IEEEbiography}[{\\includegraphics[width=1in]{arb33.jpg}}]{Alastair R. Beresford}\nis a Senior Lecturer in the Computer Laboratory at the University of Cambridge. His research work explores the security and privacy of large-scale distributed systems, with a particular focus on networked mobile devices such as smartphones, tablets and laptops. He looks at the security and privacy of the devices themselves, as well as the security and privacy problems induced by the interaction between mobile devices and cloud-based Internet services.\n\\end{IEEEbiography}\n\n\\ifincludeappendix\n\\clearpage\n\\appendix[Proof of Convergence]\\label{sec:proof}\n\n\\begin{theorem}\\label{thm:convergence}\nFor any two replicas $p$ and $q$ that participated in a valid execution, if $A_p(\\mathsf{ops}) = A_q(\\mathsf{ops})$, then $p$ and $q$ have the same document state.\n\\end{theorem}\n\n\\begin{proof}\nConsider the histories $H_p$ and $H_q$ at $p$ and $q$ respectively (see Definition~\\ref{def:history}). The rules \\textsc{Apply-Local} and \\textsc{Apply-Remote} maintain the invariant that an operation is added to $A_p(\\mathsf{ops})$ or $A_q(\\mathsf{ops})$ if and only if it was applied to the document state at $p$ or $q$. Thus, $A_p(\\mathsf{ops}) = A_q(\\mathsf{ops})$ iff $H_p$ and $H_q$ contain the same set of operations (potentially ordered differently).\n\nThe history $H_p$ at replica $p$ is a sequence of $n$ operations: $H_p = \\langle o_1, \\dots, o_n \\rangle$, and the document state at $p$ is derived from $H_p$ by starting in the empty state and applying the operations in order. Likewise, the document state at $q$ is derived from $H_q$, which is a permutation of $H_p$. Both histories must be consistent with causality, i.e. for all $i$ with $1 \\le i \\le n$, we require $o_i.\\mathit{deps} \\subseteq \\{o_j.\\mathit{id} \\mid 1 \\le j < i\\}$. The causality invariant is maintained by the \\textsc{Apply-*} rules.\n\nWe can prove the theorem by induction over the length of history $n$.\n\n\\emph{Base case:} An empty history with $n=0$ describes the empty document state. The empty document is always the same, and so any two replicas that have not executed any operations are by definition in the same state.\n\n\\emph{Induction step:} Given histories $H_p$ and $H_q$ of length $n$, such that $H_p = \\langle o_1, \\dots, o_n \\rangle$ and $H_q$ is a permutation of $H_p$, and such that applying $H_p$ results in the same document state as applying $H_q$, we can construct new histories $H_p'$ and $H_q'$ of length $n+1$ by inserting a new operation $o_{n+1}$ at any causally ready position in $H_p$ or $H_q$ respectively. We must then show that for all the histories $H_p'$ and $H_q'$ constructed this way, applying the sequence of operations in order results in the same document state.\n\nIn order to prove the induction step, we examine the insertion of $o_{n+1}$ into $H_p$ and $H_q$. Each history can be split into a prefix, which is the minimal subsequence $\\langle o_1, \\dots, o_j \\rangle$ such that $o_{n+1}.\\mathit{deps} \\subseteq \\{o_1.\\mathit{id}, \\dots, o_j.\\mathit{id}\\}$, and a suffix, which is the remaining subsequence $\\langle o_{j+1}, \\dots, o_n \\rangle$. The prefix contains all operations that causally precede $o_{n+1}$, and possibly some operations that are concurrent with $o_{n+1}$; the suffix contains only operations that are concurrent with $o_{n+1}$. The earliest position where $o_{n+1}$ can be inserted into the history is between the prefix and the suffix; the latest position is at the end of the suffix; or it could be inserted at any point within the suffix.\n\nWe need to show that the effect on the document state is the same, regardless of the position at which $o_{n+1}$ is inserted, and regardless of whether it is inserted into $H_p$ or $H_q$. We do this in Lemma~\\ref{lem:op-commute} by showing that $o_{n+1}$ is commutative with respect to all operations in the suffix, i.e. with respect to any operations that are concurrent to $o_{n+1}$.\n\\end{proof}\n\nBefore we can prove the commutativity of operations, we must first define some more terms and prove some preliminary lemmas.\n\n\\begin{definition}[appearing after]\nIn the ordered list $\\mathit{ctx}$, list element $k_j$ \\emph{appears after} list element $k_1$ if there exists a (possibly empty) sequence of list elements $k_2, \\dots, k_{j-1}$ such that for all $i$ with $1 \\le i < j$, $\\mathit{ctx}(\\mathsf{next}(k_i)) = k_{i+1}$. Moreover, we say $k_j$ appears \\emph{immediately after} $k_1$ if that sequence is empty, i.e. if $\\mathit{ctx}(\\mathsf{next}(k_1)) = k_j$.\n\\end{definition}\n\nThe definition of \\emph{appearing after} corresponds to the order in which the \\textsc{Idx} rules iterate over the list.\n\n\\begin{lemma}\\label{lem:list-after}\nIf $k_2$ appears after $k_1$ in an ordered list, and the list is mutated according to the evaluation rules, $k_2$ also appears after $k_1$ in all later document states.\n\\end{lemma}\n\n\\begin{proof}\nThe only rule that modifies the \\textsf{next} pointers in the context is $\\textsc{Insert}_1$, and it inserts a new list element between two existing list elements (possibly \\textsf{head} and/or \\textsf{tail}). This modification preserves the appears-after relationship between any two existing list elements. Since no other rule affects the list order, appears-after is always preserved.\n\\end{proof}\n\nNote that deletion of an element from a list does not remove it from the sequence of \\textsf{next} pointers, but only clears its presence set $\\mathsf{pres}(k)$.\n\n\\begin{lemma}\\label{lem:insert-between}\nIf one replica inserts a list element $k_\\mathit{new}$ between $k_1$ and $k_2$, i.e. if $k_\\mathit{new}$ appears after $k_1$ in the list and $k_2$ appears after $k_\\mathit{new}$ in the list on the source replica after applying \\textsc{Apply-Local}, then $k_\\mathit{new}$ appears after $k_1$ and $k_2$ appears after $k_\\mathit{new}$ on every other replica where that operation is applied.\n\\end{lemma}\n\n\\begin{proof}\nThe rules for generating list operations ensure that $k_1$ is either \\textsf{head} or an operation identifier, and $k_2$ is either \\textsf{tail} or an operation identifier.\n\nWhen the insertion operation is generated using the \\textsc{Make-Op} rule, its operation identifier is given a counter value $\\mathit{ctr}$ that is greater than the counter of any existing operation ID in $A_p(\\mathsf{ops})$. If $k_2$ is an operation identifier, we must have $k_2 \\in A_p(\\mathsf{ops})$, since both \\textsc{Apply-Local} and \\textsc{Apply-Remote} add operation IDs to $A_p(\\mathsf{ops})$ when applying an insertion. Thus, either $k_2 < k_\\mathit{new}$ under the ordering relation $<$ for Lamport timestamps, or $k_2 = \\mathsf{tail}$.\n\nWhen the insertion operation is applied on another replica using \\textsc{Apply-Remote} and $\\textsc{Insert}_{1,2}$, $k_2$ appears after $k_1$ on that replica (by Lemma~\\ref{lem:list-after} and causality). The cursor of the operation is $\\mathsf{cursor}(\\langle\\dots\\rangle, k_1)$, so the rules start iterating the list at $k_1$, and therefore $k_\\mathit{new}$ is inserted at some position after $k_1$.\n\nIf other concurrent insertions occurred between $k_1$ and $k_2$, their operation ID may be greater than or less than $k_\\mathit{new}$, and thus either $\\textsc{Insert}_1$ or $\\textsc{Insert}_2$ may apply. In particular, $\\textsc{Insert}_2$ skips over any list elements whose Lamport timestamp is greater than $k_\\mathit{new}$. However, we know that $k_2 < k_\\mathit{new} \\vee k_2 = \\mathsf{tail}$, and so $\\textsc{Insert}_1$ will apply with $\\mathit{next}=k_2$ at the latest. The $\\textsc{Insert}_{1,2}$ rules thus never iterate past $k_2$, and thus $k_\\mathit{new}$ is never inserted at a list position that appears after $k_2$.\n\\end{proof}\n\n\\begin{definition}[common ancestor]\\label{def:common-ancestor}\nIn a history $H$, the \\emph{common ancestor} of two concurrent operations $o_r$ and $o_s$ is the latest document state that causally precedes both $o_r$ and $o_s$.\n\\end{definition}\n\nThe common ancestor of $o_r$ and $o_s$ can be defined more formally as the document state resulting from applying a sequence of operations $\\langle o_1, \\dots, o_j \\rangle$ that is the shortest prefix of $H$ that satisfies $(o_r.\\mathit{deps} \\cap o_s.\\mathit{deps}) \\subseteq \\{o_1.\\mathit{id}, \\dots, o_j.\\mathit{id}\\}$.\n\n\\begin{definition}[insertion interval]\\label{def:insert-interval}\nGiven two concurrent operations $o_r$ and $o_s$ that insert into the same list, the \\emph{insertion interval} of $o_r$ is the pair of keys $(k_r^\\mathrm{before}, k_r^\\mathrm{after})$ such that $o_r.\\mathit{id}$ appears after $k_r^\\mathrm{before}$ when $o_r$ has been applied, $k_r^\\mathrm{after}$ appears after $o_r.\\mathit{id}$ when $o_r$ has been applied, and $k_r^\\mathrm{after}$ appears immediately after $k_r^\\mathrm{before}$ in the common ancestor of $o_r$ and $o_s$. The insertion interval of $o_s$ is the pair of keys $(k_s^\\mathrm{before}, k_s^\\mathrm{after})$ defined similarly.\n\\end{definition}\n\nIt may be the case that $k_r^\\mathrm{before}$ or $k_s^\\mathrm{before}$ is \\textsf{head}, and that $k_r^\\mathrm{after}$ or $k_s^\\mathrm{after}$ is \\textsf{tail}.\n\n\\begin{lemma}\\label{lem:insert-conflict}\nFor any two concurrent insertion operations $o_r, o_s$ in a history $H$, if $o_r.\\mathit{cur} = o_s.\\mathit{cur}$, then the order at which the inserted elements appear in the list after applying $H$ is deterministic and independent of the order of $o_r$ and $o_s$ in $H$.\n\\end{lemma}\n\n\\begin{proof}\nWithout loss of generality, assume that $o_r.\\mathit{id} < o_s.\\mathit{id}$ according to the ordering relation on Lamport timestamps. (If the operation ID of $o_r$ is greater than that of $o_s$, the two operations can be swapped in this proof.) We now distinguish the two possible orders of applying the operations:\n\n\\begin{enumerate}\n\\item $o_r$ is applied before $o_s$ in $H$. Thus, at the time when $o_s$ is applied, $o_r$ has already been applied. When applying $o_s$, since $o_r$ has a lesser operation ID, the rule $\\textsc{Insert}_1$ applies with $\\mathit{next} = o_r.\\mathit{id}$ at the latest, so the insertion position of $o_s$ must appear before $o_r$. It is not possible for $\\textsc{Insert}_2$ to skip past $o_r$.\n\n\\item $o_s$ is applied before $o_r$ in $H$. Thus, at the time when $o_r$ is applied, $o_s$ has already been applied. When applying $o_r$, the rule $\\textsc{Insert}_2$ applies with $\\mathit{next} = o_s.\\mathit{id}$, so the rule skips past $o_s$ and inserts $o_r$ at a position after $o_s$. Moreover, any list elements that appear between $o_s.\\mathit{cur}$ and $o_s$ at the time of inserting $o_r$ must have a Lamport timestamp greater than $o_s.\\mathit{id}$, so $\\textsc{Insert}_2$ also skips over those list elements when inserting $o_r$. Thus, the insertion position of $o_r$ must be after $o_s$.\n\\end{enumerate}\n\nThus, the insertion position of $o_r$ appears after the insertion position of $o_s$, regardless of the order in which the two operations are applied. The ordering depends only on the operation IDs, and since these IDs are fixed at the time the operations are generated, the list order is determined by the IDs.\n\\end{proof}\n\n\\begin{lemma}\\label{lem:insert-reorder}\nIn an operation history $H$, an insertion operation is commutative with respect to concurrent insertion operations to the same list.\n\\end{lemma}\n\n\\begin{proof}\nGiven any two concurrent insertion operations $o_r, o_s$ in $H$, we must show that the document state does not depend on the order in which $o_r$ and $o_s$ are applied.\n\nEither $o_r$ and $o_s$ have the same insertion interval as defined in Definition~\\ref{def:insert-interval}, or they have different insertion intervals. If the insertion intervals are different, then by Lemma~\\ref{lem:insert-between} the operations cannot affect each other, and so they have the same effect regardless of their order. So we need only analyze the case in which they have the same insertion interval $(k^\\mathrm{before}, k^\\mathrm{after})$.\n\nIf $o_r.\\mathit{cur} = o_s.\\mathit{cur}$, then by Lemma~\\ref{lem:insert-conflict}, the operation with the greater operation ID appears first in the list, regardless of the order in which the operations are applied. If $o_r.\\mathit{cur} \\not= o_s.\\mathit{cur}$, then one or both of the cursors must refer to a list element that appears between $k^\\mathrm{before}$ and $k^\\mathrm{after}$, and that did not yet exist in the common ancestor (Definition~\\ref{def:common-ancestor}).\n\nTake a cursor that differs from $k^\\mathrm{before}$: the list element it refers to was inserted by a prior operation, whose cursor in turn refers to another prior operation, and so on. Following this chain of cursors for a finite number of steps leads to an operation $o_\\mathrm{first}$ whose cursor refers to $k^\\mathrm{before}$ (since an insertion operation always inserts at a position after the cursor).\n\nNote that all of the operations in this chain are causally dependent on $o_\\mathrm{first}$, and so they must have a Lamport timestamp greater than $o_\\mathrm{first}$. Thus, we can apply the same argument as in Lemma~\\ref{lem:insert-conflict}: if $\\textsc{Insert}_2$ skips over the list element inserted by $o_\\mathrm{first}$, it will also skip over all of the list elements that are causally dependent on it; if $\\textsc{Insert}_1$ inserts a new element before $o_\\mathrm{first}$, it is also inserted before the chain of operations that is based on it.\n\nTherefore, the order of $o_r$ and $o_s$ in the final list is determined by the Lamport timestamps of the first insertions into the insertion interval after their common ancestor, in the chains of cursor references of the two operations. Since the argument above applies to all pairs of concurrent operations $o_r, o_s$ in $H$, we deduce that the final order of elements in the list depends only on the operation IDs but not the order of application, which shows that concurrent insertions to the same list are commutative.\n\\end{proof}\n\n\\begin{lemma}\\label{lem:delete-commute}\nIn a history $H$, a deletion operation is commutative with respect to concurrent operations.\n\\end{lemma}\n\n\\begin{proof}\nGiven a deletion operation $o_d$ and any other concurrent operation $o_c$, we must show that the document state after applying both operations does not depend on the order in which $o_d$ and $o_c$ were applied.\n\nThe rules in Figure~\\ref{fig:clear-rules} define how a deletion operation $o_d$ is applied: starting at the cursor in the operation, they recursively descend the subtree, removing $o_d.\\mathit{deps}$ from the presence set $\\mathsf{pres}(k)$ at all branch nodes in the subtree, and updating all registers to remove any values written by operations in $o_d.\\mathit{deps}$.\n\nIf $o_c$ is an assignment or insertion operation, the \\textsc{Assign} rule adds $o_c.\\mathit{id}$ to the mapping from operation ID to value for a register, and the \\textsc{Descend}, \\textsc{Assign}, \\textsc{Empty-Map} and \\textsc{Empty-List} rules add $o_c.\\mathit{id}$ to the presence sets $\\mathsf{pres}(k)$ along the path through the document tree described by the cursor.\n\nIf $o_d.\\mathit{cur}$ is not a prefix of $o_c.\\mathit{cur}$, the operations affect disjoint subtrees of the document, and so they are trivially commutative. Any state changes by \\textsc{Descend} and $\\textsc{Add-ID}_1$ along the shared part of the cursor path are applied using the set union operator $\\cup$, which is commutative.\n\nNow consider the case where $o_d.\\mathit{cur}$ is a prefix of $o_c.\\mathit{cur}$. Since $o_c$ is concurrent with $o_d$, we know that $o_c.\\mathit{id} \\notin o_d.\\mathit{deps}$. Therefore, if $o_c$ is applied before $o_d$ in the history, the \\textsc{Clear-*} rules evaluating $o_d$ will leave any occurrences of $o_c.\\mathit{id}$ in the document state undisturbed, while removing any occurrences of operations in $o_d.\\mathit{deps}$.\n\nIf $o_d$ is applied before $o_c$, the effect on presence sets and registers is the same as if they had been applied in the reverse order. Moreover, $o_c$ applies in the same way as if $o_d$ had not been applied previously, because applying a deletion only modifies presence sets and registers, without actually removing map keys or list elements, and because the rules for applying an operation are not conditional on the previous content of presence sets and registers.\n\nThus, the effect of applying $o_c$ before $o_d$ is the same as applying $o_d$ before $o_c$, so the operations commute.\n\\end{proof}\n\n\\begin{lemma}\\label{lem:assign-commute}\nIn a history $H$, an assignment operation is commutative with respect to concurrent operations.\n\\end{lemma}\n\n\\begin{proof}\nGiven an assignment $o_a$ and any other concurrent operation $o_c$, we must show that the document state after applying both operations does not depend on the order in which $o_a$ and $o_c$ were applied.\n\nThe rules \\textsc{Assign}, \\textsc{Empty-Map} and \\textsc{Empty-List} define how an assignment operation $o_a$ is applied, depending on the value being assigned. All three rules first clear any causally prior state from the cursor at which the assignment is occurring; by Lemma~\\ref{lem:delete-commute}, this clearing operation is commutative with concurrent operations, and leaves updates by concurrent operations untouched.\n\nThe rules also add $o_a.\\mathit{id}$ to the presence set identified by the cursor, and \\textsc{Descend} adds $o_a.\\mathit{id}$ to the presence sets on the path from the root of the document tree described by the cursor. These state changes are applied using the set union operator $\\cup$, which is commutative.\n\nFinally, in the case where value assigned by $o_a$ is a primitive and the \\textsc{Assign} rule applies, the mapping from operation ID to value is added to the register by the expression $\\mathit{child}[\\,\\mathit{id} \\mapsto \\mathit{val}\\,]$. If $o_c$ is not an assignment operation or if $o_a.\\mathit{cursor} \\not= o_c.\\mathit{cursor}$, the operations are independent and thus trivially commutative.\n\nIf $o_a$ and $o_c$ are assignments to the same cursor, we use the commutativity of updates to a partial function: $\\mathit{child}[\\,\\mathit{id}_1 \\mapsto \\mathit{val}_1\\,]\\,[\\,\\mathit{id}_2 \\mapsto \\mathit{val}_2\\,] = \\mathit{child}[\\,\\mathit{id}_2 \\mapsto \\mathit{val}_2\\,]\\,[\\,\\mathit{id}_1 \\mapsto \\mathit{val}_1\\,]$ provided that $\\mathit{id}_1 \\not= \\mathit{id}_2$. Since operation IDs (Lamport timestamps) are unique, two concurrent assignments add two different keys to the mapping, and their order is immaterial.\n\nThus, all parts of the process of applying $o_a$ have the same effect on the document state, regardless of whether $o_c$ is applied before or after $o_a$, so the operations commute.\n\\end{proof}\n\n\\begin{lemma}\\label{lem:op-commute}\nGiven an operation history $H=\\langle o_1, \\dots, o_n \\rangle$ from a valid execution, a new operation $o_{n+1}$ from that execution can be inserted at any point in $H$ after $o_{n+1}.\\mathit{deps}$ have been applied. For all histories $H'$ that can be constructed this way, the document state resulting from applying the operations in $H'$ in order is the same, and independent of the ordering of any concurrent operations in $H$.\n\\end{lemma}\n\n\\begin{proof}\n$H$ can be split into a prefix and a suffix, as described in the proof of Theorem~\\ref{thm:convergence}. The suffix contains only operations that are concurrent with $o_{n+1}$, and we allow $o_{n+1}$ to be inserted at any point after the prefix. We then prove the lemma case-by-case, depending on the type of mutation in $o_{n+1}$. \n\nIf $o_{n+1}$ is a deletion, by Lemma~\\ref{lem:delete-commute} it is commutative with all operations in the suffix, and so $o_{n+1}$ can be inserted at any point within, before, or after the suffix without changing its effect on the final document state. Similarly, if $o_{n+1}$ is an assignment, by Lemma~\\ref{lem:assign-commute} it is commutative with all operations in the suffix.\n\nIf $o_{n+1}$ is an insertion, let $o_c$ be any operation in the suffix, and consider the cases of $o_{n+1}$ being inserted before and after $o_c$ in the history. If $o_c$ is a deletion or assignment, it is commutative with $o_{n+1}$ by Lemma~\\ref{lem:delete-commute} or Lemma~\\ref{lem:assign-commute} respectively. If $o_c$ is an insertion into the same list as $o_{n+1}$, then by Lemma~\\ref{lem:insert-reorder} the operations are commutative. If $o_c$ is an insertion into a different list in the document, its effect is independent from $o_{n+1}$ and so the two operations can be applied in any order.\n\nThus, $o_{n+1}$ is commutative with respect to any concurrent operation in $H$. Therefore, $o_{n+1}$ can be inserted into $H$ at any point after its causal dependencies, and the effect on the final document state is independent of the position at which the operation is inserted.\n\\end{proof}\n\nThis completes the induction step in the proof of Theorem~\\ref{thm:convergence}, and thus proves convergence of our datatype.\n\n\\fi % includeappendix\n\\end{document}\n"
│  
└─ VectorClock 1000000.259781